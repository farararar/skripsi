{"version":3,"sources":["pages/GenereatePDF/logo.png","services/Context/CreateDataContext.js","services/Api/AccountingApi.js","services/Context/AuthContext.js","services/Route/AccountantRoute.js","services/Route/AdminRoute.js","services/Route/PrivateRoute.js","components/layouts/ListMenu.jsx","components/layouts/NotificationComponent.jsx","components/layouts/Layout.jsx","pages/Authentication/Signin.jsx","components/Dashboard/PanelInformationComponent.jsx","components/Dashboard/ChartComponent.jsx","services/Context/AccountContext.js","pages/Home/Home.jsx","pages/Test.jsx","components/Transaksi/TransaksiCabang/ListTransaksiComponent.jsx","pages/Transaksi/Cabang/TransaksiCabang.jsx","services/Context/IncomeContext.js","components/Transaksi/TransaksiPusat/ListPemasukanComponent.jsx","services/Context/CustomerContext.js","services/Context/ProductContext.js","components/Transaksi/TransaksiPusat/EditPemasukanComponent.jsx","components/Transaksi/Pemasukkan/ReviewPemasukanComponent.jsx","pages/Transaksi/ReviewPemasukan.jsx","pages/Transaksi/Pusat/TransaksiPusat.jsx","services/Context/OutcomeContext.js","components/Transaksi/Pengeluaran/ReviewPengeluaranComponent.jsx","pages/Transaksi/Pengeluaran/ReviewPengeluaran.jsx","pages/GenereatePDF/components/reports/InvoiceTitle.js","pages/GenereatePDF/components/reports/BillTo.js","pages/GenereatePDF/components/reports/InvoiceNo.js","pages/GenereatePDF/components/reports/InvoiceTableHeader.js","pages/GenereatePDF/components/reports/InvoiceTableRow.js","pages/GenereatePDF/components/reports/InvoiceTableBlankSpace.js","pages/GenereatePDF/components/reports/InvoiceTableFooter.js","pages/GenereatePDF/components/reports/InvoiceItemsTable.js","pages/GenereatePDF/components/reports/InvoiceThankYouMsg.js","pages/GenereatePDF/components/reports/Invoice.js","pages/GenereatePDF/data/invoice.js","pages/GenereatePDF/App.js","services/Context/JournalContext.js","components/Jurnal/JurnalPerhariComponent.jsx","components/Jurnal/JurnalManualComponent.jsx","pages/Jurnal/JurnalPerhari.jsx","services/Context/LedgerContext.js","components/BukuBesar/BukuBesarComponent.jsx","pages/BukuBesar/BukuBesar.jsx","components/BukuBesar/BukuBesarKeuanganComponent.jsx","pages/Jurnal/JurnalLaporanKeuangan.jsx","services/Route/MarketingRoute.js","components/Transaksi/Pemasukkan/TransaksiMasukComponent.jsx","pages/Transaksi/Pusat/TransaksiMasuk.jsx","components/Transaksi/KeuanganComponent.jsx","pages/Transaksi/Keuangan/Keuangan.jsx","components/Transaksi/ListKeuanganComponent.jsx","pages/Transaksi/Keuangan/ListKeuangan.jsx","components/Jurnal/JurnalPerbulanComponent.jsx","pages/Jurnal/JurnalPerBulan.jsx","components/Transaksi/Pengeluaran/TransaksiKeluarComponent.jsx","components/Transaksi/Pengeluaran/EditPengeluaranComponent.jsx","pages/Transaksi/Pengeluaran/TransaksiKeluar.jsx","components/Transaksi/Pengeluaran/ListPengeluaranComponent.jsx","pages/Transaksi/Pengeluaran/ListTransaksiKeluar.jsx","components/BukuBesar/NeracaSaldoComponent.jsx","pages/BukuBesar/NeracaSaldo.jsx","Router.js","services/Context/MaterialCategoryContext.js","services/Context/RawMaterialContext.js","services/Context/StockOpnameContext.js","App.js","index.js"],"names":["module","exports","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","API","CreateDataContext","action","type","loading","message","payload","isAuthenticated","window","localStorage","getItem","JSON","parse","Signin","email","password","axios","post","then","res","data","success","setItem","stringify","location","reload","alert","catch","error","AccountantRoute","Component","component","rest","useContext","AuthContext","render","props","level","to","pathname","from","AdminRoute","PrivateRoute","withRouter","classes","useStyles","useState","open","setOpen","openDialogApprove","setOpenDialogApprove","open2","setOpen2","handleApproveCancle","today","Date","date","getFullYear","getMonth","getDate","Logout","removeItem","history","push","List","aria-labelledby","subheader","ListSubheader","id","className","root","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","Divider","link","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","nested","makeStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","textDecoration","emails","avatar","blue","SimpleDialog","selectedValue","handleListItemClick","map","ListItemAvatar","Avatar","NotificationComponent","setSelectedValue","IconButton","Badge","badgeContent","Copyright","Typography","variant","align","Link","href","Layout","anchorEl","setAnchorEl","Boolean","handleClose","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","container","footer","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","marginTop","grey","setValue","handleChange","name","target","Grid","item","xs","sm","md","image","Paper","elevation","square","form","onSubmit","e","preventDefault","TextField","onChange","margin","required","fullWidth","label","autoComplete","FormControl","textField","InputLabel","OutlinedInput","showPassword","endAdornment","InputAdornment","labelWidth","FormControlLabel","control","Checkbox","LinearProgress","style","top","submit","disabled","Box","mt","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","secondary","main","PanelInformationComponent","useEffect","console","log","lg","tag","total_pemasukan","transaksi_pemasukan","total_pengeluaran","transaksi_pengeluaran","ChartComponent","nama","alamat","dataLine","labels","grafik","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","incomes","outcomes","chart","options","responsive","listAccount","menu","ListAccount","get","Menu","TransaksiPusat","AccountContext","fluid","Test","cascade","narrow","ecommerce","color-block-dark","danger-color-dark","z-depth-2","src","alt","placeholder","gradient","rounded","size","tanggal","TransaksiCabang","listIncome","concat","ListIncomeBl","currentPage","current_page","totalData","total","detailIncome","detailAccount","detailUser","detailCustomer","detailReviewer","invoiceIncome","ListKeuangan","AddIncome","callback","InvoiceIncome","tamp","param","invoice_no","invoice_number","balance","company","customer","phone","address","trans_date","due_date","grand_total","replace","items","products","ListIncome","keyword","GetDetailIncome","account","user","reviewed_by","ReviewIncome","put","ListIncomeNext","page","UpdateIncome","headers","DeleteIncome","delete","ValidateIncome","array","AddPelunasan","dataTamp","Next","NextR","IncomeContext","search","setSearch","setListData","useHistory","login","setLogin","triggerPDF","timer","setTimeout","clearTimeout","positiion","left","CircularProgress","i","is_valid","payment_method","review_status","review","userId","length","outline","listCustomer","ListCustomer","listProduct","unitPrice","AddProduct","formData","a","_boundary","ListProduct","DeleteProduct","AddIngredients","UnitPrice","unit_price","ProductContext","openAletDouble","setOpenAletDouble","setSelectedDate","setDataTanggal","setTanggal","setBulan","setAmmount","setImage","count1","setCount","product","setProduct","tempProduct","setTempProduct","selectedDateTempo","setSelectedDateTempo","subtotal","setSubtotal","setTotal","price","setPrice","account_id","user_id","description","information","shift","uang_muka","jatuh_tempo","ket","stok","tex_dp","Number","slice","undefined","set_ammount","unit","month","paymentod","multiline","rowsMax","temp","tp","ti","vp","subtol","prc","index","product_id","parseInt","stock","split","bln","data_tanggal","loopingTanggal","handleChangeProduk","id_prod","price_prod","Object","values","includes","handleDoubleDialog","removeCard","new_qty","isNaN","updateTotalPrice","total_price","sum","reduce","b","handleDateTempoChange","dateTempo","formattedDateTempo","handleDoubleCancle","handleApproveProccess","formdata","FormData","keys","append","urlToObject","result","tt","Promise","all","inputURI","inputMIME","binaryVal","indexOf","atob","unescape","blobArray","charCodeAt","Blob","newArr","InputLabelProps","shrink","MuiPickersUtilsProvider","utils","DateFnsUtils","format","views","formattedDate","KeyboardButtonProps","cursor","Select","sif","jatuhtempo","Card","CardContent","fontSize","InputProps","readOnly","ammount","displayType","thousandSeparator","prefix","ReviewPemasukanComponent","useParams","setDataBulan","setForm","bulan","data_bulan","loopingBulan","obj","desc","customerName","paymentMethod","jatuhTempo","uangMukaB","remaining_payment","uangMuka","down_payment","reviewer_id","handleRejectedProccess","onchange","review_date","icon","rows","ReviewTransaksi","Goto","setGoto","setData","EditPemasukanComponent","listOutcomeType","listOutcome","detailOutcome","ListOutcomeType","AddOutcome","ListOutcome","ListOutcomeTypeBy","DetailOutcome","DeleteOutcome","UpdateOutcome","ReviewOutcome","PaymentMethod","ReviewPengeluaranComponent","GetdetailOutcome","OutcomeContext","category","qty","params","class","ReviewTransaksiKeluar","styles","StyleSheet","titleContainer","reportTitle","letterSpacing","textAlign","textTransform","InvoiceTitle","headerContainer","billTo","fontFamily","BillTo","invoice","invoiceNoContainer","invoiceDateContainer","invoiceDate","fontStyle","InvoiceNo","borderBottomColor","borderBottomWidth","borderRightColor","borderRightWidth","rate","amount","InvoiceTableHeader","row","borderLeftColor","borderLeftWidth","InvoiceTableRow","toString","InvoiceTableBlankSpace","rowsCount","blankRows","Array","x","InvoiceTableFooter","tableContainer","flexWrap","borderWidth","InvoiceItemsTable","InvoiceThankYouMsg","lineHeight","logo","Invoice","App","listJournalDaily","additionalData","listLaporanKeuangan","GetDailyJournal","additional_data","PostingJournal","url","JournalManual","status","DeleteJournal","ListLaporanKeuangan","filter","since","until","journalManual","JurnalPerhariComponent","Change","userData","JournalContext","setReview","memo","setMemo","save","setSave","posting","setPosting","selectedDate","setDate","handleSave","justify","fontWeight","textWhite","reference_number","debit","credit","review_harian","total_debit","total_credit","constData","akun","kredit","JurnalPerHari","match","change","setChange","MDBBreadcrumbItem","listLedger","listNeraca","ledgerAdditional","ListLedger","year","daftar","ListNeraca","BukuBesarComponent","LedgerContext","selectedDate2","setSelectedDate2","start_date","end_date","handleSelectAccount","Tanggal","Debet","Kredit","BukuBesar","d","BukuBesarKeuanganComponent","tahun","FilterRow","setYears","now","getUTCFullYear","years","v","idx","moment","externalUrl","setExternalUrl","handleChangeValue","marginBottom","alignContent","withStyles","head","common","black","white","body","TableCell","hover","TableRow","table","minWidth","LaporanKeuangan","MarketingRoute","onChangeSubtotal","CustomerContext","prod_price","TransaksiMasuk","repayment","openAlertLimit","setOpenAlertLimit","Math","abs","onTagsChange","handleImage","files","createObjectURL","media","File","webkitURL","URL","AlertCencel","datas","setValueBulanan","setValueUM","handleValue","top100Films","Autocomplete","getOptionLabel","option","renderInput","accept","htmlFor","borderRadius","boxShadow","Icon","flexShrink","useSelect","img","q","Keuangan","StyledTableCell","list_data","bulan_terakhir","bt","pjt","belum_dibayar","bb","TableContainer","Table","TableHead","TableBody","scope","payment_status","tablebody","JurnalPerbulanComponent","setTahun","setDebit","setKredit","c","review_bulanan","JurnalPerbulan","setNext","typeOutcome","setTypeOutcome","outcometype_id","handleChangeTypeOutcome","updated","setUpdated","goBack","TransaksiKeluar","EditPengeluaranComponent","handleNext","ListTransaksiKeluar","NeracaSaldoComponent","NeracaSaldo","Router","path","exact","Home","JurnalPerBulan","GeneratePDF","listMaterialCategory","ListMaterialCategory","AddMaterialCategory","DeleteMaterialCategory","listMaterialRaw","listUnit","listReportMaterial","listStok","listStatus","listRiwayatProduksi","report","AddRawMaterial","ListRawMaterial","UpdateStok","ListUnit","DeleteBahanBaku","ListReportMaterial","ListStok","ListStatus","ListRiwayatProduksi","StartProduksi","StopProduksi","patch","DetailPorduksi","listStockOpname","ListStockOpname","AddStockOpname","disableYellowBox","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba1ef6ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.16bcbe8d.png\";","import React, {useReducer} from 'react'\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n    const Context = React.createContext()\r\n\r\n    const Provider = ({children}) => {\r\n        const [state, dispatch] = useReducer(reducer, defaultValue)\r\n\r\n        const boundActions = {}\r\n        for (let key in actions){\r\n            boundActions[key] = actions[key](dispatch)\r\n        }\r\n\r\n        return (\r\n            <Context.Provider value={{ state, ...boundActions }}>\r\n                {children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n    return {Context, Provider}\r\n}","//export const API = 'https://newdemo.aplikasiskripsi.com/farah_accounting/public';\r\nexport const API = 'http://localhost/farah_accounting_ws/public';","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst AuthReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setLogin = (data) => {\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('login', JSON.stringify(data))\r\n    }\r\n}\r\n\r\nconst isAuthenticated = dispatch => () => {\r\n    if(typeof window == 'undefined'){\r\n        return false\r\n    }\r\n    if(localStorage.getItem('login')){\r\n        return JSON.parse(localStorage.getItem('login'))\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst Signin = dispatch => ({email, password}) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengautentikasi Pengguna...'})\r\n    axios.post(`${API}/login`, { email: email, password: password })\r\n      .then(res => {\r\n        // alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            // alert(res)\r\n            // console.log(res)\r\n            dispatch({type: 'NO-LOADING'})\r\n            setLogin(res.data)\r\n            window.location.reload();\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        // alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n// const Signin = dispatch => async ({email, password}) => {\r\n//     dispatch ({type: 'LOADING', payload: 'Mengautentikasi Pengguna...'})\r\n//     try {\r\n//         let response = await fetch(`${API}/login`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Accept' : 'application/json',\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 email: email,\r\n//                 password: password\r\n//             })\r\n//         })\r\n//         let responseJson = await response.json()\r\n//         if(responseJson.success){\r\n//             dispatch({type: 'NO-LOADING'})\r\n//             setLogin(responseJson.data)\r\n//         }else{\r\n//             alert(responseJson.message)\r\n//             dispatch({type: 'NO-LOADING'})\r\n//         }\r\n//     } catch (err) {\r\n//         dispatch({type: 'NO-LOADING'})\r\n//         alert(err)\r\n//     }\r\n// }\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    AuthReducer,\r\n    {isAuthenticated, Signin},\r\n    {loading: false, message:''}\r\n)","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst AccountantRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Accountant' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default AccountantRoute;\r\n\r\n","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst AdminRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Admin' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;\r\n\r\n","import React, {useContext} from 'react';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to={{ pathname: '/signin', state: {from: props.location} }} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Context as AuthContext } from '../../services/Context/AuthContext'\r\nimport {\r\n  makeStyles, ListSubheader, List, ListItem, ListItemIcon, ListItemText, Collapse, Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Button,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from '@material-ui/core'\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\nfunction ListMenu(props) {\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [open1, setOpen1] = useState(true);\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [open2, setOpen2] = useState(true);\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickJurnal = () => {\r\n    setOpen2(!open2);\r\n  };\r\n\r\n  const handleClickOutcome = () => {\r\n    setOpen1(!open1);\r\n  };\r\n\r\n  let today = new Date()\r\n  let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\r\n  const HandleLogout = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Logout ?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Apakah anda yakin untuk keluar ?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={Logout}\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          Logout\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n\r\n  const Logout = () => {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.removeItem('login')\r\n      props.history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Menu\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      {HandleLogout()}\r\n      <Divider />\r\n      <Link to='/' className={classes.link}>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Marketing' && (\r\n        <>\r\n          <Link to={`/transaksi-masuk`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PaymentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Transaksi Masuk\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to={`/keuangan`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PaymentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Keuangan\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to={`/list-transaksi-pusat`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"List Transaksi\" />\r\n            </ListItem>\r\n          </Link>\r\n        </>\r\n      )}\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Admin' && (\r\n        <>\r\n          <Link to={`/transaksi-keluar`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PaymentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Transaksi Keluar\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to={`/list-pengeluaran-admin`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"List Transaksi\" />\r\n            </ListItem>\r\n          </Link>\r\n        </>\r\n      )}\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Accountant' && (\r\n        <Fragment>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <FormatListBulletedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"List Transaksi\" />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {/*<Link to='/list-transaksi-cabang' className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Cabang\" />\r\n                </ListItem>\r\n                </Link>*/}\r\n              <Link to='/list-transaksi-pusat' className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Daftar Pemasukan\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/list-pengeluaran`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Daftar Pengeluaran\" />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </Collapse>\r\n          <ListItem button onClick={handleClickJurnal}>\r\n            <ListItemIcon>\r\n              <ImportContactsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Jurnal\" />\r\n            {open2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={!open2} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <Link to={`/jurnal-perhari/${date}`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Jurnal Per Hari\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/jurnal-perbulan`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Jurnal Per Bulan\" />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <Link to={`/buku-besar`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Buku Besar\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to={`/neraca-saldo`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Neraca Saldo\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to={`/laporan-keuangan`} className={classes.link} >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AssessmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Laporan Keuangan\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n\r\n      <ListItem button onClick={() => handleApproveDialog()}>\r\n        <ListItemIcon>\r\n          <ExitToAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Keluar\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default withRouter(ListMenu)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black'\r\n  }\r\n}));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Badge, IconButton } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Notification</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function NotificationComponent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n        </IconButton>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ListMenu from './ListMenu';\r\nimport NotificationComponent from './NotificationComponent';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Accounting App\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open2 = Boolean(anchorEl);\r\n  \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            TOKO ROTI AMAYA\r\n          </Typography>\r\n          <NotificationComponent props={props}/>\r\n          {/* <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n          <div>\r\n              <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open2}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n       \r\n        {/* <List>{mainListItems}</List> */}\r\n        <ListMenu/>\r\n        \r\n        {/* <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        {/* <Container className={classes.container}>\r\n            {props.children}\r\n        </Container> */}\r\n        {props.children}\r\n        <Container className={classes.container}>\r\n          <footer className={classes.footer}>\r\n              <Container maxWidth=\"sm\">\r\n                <Copyright />\r\n              </Container>\r\n          </footer>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));","import React, { useContext, useState } from 'react';\r\nimport { Context as AuthContext } from '../../services/Context/AuthContext'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Accounting App\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Signin(props) {\r\n  const { state, isAuthenticated, Signin } = useContext(AuthContext)\r\n  const [value, setValue] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const { email, password } = value\r\n\r\n  const classes = useStyles();\r\n\r\n  const checkLogin = () => {\r\n    if (isAuthenticated()) {\r\n      return <Redirect to='/' />\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValue({ ...value, showPassword: !value.showPassword });\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    setValue({\r\n      ...value,\r\n      [name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    Signin({ email, password })\r\n  }\r\n\r\n  const showLoading = () => (\r\n    state.loading && (\r\n      <LinearProgress style={{ top: 27, alignItems: 'center', }} />\r\n    )\r\n  )\r\n\r\n  const textButtonSubmit = () => {\r\n    if (state.loading) {\r\n      return state.message\r\n    } else {\r\n      return 'MASUK'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      {checkLogin()}\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            TOKO ROTI AMAYA\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit} >\r\n            <TextField value={email} onChange={handleChange('email')} variant=\"outlined\" margin=\"normal\" required fullWidth label=\"Email Pengguna\" autoComplete=\"email\" autoFocus />\r\n            <FormControl className={classes.textField} margin=\"normal\" variant=\"outlined\" required fullWidth label=\"Kata Sandi\">\r\n              <InputLabel>Kata Sandi</InputLabel>\r\n              <OutlinedInput\r\n                autoComplete=\"current-password\"\r\n                type={value.showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={handleChange('password')}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {value.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={70}\r\n              />\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {showLoading()}\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} disabled={state.loading}>\r\n              {textButtonSubmit()}\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage: 'url(https://images.unsplash.com/photo-1477763858572-cda7deaa9bc5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","import React, { Fragment, useEffect } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBBox } from \"mdbreact\";\r\n\r\n\r\nconst PanelInformationComponent = ({ data }) => {\r\n    useEffect(()=>{\r\n        console.log('data = hasasere = ',data);\r\n    },[])\r\n    return (\r\n        <Fragment>\r\n            <MDBRow>\r\n                <MDBCol lg='6' md='6' className='mb-lg-0 mb-4'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                        <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                            <MDBCardHeader color=\"primary-color\" tag=\"h3\">\r\n                                Penjualan\r\n                                </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>{data.total_pemasukan}</MDBCardTitle>\r\n                                <MDBCardText>\r\n                                    {data.transaksi_pemasukan} Transaksi Pada Bulan Ini\r\n                                    </MDBCardText>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBBox>\r\n                </MDBCol>\r\n                <MDBCol lg='6' md='6' className='mb-lg-0 mb-4'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                        <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                            <MDBCardHeader color=\"primary-color\" tag=\"h3\">\r\n                                Pengeluaran\r\n                                </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>{data.total_pengeluaran}</MDBCardTitle>\r\n                                <MDBCardText>\r\n                                    {data.transaksi_pengeluaran} Transaksi Pada Bulan Ini\r\n                                    </MDBCardText>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBBox>\r\n                </MDBCol>\r\n            </MDBRow>\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default PanelInformationComponent;\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBCard, MDBCardBody, MDBCardHeader, MDBCardText, MDBCardTitle, MDBContainer } from \"mdbreact\";\r\n\r\nconst ChartComponent = ({data}) => {\r\n    const [test, setTest] = useState({\r\n        nama: 'iqbal',\r\n        alamat: 'tanggulun'\r\n    })\r\n    const [chart, setChart] = useState({\r\n        dataLine: {\r\n            labels: data.grafik?data.grafik.labels:[],\r\n            datasets: [\r\n                {\r\n                    label: \"Penjualan\",\r\n                    fill: true,\r\n                    lineTension: 0.3,\r\n                    backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n                    borderColor: \"rgb(35, 26, 136)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(35, 26, 136)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: data.grafik?data.grafik.incomes:[]\r\n                },\r\n                {\r\n                    label: \"Pengeluaran\",\r\n                    fill: true,\r\n                    lineTension: 0.3,\r\n                    backgroundColor: \"rgba(225, 204,230, .3)\",\r\n                    borderColor: \"rgb(205, 130, 158)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(205, 130,1 58)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: data.grafik?data.grafik.outcomes:[]\r\n                },\r\n              \r\n            ]\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        console.log('data = here = ',data);\r\n    },[])\r\n    return(\r\n        <Fragment>\r\n            <MDBCard style={{  marginTop: \"1rem\" }}> \r\n                <MDBCardHeader color=\"\" tag=\"h3\">\r\n                    Statistik Keuangan Tahun {new Date().getFullYear()}\r\n                </MDBCardHeader>\r\n                <MDBCardBody> \r\n                    <Line data={chart.dataLine} options={{ responsive: true }} />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default ChartComponent\r\n\r\n\r\n// class ChartsPage extends React.Component {\r\n//   state = {\r\n//     dataLine: {\r\n//       labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n//       datasets: [\r\n//         {\r\n//           label: \"My First dataset\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(225, 204,230, .3)\",\r\n//           borderColor: \"rgb(205, 130, 158)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(205, 130,1 58)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data: [65, 59, 80, 81, 56, 55, 40]\r\n//         },\r\n//         {\r\n//           label: \"My Second dataset\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n//           borderColor: \"rgb(35, 26, 136)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(35, 26, 136)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data: [28, 48, 40, 19, 86, 27, 90]\r\n//         }\r\n//       ]\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <MDBContainer>\r\n//         <h3 className=\"mt-5\">Line chart</h3>\r\n//         <Line data={this.state.dataLine} options={{ responsive: true }} />\r\n//       </MDBContainer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ChartsPage;","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport { API } from '../Api/AccountingApi'\r\n\r\nconst AccountReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-ACCOUNT':\r\n            return {\r\n                ...state,\r\n                listAccount: action.payload\r\n            }\r\n        case 'MENU':\r\n            return {\r\n                ...state,\r\n                menu: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListAccount = dispatch => () => {\r\n    dispatch({ type: 'LOADING', payload: 'Menyimpan Transaksi' })\r\n    axios.get(`${API}/account`)\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-ACCOUNT', payload: res.data.data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n\r\nconst Menu = dispatch => () => {\r\n    dispatch({ type: 'LOADING', payload: 'Menyimpan Transaksi' })\r\n    axios.get(`${API}/dashboard`)\r\n        .then(res => {\r\n            console.log('menu = ', res.data.data);\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'MENU', payload: res.data.data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nexport const { Provider, Context } = CreateDataContext(\r\n    AccountReducer,\r\n    { ListAccount, Menu },\r\n    { loading: false, message: '', listAccount: [], menu: [] }\r\n)","import React, { Fragment, useEffect, useContext } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport PanelInformationComponent from '../../components/Dashboard/PanelInformationComponent';\r\nimport ChartComponent from '../../components/Dashboard/ChartComponent';\r\nimport {Context as AccountContext} from '../../services/Context/AccountContext';\r\nexport default function TransaksiPusat(props) {\r\n    const {\r\n        state,\r\n        Menu\r\n      } = useContext(AccountContext);\r\n\r\n      useEffect(()=>{\r\n        Menu();\r\n      },[])\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem ><b>Dashboard | Halaman Utama</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <PanelInformationComponent props={props} data={state.menu} />\r\n                {JSON.stringify(state.menu)!=='[]'&&<ChartComponent props={props} data={state.menu} />}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard } from \"mdbreact\";\r\n\r\nconst Test = () => {\r\n  return (\r\n    <div>\r\n            <MDBTypography tag='h2'><b>Transaksi Pusat</b></MDBTypography>\r\n            <MDBContainer className=\"mt-3\" fluid>\r\n                <MDBRow lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                    <MDBCol color='red'>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                </MDBRow>\r\n\r\n                <MDBRow>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce color-block-dark danger-color-dark z-depth-2> \r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>    \r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4 mt-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Test;","import React, { Fragment } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline } from \"mdbreact\";\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nconst ListTransaksiComponent = (props) => {\r\n\r\n    const handleClickReview = (id) => {\r\n        props.history.push(`/review-transaksi/${id}`)\r\n    }\r\n    const handleClickGenerate = (tanggal) => {\r\n        props.history.push(`/jurnal-perhari/${tanggal}`)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MDBContainer fluid>\r\n                <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBCol md=\"3\">\r\n                        <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" />\r\n                            <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                                Cari\r\n                                </MDBBtn>\r\n                        </MDBFormInline>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <h4 className=\"pt-2 mx-2\"> 1. Transaksi Cabang <small>Pemasukan</small></h4>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    <MDBBtn color=\"cyan\" size=\"sm\" onClick={()=>handleClickReview(2)} >Review</MDBBtn>\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" onClick={()=>handleClickGenerate('2020-08-20')}>Generate</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n\r\n                <MDBCard>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <h4 className=\"pt-2 mx-2\"> 1. Transaksi Cabang <small>Pemasukan</small></h4>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    <MDBBtn color=\"cyan\" size=\"sm\">Review</MDBBtn>\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\">Generate</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(ListTransaksiComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBContainer, MDBTypography } from \"mdbreact\";\r\nimport ListTransaksiComponent from '../../../components/Transaksi/TransaksiCabang/ListTransaksiComponent';\r\n\r\n\r\nexport default function TransaksiCabang() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem><b>List Transaksi Cabang</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListTransaksiComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from \"./CreateDataContext\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../Api/AccountingApi\";\r\n\r\nconst IncomeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: action.payload,\r\n      };\r\n    case \"NO-LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: \"\",\r\n      };\r\n    case \"LIST-INCOME\":\r\n      return {\r\n        ...state,\r\n        listIncome: action.payload,\r\n      };\r\n    case \"LIST-INCOME-NEXT\":\r\n      return {\r\n        ...state,\r\n        listIncome: state.listIncome.concat(action.payload),\r\n      };\r\n    case \"LIST-INCOME-BL\":\r\n      return {\r\n        ...state,\r\n        ListIncomeBl: action.payload,\r\n      };\r\n    case \"PAGE-INFORMATION\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload.current_page,\r\n        totalData: action.payload.total,\r\n      };\r\n    case \"DETAIL-INCOME\":\r\n      return {\r\n        ...state,\r\n        detailIncome: action.payload,\r\n      };\r\n    case \"DETAIL-ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        detailAccount: action.payload,\r\n      };\r\n    case \"DETAIL-USER\":\r\n      return {\r\n        ...state,\r\n        detailUser: action.payload,\r\n      };\r\n    case \"DETAIL-CUSTOMER\":\r\n      return {\r\n        ...state,\r\n        detailCustomer: action.payload,\r\n      };\r\n    case \"DETAIL-REVIEWER\":\r\n      return {\r\n        ...state,\r\n        detailReviewer: action.payload,\r\n      };\r\n\r\n    case \"INVOICE-INCOME\":\r\n      return {\r\n        ...state,\r\n        invoiceIncome: action.payload,\r\n      };\r\n    case \"LIST-KEUANGAN\":\r\n      return {\r\n        ...state,\r\n        ListKeuangan: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst AddIncome = (dispatch) => (data, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menyimpan Transaksi\" });\r\n  axios\r\n    .post(`${API}/income/store`, data)\r\n    .then((res) => {\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        callback();\r\n        alert(\"Transaksi Berhasil Disimpan!\");\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst AddPelunasan = (dispatch) => (data, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menyimpan Transaksi\" });\r\n  axios\r\n    .post(`${API}/income/pelunasan`, data)\r\n    .then((res) => {\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        callback();\r\n        alert(\"Transaksi Berhasil Disimpan!\");\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst UpdateIncome = (dispatch) => (id, data, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menyimpan Transaksi\" });\r\n  axios\r\n    .post(`${API}/income/${id}/update`, data, {\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(\"RESONSDE UPDATE\",res);\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        callback();\r\n        alert(\"Transaksi Berhasil Diupdate!\");\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        console.log(\"error post\")\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      console.log(\"error post\",error)\r\n    });\r\n};\r\n\r\nconst ValidateIncome = (dispatch) => (id, data, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menyimpan Transaksi\" });\r\n  axios\r\n    .put(`${API}/income/${id}/validate`, data, {\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        callback();\r\n        alert(\"Transaksi Berhasil Diupdate!\");\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst DeleteIncome = (dispatch) => (id, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menghapus Transaksi...\" });\r\n  axios\r\n    .delete(`${API}/income/${id}/delete`, {\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        callback();\r\n        alert(\"Transaksi Berhasil Dihapus!\");\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst ListIncome = (dispatch) => (keyword, callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menampilkan data transaksi....\" });\r\n  axios\r\n    .get(`${API}/income?keyword=${keyword}`)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"LIST-INCOME\", payload: res.data.data.data });\r\n        dispatch({ type: \"PAGE-INFORMATION\", payload: res.data.data });\r\n        if (callback) {\r\n          callback();\r\n        }\r\n        return res.data.data.data;\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst ListIncomeNext = (dispatch) => (page) => {\r\n  axios\r\n    .get(`${API}/income?page=${page}`)\r\n    .then((res) => {\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"LIST-INCOME-NEXT\", payload: res.data.data.data });\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst ListIncomeBl = (dispatch) => () => {\r\n    axios\r\n    .get(`${API}/list-belum-lunas`)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        let array = res.data.data;\r\n        //var newArray = array.filter(function (el) {\r\n          //return el.payment_status == 'Belum Lunas'\r\n                \r\n        //});\r\n        console.log('belum lunas',array);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"LIST-INCOME-BL\", payload: array });\r\n        \r\n        return array;\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst GetDetailIncome = (dispatch) => (id) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menampilkan Detail Transaksi....\" });\r\n  // axios.get(`${API}/invoice-income/${id}`)\r\n  axios\r\n    .get(`${API}/income/${id}`)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"DETAIL-INCOME\", payload: res.data.data });\r\n        dispatch({ type: \"DETAIL-ACCOUNT\", payload: res.data.data.account });\r\n        dispatch({ type: \"DETAIL-USER\", payload: res.data.data.user });\r\n        dispatch({ type: \"DETAIL-CUSTOMER\", payload: res.data.data.customer });\r\n        dispatch({\r\n          type: \"DETAIL-REVIEWER\",\r\n          payload: res.data.data.reviewed_by,\r\n        });\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst InvoiceIncome = (dispatch) => (id) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menampilkan Detail Transaksi....\" });\r\n  axios\r\n    .get(`${API}/invoice-income/${id}`)\r\n    // axios.get(`${API}/income/${id}`)\r\n    .then((res) => {\r\n    //   console.log(JSON.stringify(res.data));\r\n      if (res.data.success) {\r\n        const tamp = res.data.data;\r\n        const param = {\r\n          id: \"5df3180a09ea16dc4b95f910\",\r\n          invoice_no: tamp.invoice_number,\r\n          balance: \"null\",\r\n          company: tamp.customer,\r\n          email: tamp.customer+\"@gmail.com\",\r\n          phone: \"+1 (872) 588-3809\",\r\n          address: \"malang\",\r\n          trans_date: tamp.date,\r\n          due_date: \"-\",\r\n          grand_total: tamp.grand_total.replace(/[^0-9]/g, \"\"),\r\n          items: tamp.products,\r\n        };\r\n        dispatch({ type: \"INVOICE-INCOME\", payload: param });\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst ReviewIncome = (dispatch) => (id, data) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Mengirim...\" });\r\n  axios\r\n    .put(`${API}/income/${id}/review`, data)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        window.location.reload();\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nconst ListKeuangan = (dispatch) => (callback) => {\r\n  dispatch({ type: \"LOADING\", payload: \"Menampilkan data transaksi....\" });\r\n  axios\r\n    .get(`${API}/list-keuangan`)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"LIST-KEUANGAN\", payload: res.data });\r\n        if (callback) {\r\n          callback();\r\n        }\r\n        return res.data;\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n};\r\n\r\nexport const { Provider, Context } = CreateDataContext(\r\n  IncomeReducer,\r\n  {\r\n    AddIncome,\r\n    InvoiceIncome,\r\n    ListIncome,\r\n    GetDetailIncome,\r\n    ReviewIncome,\r\n    ListIncomeNext,\r\n    UpdateIncome,\r\n    DeleteIncome,\r\n    ValidateIncome,\r\n    ListKeuangan,\r\n    ListIncomeBl,\r\n    AddPelunasan\r\n  },\r\n  {\r\n    loading: false,\r\n    invoiceIncome: [],\r\n    message: \"\",\r\n    listIncome: [],\r\n    \r\n    detailIncome: \"\",\r\n    detailAccount: \"\",\r\n    detailUser: \"\",\r\n    detailCustomer: \"\",\r\n    detailReviewer: \"\",\r\n    currentPage: \"\",\r\n    totalData: \"\",\r\n  }\r\n);\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport { Context as IncomeContext } from \"../../../services/Context/IncomeContext\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTypography,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBox,\r\n  MDBBtn,\r\n  MDBFormInline,\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem\r\n} from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { CircularProgress, Icon } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst ListPemasukanComponent = ({ props, dataTamp, Next, NextR }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const {\r\n    state,\r\n    ListIncome,\r\n    ListIncomeNext,\r\n    DeleteIncome,\r\n    InvoiceIncome\r\n  } = useContext(IncomeContext);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [, setListData] = useState([]);\r\n  let history = useHistory();\r\n  const [login, setLogin] = useState([]);\r\n\r\n  useEffect(() => {\r\n    ListIncome(\"\");\r\n    setLogin(JSON.parse(localStorage.getItem('login')));\r\n    // console.log('login as = ', localStorage.getItem('login'));\r\n    setListData(state.listIncome);\r\n    return () => { };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('res name = ', login.data);\r\n  }, [login]);\r\n\r\n  const handleClickReview = (data) => {\r\n    dataTamp(data);\r\n    NextR();\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (search === \"\") {\r\n      alert(\"Ketikan yg ingin dicari!\");\r\n    } else {\r\n      ListIncome(search);\r\n    }\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n    ListIncome(\"\");\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const handleTestClick = () => {\r\n    ListIncomeNext(2);\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    dataTamp(data);\r\n    Next();\r\n  };\r\n\r\n  const handleDelete = (data) => {\r\n    DeleteIncome(data, () => {\r\n      ListIncome(\"\");\r\n      setListData(state.listIncome);\r\n    });\r\n  };\r\n\r\n  const [triggerPDF, setTriggerPDF] = useState(null);\r\n  const handlePDF = (id) => {\r\n    InvoiceIncome(id);\r\n    setTriggerPDF(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (triggerPDF == true) {\r\n      const timer = setTimeout(() => {\r\n        console.log(\"This will run after 1 second!\", JSON.stringify(state));\r\n        history.push(`/generate-invoice-income`, { data: state.invoiceIncome });\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [triggerPDF]);\r\n\r\n  const listTransaksi = () => (\r\n    <Fragment>\r\n      {state.listIncome.map((item, i) => {\r\n        console.log('ite = ', item.is_valid);\r\n        return (\r\n          <div>\r\n            <MDBCard key={i} className=\"mb-2\">\r\n              <MDBCardBody className=\"p-1\">\r\n                <MDBRow>\r\n                  <MDBCol lg=\"9\">\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      {item.is_valid === '1' && <DoneIcon />}\r\n                      <MDBTypography tag=\"h5\" className=\"pt-2 mx-2\">\r\n                        {\" \"}\r\n                        {item.invoice_number}{\" \"}\r\n                        <small>\r\n                          {item.customer} - {item.payment_method}\r\n                        </small>\r\n                      </MDBTypography>\r\n                    </div>\r\n                    <MDBTypography tag=\"h10\" className=\"pt-2 mx-2\">\r\n                      {\" \"}\r\n                      {\"status review: \"} {item.review_status == null ? '-' : item.review_status}\r\n                    </MDBTypography>\r\n                    <MDBTypography tag=\"h5\" className=\"pt-2 mx-2\">\r\n                      {\" \"}\r\n                      {\"pesan review: \"} {item.review == null ? '-' : item.review}\r\n                    </MDBTypography>\r\n                  </MDBCol>\r\n                  <MDBCol lg=\"3\">\r\n                    <MDBRow lg=\"1\">\r\n                      {isAuthenticated().data.level === \"Accountant\" && (\r\n                        <MDBBtn\r\n                          color=\"cyan\"\r\n                          size=\"sm\"\r\n                          style={{ margin: \"10px\", position: \"absolute\", left: \"100px\" }}\r\n                          onClick={() => handleClickReview(item)}\r\n                        >\r\n                          Review\r\n                        </MDBBtn>\r\n                      )}\r\n                      {login.data && login.data.name === 'Marketing' && item.review_status !== 'approved' &&\r\n                        <>\r\n                          <EditIcon\r\n                            color=\"dark-green\"\r\n                            size=\"sm\"\r\n                            style={{ color: \"green\", margin: \"10px\" }}\r\n                            onClick={() => handleEdit(item)}\r\n                          />\r\n                          <DeleteIcon\r\n                            color=\"red\"\r\n                            // size=\"sm\"\r\n                            style={{ color: \"red\", margin: \"10px\" }}\r\n                            onClick={() => handleDelete(item.id)}\r\n                          />\r\n                        </>\r\n                      }\r\n\r\n                      {login.data && login.data.name === 'Marketing' && \r\n                        <>\r\n                          <MDBBtn\r\n                            color=\"dark-green\"\r\n                            size=\"sm\"\r\n                            style={{ margin: \"10px\" }}\r\n                            onClick={() =>\r\n                              history.push(`/generate-invoice-income`, { userId: item.id })\r\n                            }\r\n                          >\r\n                            Generate\r\n                      </MDBBtn>\r\n                        </>\r\n                      }\r\n\r\n\r\n                    </MDBRow>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </div>\r\n        )\r\n      })}\r\n    </Fragment >\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <MDBBreadcrumb >\r\n        <MDBBreadcrumbItem><b>Daftar Transaksi Masuk</b></MDBBreadcrumbItem>\r\n      </MDBBreadcrumb>\r\n      <MDBContainer fluid>\r\n        <MDBBox display=\"flex\" justifyContent=\"end\">\r\n          <MDBCol md=\"4\">\r\n            <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n              <input\r\n                className=\"form-control mr-sm-2\"\r\n                type=\"text\"\r\n                placeholder=\"Cari Transaksi\"\r\n                aria-label=\"Search\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <MDBBtn\r\n                gradient=\"aqua\"\r\n                rounded\r\n                size=\"sm\"\r\n                className=\"mr-auto\"\r\n                onClick={handleSearch}\r\n              >\r\n                Cari\r\n              </MDBBtn>\r\n              {search !== \"\" && (\r\n                <MDBBtn\r\n                  color=\"red\"\r\n                  positiion=\"absolute\"\r\n                  left=\"90px\"\r\n                  rounded\r\n                  size=\"sm\"\r\n                  className=\"mr-auto\"\r\n                  onClick={handleResetSearch}\r\n                >\r\n                  Reset\r\n                </MDBBtn>\r\n              )}\r\n            </MDBFormInline>\r\n          </MDBCol>\r\n        </MDBBox>\r\n\r\n        {state.loading && (\r\n          <MDBBox display=\"flex\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </MDBBox>\r\n        )}\r\n        {!state.loading && listTransaksi()}\r\n        <MDBBox display=\"flex\" justifyContent=\"center\" className=\"mt-4\">\r\n          {state.listIncome.length !== state.totalData && (\r\n            <MDBBtn outline color=\"primary\" onClick={handleTestClick}>\r\n              Load More...\r\n            </MDBBtn>\r\n          )}\r\n        </MDBBox>\r\n      </MDBContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ListPemasukanComponent);\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst CustomerContext = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-CUSTOMER':\r\n            return {\r\n                ...state,\r\n                listCustomer:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListCustomer = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Transaksi'})\r\n    axios.get(`${API}/customer`)\r\n      .then(res => {\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-CUSTOMER', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    CustomerContext,\r\n    {ListCustomer},\r\n    {loading: false, message:'', listCustomer:[]}\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {\r\n    API\r\n} from '../Api/AccountingApi'\r\n\r\nconst ProductReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-PRODUCT':\r\n            return {\r\n                ...state,\r\n                listProduct: action.payload\r\n            }\r\n        case 'UNIT-PRICE':\r\n            return {\r\n                ...state,\r\n                unitPrice: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AddProduct = dispatch => async (formData, callback) => {\r\n    // alert(JSON.stringify(formData))\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Bahan Baku...'\r\n    })\r\n    axios.post(`${API}/product`, formData, {\r\n        headers: {\r\n            'content-type': `multipart/form-data; boundary=${formData._boundary}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Produk Berhasil Ditambahkan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListProduct = dispatch => () => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Produk'\r\n    })\r\n    axios.get(`${API}/product`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-PRODUCT',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst UnitPrice = dispatch => (id) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan Harga Satuan'\r\n    })\r\n    axios.get(`${API}/product/${id}`)\r\n    .then((res) => {\r\n      //   alert(JSON.stringify(res))\r\n      if (res.data.success) {\r\n        dispatch({ type: \"NO-LOADING\" });\r\n        dispatch({ type: \"UNIT-PRICE\", payload: res.data.data.unit_price });\r\n      } else {\r\n        alert(res.data.message);\r\n        dispatch({ type: \"NO-LOADING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: \"NO-LOADING\" });\r\n      alert(error);\r\n      // console.log(error)\r\n    });\r\n    return true;\r\n}\r\n\r\nconst DeleteProduct = dispatch => (id, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Mengahapus Data Produk...'\r\n    })\r\n    axios.delete(`${API}/product/${id}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Produk Berhasil Dihapus!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst AddIngredients = dispatch => (data, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Resep...'\r\n    })\r\n    axios.post(`${API}/product/add-ingredients`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    // alert('Transaksi Berhasil Disimpan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n\r\nexport const {\r\n    Provider,\r\n    Context\r\n} = CreateDataContext(\r\n    ProductReducer, {\r\n    AddProduct,\r\n    ListProduct,\r\n    DeleteProduct,\r\n    AddIngredients,\r\n    UnitPrice\r\n}, {\r\n    loading: false,\r\n    message: '',\r\n    listProduct: [],\r\n}\r\n)","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport { Context as CustomerContext } from \"../../../services/Context/CustomerContext\";\r\nimport { Context as AccountContext } from \"../../../services/Context/AccountContext\";\r\nimport { Context as IncomeContext } from \"../../../services/Context/IncomeContext\";\r\nimport { Context as ProductContext } from \"../../../services/Context/ProductContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Icon,\r\n  Grid,\r\n  FormControl,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from \"mdbreact\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport RemoveCircleOutlinedIcon from '@material-ui/icons/RemoveCircleOutlined';\r\n\r\nconst TransaksiMasukComponent = ({ props, data, Next }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const { state: { listAccount }, ListAccount } = useContext(AccountContext);\r\n  const { state: { listProduct }, ListProduct } = useContext(ProductContext);\r\n  const { state, AddIncome, UpdateIncome, GetDetailIncome } = useContext(IncomeContext);\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [openAletDouble , setOpenAletDouble] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState();\r\n  const [dataTanggal, setDataTanggal] = useState([]);\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n  const [bulan, setBulan] = useState(\"\");\r\n  const [ammount, setAmmount] = useState(0);\r\n  const [image, setImage] = useState([]);\r\n  const [count1, setCount] = useState([]);\r\n  const [product, setProduct] = useState([]);\r\n  const [tempProduct, setTempProduct] = useState({});\r\n  const [selectedDateTempo, setSelectedDateTempo] = useState();\r\n  const [subtotal, setSubtotal] = useState();\r\n  const [total, setTotal] = useState();\r\n  const [price, setPrice] = useState([]);\r\n  \r\n  const defaultData = {\r\n    customer: \"\",\r\n    account_id: \"\",\r\n    user_id: null,\r\n    invoice_number: \"\",\r\n    description: \"\",\r\n    payment_method: \"\",\r\n    date: \"\",\r\n    information: \"\",\r\n    image: [],\r\n    shift: \"\",\r\n    uang_muka: \"\",\r\n    jatuh_tempo: \"\"\r\n  };\r\n\r\n  const [value, setValue] = useState(defaultData);\r\n  let today = new Date();\r\n  const handleChange = (name, ket, stok) => (event) => {\r\n    console.log('firs render = ', value[name] ? value[name] : \"0\");\r\n    if (event.target.value == 'Pembayaran Uang Muka') {\r\n      console.log('show field');\r\n      let paymentod = event.target.value\r\n      tex_dp(paymentod)\r\n    \r\n    }\r\n    if (ket) {\r\n      if (\r\n        Number(\r\n          `${value[name] ? value[name] : \"\"}${event.target.value.slice(\r\n            event.target.value.length - 1\r\n          )}`\r\n        ) <= Number(stok)\r\n      ) {\r\n        setValue({\r\n          ...value,\r\n          [name]: event.target.value.replace(/[^0-9]/g, \"\"),\r\n        });\r\n      } else {\r\n        if (value[name] === undefined || value[name] === null) {\r\n          setValue({\r\n            ...value,\r\n            [name]: '',\r\n          });\r\n        }\r\n        console.log(\"masuk error\");\r\n        return 0;\r\n      }\r\n    } else {\r\n      console.log('elseee')\r\n      setValue({\r\n        ...value,\r\n        [name]: event.target.value,\r\n      });\r\n      if (name === \"unit_price\") {\r\n        let set_ammount = event.target.value * value.unit;\r\n        setAmmount(set_ammount);\r\n      }\r\n      if (name === \"unit\") {\r\n        let set_ammount = event.target.value * value.unit_price;\r\n        setAmmount(set_ammount);\r\n      }\r\n    }\r\n  };\r\n\r\n  const month = [\r\n    \"Januari\",\r\n    \"Pebruari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ];\r\n\r\n  function tex_dp(paymentod) {\r\n    if (paymentod == 'Pembayaran Bulanan') {\r\n      return (\r\n        <TextField\r\n          fullWidth label=\"Uang Muka\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline rowsMax={4}\r\n          value={0}\r\n          onChange={handleChange(\"uang muka\")} />\r\n      )\r\n    }\r\n  };\r\n\r\n  function jatuhtempo(paymentod) {\r\n    if (paymentod == 'Pembayaran Bulanan') {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-transaksi\"\r\n            label=\"Tanggal Jatuh Tempo\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={selectedDateTempo}\r\n            views={[\"date\"]}\r\n            onChange={handleDateTempoChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n  \r\n    let temp = [];\r\n    let tp = {}\r\n    let ti = {}\r\n    let vp = {}\r\n    let subtol = {}\r\n    let prc = {}\r\n    \r\n    state.detailIncome && state.detailIncome.products.map((res, index) => {\r\n      console.log(\"LIST PROD\",res, index);\r\n      tp[index] = res.product.name\r\n      ti[index] = res.product_id\r\n      subtol[index] = parseInt(res.stock) * res.product.unit_price\r\n      prc[index] = res.product.unit_price\r\n      vp[`${'product'}[${res.product_id}]`] = res.stock\r\n      temp.push(\"A\");\r\n      setPrice(prc)\r\n      setSubtotal(subtol);\r\n    });\r\n    \r\n    setCount(temp);\r\n    setTempProduct(tp);\r\n    setProduct(ti);\r\n    setValue({\r\n      ...state.detailIncome,\r\n      ...vp,\r\n    });\r\n    console.log('CURRET PROD',tempProduct);\r\n  }, [state.detailIncome])\r\n\r\n  useEffect(() => {\r\n    ListAccount();\r\n    GetDetailIncome(data.id);\r\n    ListProduct();\r\n    console.log(\"update value = \", data);\r\n    setImage([data.image]);\r\n    setTanggal(data.date.split(\" \")[0]);\r\n    var bln = 0;\r\n    month.map((res, i) => {\r\n      console.log(res);\r\n      if (res === data.date.split(\" \")[1]) {\r\n        bln = i + 1;\r\n      }\r\n    });\r\n    setBulan(bln);\r\n    console.log(\"data  ==  \", data);\r\n    const loopingTanggal = () => {\r\n      let tanggal = \"\";\r\n      let data_tanggal = [];\r\n      for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n        data_tanggal.push({ tanggal: `${tanggal}` });\r\n      }\r\n      setDataTanggal(data_tanggal);\r\n    };\r\n    loopingTanggal();\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  const handleChangeProduk = (name, index) => (event) => {\r\n    console.log('EV',event.target.value);\r\n    console.log('INDEX',index)\r\n    let temp = '';\r\n      let id_prod = '';\r\n      let price_prod = '';\r\n      let tp = '';\r\n    if (name === 'product') {\r\n      \r\n      listProduct.map((res,index) => {\r\n        console.log('name = ', event.target.value);\r\n        if (event.target.value === res.name) {\r\n          console.log('filter = ', res,index);\r\n          temp = res.id\r\n          id_prod = res.id\r\n          price_prod = res.unit_price\r\n          tp = res.name\r\n        }\r\n      });\r\n\r\n      const prod_val =  Object.values(product)\r\n      if (prod_val.includes(id_prod)) {\r\n        handleDoubleDialog('ok')\r\n        removeCard(index)\r\n        return null\r\n      }\r\n      setTempProduct({\r\n        ...tempProduct,\r\n        [index] : tp\r\n      });\r\n      setProduct({\r\n        ...product,\r\n        [index]: id_prod\r\n      })\r\n      setPrice({\r\n        ...price,\r\n        [index]:  price_prod\r\n      })\r\n      console.log('prod_price',price_prod);\r\n\r\n      setSubtotal({\r\n        ...subtotal,\r\n        [index]: 1 * price_prod,\r\n      });\r\n\r\n      setValue({\r\n        ...value,\r\n        ['product['+id_prod+']']: 1,\r\n      });\r\n\r\n      \r\n\r\n      console.log('PRICE',price[index]);\r\n  }else{\r\n    let new_qty = parseInt(event.target.value) \r\n      console.log(\"Subtotal awal : \", subtotal)\r\n      console.log('new qty',new_qty);\r\n\r\n      if(isNaN(new_qty) || new_qty < 0){\r\n        console.log('is not nummber');\r\n      }else{\r\n        setValue({\r\n          ...value,\r\n          [name]: new_qty,\r\n        });\r\n  \r\n        setSubtotal({\r\n          ...subtotal,\r\n          [index]: new_qty * price[index],\r\n        });\r\n        console.log(\"Price : \", price[index])\r\n        console.log(\"New Subtotal awal : \", subtotal)\r\n        updateTotalPrice()\r\n      }\r\n\r\n  }\r\n}\r\nconst updateTotalPrice = async () => {\r\n  if(subtotal != undefined){\r\n    let total_price;\r\n    total_price = Object.values(subtotal);\r\n    console.log('GRAND',total_price);\r\n    let sum = total_price.reduce((a, b) => a + b, 0)\r\n    console.log('SUM',sum);\r\n    if(sum == 0){\r\n      let total_price;\r\n      total_price = Object.values(subtotal);\r\n      console.log('GRAND',total_price);\r\n      let sum = total_price.reduce((a, b) => a + b, 0)\r\n      console.log('SUM',sum);\r\n      setTotal(sum);\r\n    }else{\r\n      setTotal(sum);\r\n    }\r\n  }else{\r\n    console.log(subtotal);\r\n  }\r\n  \r\n  \r\n  console.log('value amount',total);\r\n\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n  console.log(\"Subtotal.. : \", subtotal)\r\n  console.log('TOTAL',total);\r\n  updateTotalPrice()\r\n})\r\n\r\n  const alertDouble = () => (\r\n    <Dialog\r\n      open={openAletDouble}\r\n      onClose={handleDoubleCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Ada Kesalahan\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Produk sudah ada pada daftar pembelian silahkan pilih produk lain\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDoubleCancle} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n       \r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const dialogApprove = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\r\n          transakasi anda tidak di tolak oleh pihak Akuntan!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate = date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)\r\n    setSelectedDate(date);\r\n    setValue({\r\n      ...value,\r\n      date: formattedDate,\r\n    });\r\n  }\r\n\r\n  const handleDateTempoChange = (dateTempo) => {\r\n    let formattedDateTempo = dateTempo.getFullYear() + \"-\" + (\"0\" + (dateTempo.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + dateTempo.getDate()).slice(-2)\r\n    setSelectedDateTempo(dateTempo);\r\n    setValue({\r\n      ...value,\r\n      dateTempo: formattedDateTempo,\r\n    });\r\n  }\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n    \r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n    \r\n  };\r\n\r\n  const handleDoubleDialog = () => {\r\n    setOpenAletDouble(true);\r\n    \r\n  };\r\n\r\n  const handleDoubleCancle = () => {\r\n    setOpenAletDouble(false);\r\n    \r\n  };\r\n\r\n  const [trigger, setTrigger] = useState(null);\r\n\r\n  const handleApproveProccess = async () => {\r\n    let formdata = new FormData();\r\n    const tamp = await Object.keys(value).map(async (res) => {\r\n      console.log(\"VALUE POST\",value['date']);\r\n\r\n      if (res === \"date\") {\r\n        //formdata.append(res, value.date)\r\n      } else if (\r\n        // res === \"user_id\" ||\r\n        res == \"shift\" ||\r\n        res == \"customer\" ||\r\n        res == \"invoice_number\" ||\r\n        res == \"information\" ||\r\n        res == \"payment_method\" ||\r\n        res == \"date\" ||\r\n        res == \"description\" ||\r\n        res.includes('product[')\r\n      ) {\r\n        formdata.append(res, value[res]);\r\n      } else if (res === \"image\") {\r\n        if (typeof value[res] === \"string\") {\r\n          const tt = await urlToObject(\r\n            \"https://newdemo.aplikasiskripsi.com/farah_accounting/public/\" +\r\n            data.image\r\n          ).then((result) => result);\r\n          console.log(\"tt = \", tt);\r\n          formdata.append(res, tt);\r\n        } else {\r\n\r\n          formdata.append(res, value[res]);\r\n        }\r\n      }\r\n    });\r\n    formdata.append(\"_method\", \"PUT\");\r\n    formdata.append('kantor','0')\r\n    formdata.append('date',value['date'])\r\n    formdata.append('image',null)\r\n    formdata.append(\"user_id\", data.user_id);\r\n    Promise.all(tamp).then(() => {\r\n      UpdateIncome(data.id, formdata, Next, () => {\r\n        history.push('/list-transaksi-admin')\r\n      });\r\n      setOpenDialogApprove(false);\r\n      \r\n    });\r\n  };\r\n\r\n  const urlToObject = async (inputURI) => {\r\n    var binaryVal;\r\n\r\n    // mime extension extraction\r\n    var inputMIME = inputURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n    // Extract remaining part of URL and convert it to binary value\r\n    if (inputURI.split(\",\")[0].indexOf(\"base64\") >= 0)\r\n      binaryVal = atob(inputURI.split(\",\")[1]);\r\n    // Decoding of base64 encoded string\r\n    else binaryVal = unescape(inputURI.split(\",\")[1]);\r\n\r\n    // Computation of new string in which hexadecimal\r\n    // escape sequences are replaced by the character\r\n    // it represents\r\n\r\n    // Store the bytes of the string to a typed array\r\n    var blobArray = [];\r\n    for (var index = 0; index < binaryVal.length; index++) {\r\n      blobArray.push(binaryVal.charCodeAt(index));\r\n    }\r\n\r\n    return new Blob([blobArray], {\r\n      type: inputMIME,\r\n    });\r\n  };\r\n\r\n  const removeImage = (form, img) => {\r\n    setImage([...image.filter((q) => q !== img)]);\r\n  };\r\n\r\n  const handleImage = (event) => {\r\n    setImage([...image, event.target.files[0]]);\r\n    setValue({\r\n      ...value,\r\n      image: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  function createObjectURL(media) {\r\n    if (media instanceof File) {\r\n      if (window.webkitURL) {\r\n        return window.webkitURL.createObjectURL(media);\r\n      } else if (window.URL && window.URL.createObjectURL) {\r\n        return window.URL.createObjectURL(media);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      console.log(\"masuk else\", media);\r\n      return (\r\n        \"https://newdemo.aplikasiskripsi.com/farah_accounting/public/\" + media\r\n      );\r\n    }\r\n  }\r\n\r\n  function numberWithCommas(x) {\r\n    try {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    } catch (error) {\r\n      return '0';\r\n    }\r\n\r\n  }\r\n\r\n  const removeCard = (index) => {\r\n    console.log(index);\r\n    console.log(value[`product[${product[index]}]`])\r\n    delete value[`product[${product[index]}]`]\r\n    let newArr = [...count1];\r\n    newArr[index] = 'B';\r\n    setCount(newArr);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(count1);\r\n  }, [count1])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <h4>Edit Transaksi</h4>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        {dialogApprove()}\r\n        {alertDouble()}\r\n        {state.loading && <LinearProgress />}\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow className=\"m-3\">\r\n            <MDBCol lg=\"6\">\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"No. Transaksi / Invoice\"\r\n                  variant=\"outlined\"\r\n                  InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                  margin=\"normal\"\r\n                  value={value.invoice_number}\r\n                  onChange={handleChange(\"invoice_number\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Nama Customer\"\r\n                  variant=\"outlined\"\r\n                  InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                  margin=\"normal\"\r\n                  value={value.customer}\r\n                  onChange={handleChange(\"customer\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Deskripsi Transaksi\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                  multiline\r\n                  rowsMax={4}\r\n                  value={value.description}\r\n                  onChange={handleChange(\"description\")}\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-transaksi\"\r\n                    label=\"Tanggal Transaksi\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={value.date}\r\n                    views={[\"date\"]}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </form>\r\n              <br></br>\r\n              <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                <p style={{ marginTop: '20px' }}>Tambah Produk</p>\r\n                <AddCircleIcon onClick={() => setCount([...count1, 'A'])} style={{ cursor: 'pointer' }} />\r\n              </div>\r\n\r\n            </MDBCol>\r\n            <MDBCol lg=\"6\">\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Shift Kerja\r\n                    </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.shift}\r\n                  onChange={handleChange(\"shift\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Pilih Shift</em>\r\n                  </MenuItem>\r\n                  {[\r\n                    { id: 1, sif: \"Pagi\" },\r\n                    { id: 2, sif: \"Siang\" },\r\n                  ].map((item, i) => (\r\n                    <MenuItem key={i} value={item.sif}>\r\n                      {item.sif}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Metode Pembayaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.payment_method}\r\n                  onChange={handleChange(\"payment_method\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Tunai\">Tunai</MenuItem>\r\n                  <MenuItem value=\"Transfer\">Transfer</MenuItem>\r\n                  <MenuItem value=\"Pembayaran Bulanan\">\r\n                    Pembayaran Bulanan\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Pembayaran Sisa Bulanan\">\r\n                    Pembayaran Sisa Bulanan\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Retur Penjualan\">Retur Penjualan</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {tex_dp(value.payment_method)}\r\n              <br></br>\r\n              {jatuhtempo(value.payment_method, value.due_date)}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          {count1.map((res, index) => (\r\n            <>\r\n              {res === \"A\" && <Card style={{ marginTop: '10px' }}>\r\n                <CardContent>\r\n                  <MDBRow className=\"m-12\">\r\n                    <MDBCol lg=\"3\">\r\n                      <FormControl fullWidth >\r\n                      <RemoveCircleOutlinedIcon onClick={() => removeCard(index)} style={{ color: 'red', alignItems: 'flex-end', position: \"absolute\", fontSize: 25, cursor: 'pointer', marginLeft: 930, marginTop: -15 }} />\r\n                        <br></br>\r\n                        <InputLabel>Produk</InputLabel>\r\n                        <Select value={tempProduct[index]} onChange={handleChangeProduk(`product`, index)}>\r\n                          <MenuItem value=\"none\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {listProduct.map((res, index) => (\r\n                            <MenuItem value={res.name}>{res.name}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                      <TextField\r\n                        fullWidth\r\n                        label={\"Jumlah Produk\"}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={handleChangeProduk(`product[${product[index]}]`,index)}\r\n                        value={value[`product[${product[index]}]`]}\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"Harga\"\r\n                        label = \"Harga\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value= {price[index]}\r\n                        // value={value.products[index].product.unit_price}\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                      <TextField\r\n                        fullWidth\r\n                        label={\"Total Harga\"}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                       value= {subtotal[index]}\r\n                      //  value={value.products[index].product.unit_price * value[`product[${product[index]}]`]}\r\n                      />\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </CardContent>\r\n              </Card>}\r\n            </>\r\n          ))}\r\n\r\n          <br></br>\r\n          <MDBCol lg=\"12\">\r\n            <MDBRow className=\"mt-3 mb-2\">\r\n              <MDBCol lg=\"10\">\r\n                <b>TOTAL TRANSAKSI</b>\r\n                <br></br>\r\n              </MDBCol>\r\n              <MDBCol lg=\"2\">\r\n                <b>\r\n                  <NumberFormat\r\n                    defaultValue={value.ammount}\r\n                    value={total}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"Rp. \"}\r\n                  />\r\n                </b>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBCol>\r\n          <Divider style={{ variant: \"middle\", width: '100%' }} />\r\n          <br></br>\r\n          <br></br>\r\n\r\n\r\n          <MDBRow className=\"mt-3 mb-2\">\r\n            <MDBCol lg=\"12\">\r\n              <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                <MDBBtn\r\n                  color=\"dark-green\"\r\n                  onClick={() => handleApproveDialog(\"approve\")}\r\n                  disabled={state.loading}\r\n                >\r\n                  Simpan Transaksi\r\n                    </MDBBtn>\r\n              </MDBBox>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default withRouter(TransaksiMasukComponent);\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\"\r\nimport { Context as IncomeContext } from '../../../services/Context/IncomeContext'\r\nimport { Button, TextField, Divider, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { useParams } from \"react-router-dom\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst ReviewPemasukanComponent = ({ userId }) => {\r\n    let { id } = useParams();\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const { state, GetDetailIncome, ReviewIncome } = useContext(IncomeContext)\r\n    const [, setDataTanggal] = useState([])\r\n    const [, setDataBulan] = useState([])\r\n    const [openDialogApprove, setOpenDialogApprove] = useState(false)\r\n    const [form, setForm] = useState([]);\r\n\r\n    useEffect(() => {\r\n        GetDetailIncome(userId)\r\n        const loopingTanggal = () => {\r\n            let tanggal = '';\r\n            let data_tanggal = [];\r\n            for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n                data_tanggal.push({ 'tanggal': `${tanggal}` })\r\n            }\r\n            setDataTanggal(data_tanggal)\r\n        }\r\n        const loopingBulan = () => {\r\n            let bulan = '';\r\n            let data_bulan = [];\r\n            for (bulan = 1; bulan <= 12; bulan++) {\r\n                data_bulan.push({ 'bulan': `${bulan}` })\r\n            }\r\n            setDataBulan(data_bulan)\r\n        }\r\n        loopingTanggal()\r\n        loopingBulan()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const obj = {\r\n            email: `${state.detailUser.name} | ${state.detailUser.email}`,\r\n            desc: state.detailIncome.description,\r\n            date: state.detailIncome.date,\r\n            customerName: state.detailIncome ? state.detailIncome.customer : '-',\r\n            data: state.detailIncome.products,\r\n            unit: state.detailIncome.stock,\r\n            unitPrice: state.detailIncome.unit_price,\r\n            ammount: state.detailIncome.ammount,\r\n            paymentMethod: state.detailIncome.payment_method,\r\n            jatuhTempo: `${state.detailIncome.due_date == null ? '-' :state.detailIncome.due_date}`,\r\n            uangMukaB: `${state.detailIncome.remaining_payment == null ? '0' :state.detailIncome.remaining_payment}`,\r\n            uangMuka: `${state.detailIncome.down_payment == null ? '0' :state.detailIncome.down_payment}`,\r\n            information: `Keterangan: ${state.detailIncome.information}`\r\n        }\r\n        setForm(obj);\r\n    }, [state])\r\n\r\n    const dialogApprove = () => (\r\n        <Dialog open={openDialogApprove} onClose={handleApproveCancle} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Setujui / Tolak Transaksi?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Pilih untuk menyetujui atau menolak transaksi ini, transaksi tidak dapat di ubah setelah melakukan tindakan ini!.\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleRejectedProccess} color=\"secondary\">\r\n                    Tolak Transaksi\r\n                </Button>\r\n                <Button onClick={handleApproveProccess} color=\"primary\" autoFocus>\r\n                    Setujui Transaksi\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const handleApproveDialog = () => {\r\n        setOpenDialogApprove(true)\r\n    }\r\n\r\n    const handleApproveCancle = () => {\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    const handleApproveProccess = () => {\r\n        let data = {\r\n            review_status: 'approved',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewIncome(userId, data)\r\n    }\r\n\r\n    const handleRejectedProccess = () => {\r\n        let data = {\r\n            review_status: 'rejected',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewIncome(userId, data)\r\n    }\r\n\r\n    const onchange = (event) => {\r\n        const value = event.target.value;\r\n\r\n        setForm({\r\n            ...form,\r\n            [event.target.name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>Transaksi Pemasukkan {id}</h4>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Nomor Transaksi<br></br>\r\n                                <small>{state.detailIncome.invoice_number}</small>\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Status Review<br></br>\r\n                                <b>{state.detailIncome.review_status}</b>\r\n                                {state.detailIncome.review_status === null && (\r\n                                    '........................'\r\n                                )}\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Direview Oleh<br></br>\r\n                                {state.detailReviewer && (\r\n                                    <Fragment>\r\n                                        <b>{state.detailReviewer.name}</b>\r\n                                    </Fragment>\r\n                                )}\r\n                                {!state.detailReviewer && (\r\n                                    '........................'\r\n                                )}\r\n                            </h5>\r\n\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Tanggal Review<br></br>\r\n                                <small>{state.detailIncome.review_date}</small>\r\n                                {state.detailIncome.review_date === null && (\r\n                                    '........................'\r\n                                )}\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                {state.detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" disabled>\r\n                                        Transaksi Sudah Direview\r\n                                    </MDBBtn>\r\n                                )}\r\n                                {!state.detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" onClick={() => handleApproveDialog('approve')} gradient=\"blue\">\r\n                                        Validasi Transaksi <MDBIcon icon=\"check\" className=\"ml-1\" /> <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                    </MDBBtn>\r\n                                )}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                        {dialogApprove()}\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n            <MDBCard className='mb-2'>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"6\">\r\n                            <form>\r\n                                <TextField fullWidth value={form.email} name={'email'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.desc} name={'desc'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.date} name={'date'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.customerName} name={'customerName'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.paymentMethod} name={'paymentMethod'} margin=\"normal\" onChange={onchange} />\r\n                            </form>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"6\">\r\n                        <TextField fullWidth value={form.jatuhTempo} name={'jatuhTempo'} margin=\"normal\" onChange={onchange} />\r\n                        \r\n                        {(  form.paymentMethod == 'Pembayaran Uang Muka') && (\r\n                            <TextField fullWidth value={form.uangMuka} name={'uangMuka'} margin=\"normal\" onChange={onchange} />\r\n                        )}\r\n                        {(  form.paymentMethod == 'Pembayaran Bulanan') && (\r\n                             <TextField fullWidth value={form.uangMukaB} name={'uangMuka'} margin=\"normal\" onChange={onchange} />\r\n                        )}\r\n                        \r\n                            {form.data !== undefined && (form.data.map((item, i) => {\r\n                                return (\r\n                                    <Fragment>\r\n                                        <MDBRow className='m-12'>\r\n                                            <MDBCol lg=\"4\">\r\n                                                <TextField fullWidth defaultValue=\"Default Value\" margin=\"normal\" type='number' value={item.stock} name={'unit'} onChange={onchange} />\r\n                                            </MDBCol>\r\n                                            <MDBCol lg=\"8\">\r\n                                                <TextField fullWidth margin=\"normal\" type='number' value={item.product.unit_price} name={'unitPrice'} onChange={onchange} />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </Fragment>\r\n                                )\r\n                            }))}\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"8\" >\r\n                                    <b>TOTAL</b>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"4\">\r\n                                    <b><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={form.ammount} /></b>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <Divider /><Divider />\r\n                            <TextField fullWidth variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} value={form.information} name={'information'} onChange={onchange} />\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewPemasukanComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ReviewPemasukanComponent from '../../components/Transaksi/Pemasukkan/ReviewPemasukanComponent';\r\n\r\nexport default function ReviewTransaksi({ props, id }) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Review Transaksi</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ReviewPemasukanComponent userId={id} />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n","import React, { Fragment, useState } from 'react'\r\nimport { MDBContainer, MDBTypography } from \"mdbreact\";\r\nimport ListPemasukanComponent from '../../../components/Transaksi/TransaksiPusat/ListPemasukanComponent';\r\nimport EditPemasukanComponent from '../../../components/Transaksi/TransaksiPusat/EditPemasukanComponent';\r\nimport ReviewTransaksi from '../ReviewPemasukan';\r\nexport default function TransaksiPusat() {\r\n    const [Goto, setGoto] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    return (\r\n        <Fragment>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n            {Goto === 1 && <EditPemasukanComponent data={data} Next={() => setGoto(Goto - 1)} />}\r\n                {Goto === 5 && <ReviewTransaksi id={data.id} />}\r\n                {Goto === 0 && <ListPemasukanComponent dataTamp={(value) => setData(value)} Next={() => setGoto(Goto + 1)} NextR={() => setGoto(5)} />}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {\r\n    API\r\n} from '../Api/AccountingApi'\r\n\r\nconst IncomeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-OUTCOME-TYPE':\r\n            return {\r\n                ...state,\r\n                listOutcomeType: action.payload\r\n            }\r\n        case 'LIST-OUTCOME-TYPE-BY':\r\n            return {\r\n                ...state,\r\n                listOutcomeType: action.payload\r\n            }\r\n        case 'LIST-OUTCOME':\r\n            return {\r\n                ...state,\r\n                listOutcome: action.payload\r\n            }\r\n        case 'DETAIL-OUTCOME': {\r\n            return {\r\n                ...state,\r\n                detailOutcome: action.payload\r\n            }\r\n        }\r\n        case 'LIST-PAYMENT':\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case \"DETAIL-REVIEWER\":\r\n            return {\r\n                ...state,\r\n                detailReviewer: action.payload,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListOutcomeType = dispatch => () => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan Tipe Transaksi Keluar'\r\n    })\r\n    axios.get(`${API}/outcome_type`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-OUTCOME-TYPE',\r\n                    payload: res.data.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListOutcomeTypeBy = dispatch => (type) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan Tipe Transaksi Keluar'\r\n    })\r\n    axios.get(`${API}/outcome/${type == \"Logistik\" ? \"jenis-logistik\" : \"jenis-operasional\"}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-OUTCOME-TYPE-BY',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst AddOutcome = dispatch => (data, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Transaksi...'\r\n    })\r\n    axios.post(`${API}/outcome/store`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Transaksi Berhasil Disimpan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListOutcome = dispatch => () => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Transaksi Keluar...'\r\n    })\r\n    axios.get(`${API}/outcome`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-OUTCOME',\r\n                    payload: res.data.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst DetailOutcome = dispatch => (id) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Transaksi Keluar...'\r\n    })\r\n    axios.get(`${API}/outcome/${id}`)\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'DETAIL-OUTCOME',\r\n                    payload: res.data.data\r\n                })\r\n                dispatch({\r\n                    type: \"DETAIL-REVIEWER\",\r\n                    payload: res.data.data.reviewed_by,\r\n                });\r\n\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst DeleteOutcome = (dispatch) => (id, callback) => {\r\n    dispatch({\r\n        type: \"LOADING\",\r\n        payload: \"Menghapus Transaksi...\"\r\n    });\r\n    axios\r\n        .delete(`${API}/outcome/${id}/delete`, {\r\n            headers: {\r\n                \"Content-Type\": \"text/plain\",\r\n            },\r\n        })\r\n        .then((res) => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: \"NO-LOADING\"\r\n                });\r\n                callback();\r\n                alert(\"Transaksi Berhasil Dihapus!\");\r\n            } else {\r\n                alert(res.data.message);\r\n                dispatch({\r\n                    type: \"NO-LOADING\"\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: \"NO-LOADING\"\r\n            });\r\n            alert(error);\r\n            // console.log(error)\r\n        });\r\n};\r\n\r\nconst UpdateOutcome = (dispatch) => (id, data, callback) => {\r\n    dispatch({\r\n        type: \"LOADING\",\r\n        payload: \"Menyimpan Transaksi\"\r\n    });\r\n    axios\r\n        .post(`${API}/outcome/${id}/update`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"text/plain\",\r\n            },\r\n        })\r\n        .then((res) => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: \"NO-LOADING\"\r\n                });\r\n                callback();\r\n                alert(\"Transaksi Berhasil Diupdate!\");\r\n            } else {\r\n                alert(res.data.message);\r\n                dispatch({\r\n                    type: \"NO-LOADING\"\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: \"NO-LOADING\"\r\n            });\r\n            alert(error);\r\n            // console.log(error)\r\n        });\r\n};\r\n\r\nconst PaymentMethod = dispatch => () => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Transaksi Keluar...'\r\n    })\r\n    axios.get(`${API}/outcome/payment-methods`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-PAYMENT',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n\r\nconst ReviewOutcome = (dispatch) => (id, data) => {\r\n    dispatch({ type: \"LOADING\", payload: \"Mengirim...\" });\r\n    axios\r\n        .put(`${API}/outcome/${id}/review`, data)\r\n        .then((res) => {\r\n\r\n            if (res.data.success) {\r\n                alert(res.data.message);\r\n                dispatch({ type: \"NO-LOADING\" });\r\n                window.location.reload();\r\n            } else {\r\n                alert(res.data.message);\r\n                dispatch({ type: \"NO-LOADING\" });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: \"NO-LOADING\" });\r\n            alert(error);\r\n            // console.log(error)\r\n        });\r\n};\r\nexport const {\r\n    Provider,\r\n    Context\r\n} = CreateDataContext(\r\n    IncomeReducer, {\r\n    ListOutcomeType,\r\n    AddOutcome,\r\n    ListOutcome,\r\n    ListOutcomeTypeBy,\r\n    DetailOutcome,\r\n    DeleteOutcome,\r\n    UpdateOutcome,\r\n    ReviewOutcome,\r\n    PaymentMethod\r\n}, {\r\n    loading: false,\r\n    message: '',\r\n    listOutcomeType: [],\r\n    listOutcome: [],\r\n    detailReviewer: [],\r\n    detailOutcome: [],\r\n    paymentMethod: []\r\n}\r\n)","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Context as AuthContext } from '../../../services/Context/AuthContext'\r\nimport { Context as IncomeContext } from '../../../services/Context/IncomeContext'\r\nimport { Button, TextField, Divider, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBCardImage } from 'mdbreact';\r\nimport { useParams } from \"react-router-dom\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { Context as OutcomeContext } from \"../../../services/Context/OutcomeContext\";\r\n\r\nconst ReviewPengeluaranComponent = ({ data, Next, userId }) => {\r\n    let { id } = useParams();\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const { state, GetdetailOutcome, ReviewIncome } = useContext(IncomeContext)\r\n    const {\r\n        state: { listOutcomeType, detailReviewer },\r\n        DetailOutcome,\r\n        ReviewOutcome\r\n    } = useContext(OutcomeContext);\r\n    const [, setDataTanggal] = useState([])\r\n    const [, setDataBulan] = useState([])\r\n    const [openDialogApprove, setOpenDialogApprove] = useState(false)\r\n    const [form, setForm] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // GetdetailOutcome(userId)\r\n        DetailOutcome(data.id);\r\n        const loopingTanggal = () => {\r\n            let tanggal = '';\r\n            let data_tanggal = [];\r\n            for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n                data_tanggal.push({ 'tanggal': `${tanggal}` })\r\n            }\r\n            setDataTanggal(data_tanggal)\r\n        }\r\n        const loopingBulan = () => {\r\n            let bulan = '';\r\n            let data_bulan = [];\r\n            for (bulan = 1; bulan <= 12; bulan++) {\r\n                data_bulan.push({ 'bulan': `${bulan}` })\r\n            }\r\n            setDataBulan(data_bulan)\r\n        }\r\n        loopingTanggal()\r\n        loopingBulan()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const obj = {\r\n            email: `${data.user.name} | ${data.user.email}`,\r\n            desc: data ? data.description : '-',\r\n            date: data ? data.date : '-',\r\n            category: data ? data.category : '-',\r\n            type: data ? data.type : '-',\r\n            unit: data ? data.qty : '-',\r\n            unitPrice: data ? data.unit_price : '-',\r\n            ammount: data ? data.ammount : \"-\",\r\n            paymentMethod: data ? data.payment_method : '-',\r\n            information: `Keterangan: ${data ? data.information : \"-\"}`,\r\n            image:  \"http://localhost/farah_accounting_ws/public/\" + data.image \r\n        }\r\n        console.log('outcome detail = ', data);\r\n        setForm(obj);\r\n    }, [state])\r\n\r\n    const dialogApprove = () => (\r\n        <Dialog open={openDialogApprove} onClose={handleApproveCancle} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Setujui / Tolak Transaksi?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Pilih untuk menyetujui atau menolak transaksi ini, transaksi tidak dapat di ubah setelah melakukan tindakan ini!.\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleRejectedProccess} color=\"secondary\">\r\n                    Tolak Transaksi\r\n                </Button>\r\n                <Button onClick={handleApproveProccess} color=\"primary\" autoFocus>\r\n                    Setujui Transaksi\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const handleApproveDialog = () => {\r\n        setOpenDialogApprove(true)\r\n    }\r\n\r\n    const handleApproveCancle = () => {\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    const handleApproveProccess = () => {\r\n        let params = {\r\n            review_status: 'approved',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewOutcome(data.id, params)\r\n    }\r\n\r\n    const handleRejectedProccess = () => {\r\n        let params = {\r\n            review_status: 'rejected',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewOutcome(data.id, params)\r\n    }\r\n\r\n    const onchange = (event) => {\r\n        const value = event.target.value;\r\n\r\n        setForm({\r\n            ...form,\r\n            [event.target.name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>Transaksi Pengeluaran {data.id}</h4>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"2\">\r\n                            <h6 className=\"pt-2 mx-1\">\r\n                                Nomor Transaksi<br></br>\r\n                                <small>{data ? data.invoice_number : '-'}</small>\r\n                            </h6>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h6 className=\"pt-2 mx-1\">\r\n                                Status Review<br></br>\r\n                                <b>{data ? data.review_status : '-'}  </b>\r\n                                {data && data.review_status === null && (\r\n                                   '................'\r\n                                )}\r\n                            </h6>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h6 className=\"pt-2 mx-1\">\r\n                                Direview Oleh<br></br>\r\n                                {data.reviewed_by && (\r\n                                    <Fragment>\r\n                                        <b>{data.reviewed_by.name}</b>\r\n                                    </Fragment>\r\n                                )}\r\n                                {!data.reviewed_by && (\r\n                                    '................'\r\n                                )}\r\n                            </h6>\r\n\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h6 className=\"pt-2 mx-1\">\r\n                                Tanggal Review<br></br>\r\n                                <small>{data ? data.review_date : '-'}</small>\r\n                                {data && data.review_date === null && (\r\n                                   '................'\r\n                                )}\r\n                            </h6>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"4\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                {detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" disabled>\r\n                                        Transaksi Sudah Direview\r\n                                    </MDBBtn>\r\n                                )}\r\n                                {!detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" onClick={() => handleApproveDialog('approve')} gradient=\"blue\">\r\n                                        Validasi Transaksi\r\n                                    </MDBBtn>\r\n                                )}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                        {dialogApprove()}\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n\r\n            <MDBCard className='mb-2'>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"6\">\r\n                            <form>\r\n                                <TextField fullWidth value={form.email} name={'email'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.desc} name={'desc'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.date} name={'date'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.category} name={'category'} margin=\"normal\" onChange={onchange} /><br></br>\r\n                                <TextField fullWidth value={form.type} name={'typr'} margin=\"normal\" onChange={onchange} /><br></br>    \r\n                                <img class=\"img-thumbnail\" src = {form.image} onChange={onchange}/>                                                  \r\n                            </form>\r\n                             \r\n                        </MDBCol>\r\n                        <MDBCol lg=\"6\">\r\n                            <MDBRow className='m-12'>\r\n                                <MDBCol lg=\"4\">\r\n                                    <TextField fullWidth defaultValue=\"Default Value\" margin=\"normal\" type='number' value={form.unit} name={'unit'} onChange={onchange} />\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"8\">\r\n                                    <TextField fullWidth margin=\"normal\" type='number' value={form.unitPrice} name={'unitPrice'} onChange={onchange} />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"8\" >\r\n                                    <b>TOTAL</b>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"4\">\r\n                                    <b><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={form.ammount} /></b>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <Divider /><Divider />\r\n                            <TextField fullWidth value={form.paymentMethod} name={'paymentMethod'} margin=\"normal\" onChange={onchange} />\r\n                            <TextField fullWidth variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} value={form.information} name={'information'} onChange={onchange} />\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewPengeluaranComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ReviewPengeluaranComponent from '../../../components/Transaksi/Pengeluaran/ReviewPengeluaranComponent';\r\n\r\nexport default function ReviewTransaksiKeluar({ props, id }) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Review Transaksi</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ReviewPengeluaranComponent userId={id} />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n   \n    titleContainer:{\n        flexDirection: 'row',\n        marginTop: 24,\n    },\n    reportTitle:{\n        color: '#61dafb',\n        letterSpacing: 4,\n        fontSize: 25,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    }\n  });\n\n\n  const InvoiceTitle = ({title}) => (\n    <View style={styles.titleContainer}>\n        <Text style={styles.reportTitle}>{title}</Text>\n    </View>\n  );\n  \n  export default InvoiceTitle","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n        marginTop: 36\n    },\n    billTo: {\n        marginTop: 20,\n        paddingBottom: 3,\n        fontFamily: 'Helvetica-Oblique'\n    },\n  });\n\n\n  const BillTo = ({invoice}) => (\n    <View style={styles.headerContainer}>\n        <Text style={styles.billTo}>Bill To:</Text>\n        <Text>{invoice.company}</Text>\n        <Text>{invoice.address}</Text>\n        <Text>{invoice.phone}</Text>\n        <Text>{invoice.email}</Text>\n    </View>\n  );\n  \n  export default BillTo","import React, { Fragment } from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    invoiceNoContainer: {\n        flexDirection: 'row',\n        marginTop: 36,\n        justifyContent: 'flex-end'\n    },\n    invoiceDateContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n    },\n    invoiceDate: {\n            fontSize: 12,\n            fontStyle: 'bold',\n    },\n    label: {\n        width: 60\n    }\n    \n  });\n\n\n  const InvoiceNo = ({invoice}) => (\n        <Fragment>\n            <View style={styles.invoiceNoContainer}>\n                <Text style={styles.label}>Invoice No:</Text>\n                <Text style={styles.invoiceDate}>{invoice.invoice_no}</Text>\n            </View >\n            <View style={styles.invoiceDateContainer}>\n                <Text style={styles.label}>Date: </Text>\n                <Text >{invoice.trans_date}</Text>\n            </View >\n        </Fragment>\n  );\n  \n  export default InvoiceNo","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        backgroundColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        textAlign: 'center',\n        fontStyle: 'bold',\n        flexGrow: 1,\n    },\n    description: {\n        width: '60%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    amount: {\n        width: '15%'\n    },\n  });\n\n  const InvoiceTableHeader = () => (\n    <View style={styles.container}>\n        <Text style={styles.description}>Product Name</Text>\n        <Text style={styles.qty}>Jumlah</Text>\n        <Text style={styles.rate}>Harga Satuan</Text>\n        <Text style={styles.amount}>Harga Total</Text>\n    </View>\n  );\n  \n  export default InvoiceTableHeader","import React, {Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontStyle: 'bold',\n    },\n    description: {\n        width: '60%',\n        textAlign: 'left',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        paddingLeft: 8,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        textAlign: 'center',\n        paddingRight: 8,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        textAlign: 'center',\n        paddingRight: 8,\n    },\n    amount: {\n        width: '15%',\n        textAlign: 'center',\n        paddingRight: 8,\n    },\n    price: {\n        borderLeftColor: borderColor,\n        borderLeftWidth: 1,\n    },\n  });\n\n\nconst InvoiceTableRow = ({items}) => {\n    const rows = items&&items.map( item => \n        <View style={styles.row} key={item.name.toString()}>\n            <Text style={styles.description}>{item.name}</Text>\n            <Text style={styles.qty}>{item.qty}</Text>\n            <Text style={styles.amount}>{item.unit_price}</Text>\n            <Text style={styles.price}>{item.total}</Text>\n        </View>\n    )\n    return (<Fragment>{rows}</Fragment> )\n};\n  \n  export default InvoiceTableRow","import React, {Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontStyle: 'bold',\n        color: 'white'\n    },\n    description: {\n        width: '60%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    amount: {\n        width: '15%',\n    },\n   \n  });\n\nconst InvoiceTableBlankSpace = ({rowsCount}) => {\n    const blankRows = Array(rowsCount).fill(0)\n    const rows = blankRows && blankRows.map( (x, i) => \n        <View style={styles.row} key={`BR${i}`}>\n            <Text style={styles.description}>-</Text>\n            <Text style={styles.qty}>-</Text>\n            <Text style={styles.rate}>-</Text>\n            <Text style={styles.amount}>-</Text>\n        </View>\n    )\n    return (<Fragment>{rows}</Fragment> )\n};\n  \nexport default InvoiceTableBlankSpace\n\n","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontSize: 12,\n        fontStyle: 'bold',\n    },\n    description: {\n        width: '85%',\n        textAlign: 'right',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        paddingRight: 8,\n    },\n    total: {\n        width: '15%',\n        textAlign: 'right',\n        paddingRight: 8,\n    },\n  });\n\n\nconst InvoiceTableFooter = ({items}) => {\n    // const total = items.map(item => item.qty * item.rate)\n    //     .reduce((accumulator, currentValue) => accumulator + currentValue , 0)\n    return(    \n        <View style={styles.row}>\n            <Text style={styles.description}>TOTAL</Text>\n            <Text style={styles.total}>{items}</Text>\n        </View>\n    )\n};\n  \n  export default InvoiceTableFooter","import React from 'react';\nimport {View, StyleSheet } from '@react-pdf/renderer';\nimport InvoiceTableHeader from './InvoiceTableHeader'\nimport InvoiceTableRow from './InvoiceTableRow'\nimport InvoiceTableBlankSpace from './InvoiceTableBlankSpace'\nimport InvoiceTableFooter from './InvoiceTableFooter'\n\nconst tableRowsCount = 11;\n\nconst styles = StyleSheet.create({\n    tableContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 24,\n        borderWidth: 1,\n        borderColor: '#bff0fd',\n    },\n});\n\n  const InvoiceItemsTable = ({invoice}) => (\n    <View style={styles.tableContainer}>\n        <InvoiceTableHeader />\n        <InvoiceTableRow items={invoice.items} />\n        <InvoiceTableBlankSpace rowsCount={ tableRowsCount - invoice.items>0?invoice.items.length:0} />\n        <InvoiceTableFooter items={invoice.grand_total} />\n    </View>\n  );\n  \n  export default InvoiceItemsTable;","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n   \n    titleContainer:{\n        flexDirection: 'row',\n        marginTop: 12\n    },\n    reportTitle:{\n        fontSize: 12,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    }\n  });\n\n\n  const InvoiceThankYouMsg = () => (\n    <View style={styles.titleContainer}>\n        <Text style={styles.reportTitle}>Thank you for your business</Text>\n    </View>\n  );\n  \n  export default InvoiceThankYouMsg","import React from 'react';\nimport { Page, Document, Image, StyleSheet } from '@react-pdf/renderer';\nimport InvoiceTitle from './InvoiceTitle'\nimport BillTo from './BillTo'\nimport InvoiceNo from './InvoiceNo'\nimport InvoiceItemsTable from './InvoiceItemsTable'\nimport InvoiceThankYouMsg from './InvoiceThankYouMsg'\nimport logo from '../../logo.png'\n\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 30,\n        paddingLeft:60,\n        paddingRight:60,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n    }, \n    logo: {\n        width: 74,\n        height: 66,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    }\n  });\n  \n  const Invoice = ({invoice, data}) => (\n            <Document>\n                <Page size=\"A4\" style={styles.page}>\n                    <Image style={styles.logo} src={logo} />\n                    <InvoiceTitle title='Invoice'/>\n                    <InvoiceNo invoice={data}/>\n                    <BillTo invoice={data}/>\n                    <InvoiceItemsTable invoice={data} />\n                    <InvoiceThankYouMsg />\n                </Page>\n            </Document>\n        );\n  \n  export default Invoice","const invoice = {\n    \"id\": \"5df3180a09ea16dc4b95f910\",\n    \"invoice_no\": \"201906-28\",\n    \"balance\": \"$2,283.74\",\n    \"company\": \"MANTRIX\",\n    \"email\": \"susanafuentes@mantrix.com\",\n    \"phone\": \"+1 (872) 588-3809\",\n    \"address\": \"922 Campus Road, Drytown, Wisconsin, 1986\",\n    \"trans_date\": \"2019-09-12\",\n    \"due_date\": \"2019-10-12\",\n    \"items\": [\n      {\n        \"sno\": 1,\n        \"desc\": \"ad sunt culpa occaecat qui\",\n        \"qty\": 5,\n        \"rate\": 405.89,\n        \"total\" : 670.90\n      },\n    ]\n  }\n  \n  export default invoice","import React, { Component, Fragment, useEffect, useContext, useState } from 'react';\nimport { PDFViewer } from '@react-pdf/renderer'\nimport Invoice from './components/reports/Invoice'\nimport invoice from './data/invoice'\nimport './App.css';\nimport { Context as IncomeContext } from \"../../services/Context/IncomeContext\";\nexport default function App({ props, history }) {\n  const {\n    state,\n    InvoiceIncome\n  } = useContext(IncomeContext);\n  const [value, setValue] = useState([])\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      InvoiceIncome(history.location.state.userId)\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [])\n  console.log(state.invoiceIncome)\n\n  return (\n    <>\n      {state.loading ?\n        <div />\n        : <Fragment>\n          <PDFViewer width=\"1000\" height=\"600\" className=\"app\" >\n            {<Invoice invoice={invoice} data={state.invoiceIncome} />}\n          </PDFViewer>\n        </Fragment>}\n    </>\n  );\n}","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport { API } from '../Api/AccountingApi'\r\n\r\nconst JournalReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-JOURNAL-DAILY':\r\n            return {\r\n                ...state,\r\n                listJournalDaily: action.payload\r\n            }\r\n        case 'LIST-JOURNAL-DAILY-ADDITIONAL':\r\n            return {\r\n                ...state,\r\n                additionalData: action.payload\r\n            }\r\n        case 'LIST-LAPORAN-KEUANGAN':\r\n            return {\r\n                ...state,\r\n                listLaporanKeuangan: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst GetDailyJournal = dispatch => (date) => {\r\n    dispatch({ type: 'LOADING', payload: 'Menampilkan Data Jurnal...' })\r\n    console.log(`${API}/journal/${date}`)\r\n    axios.get(`${API}/journal/${date}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.additional_data))\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-JOURNAL-DAILY', payload: res.data.data })\r\n                dispatch({ type: 'LIST-JOURNAL-DAILY-ADDITIONAL', payload: res.data.additional_data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-JOURNAL-DAILY', payload: [] })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst PostingJournal = dispatch => (data, url) => {\r\n    dispatch({ type: 'LOADING', payload: 'Menampilkan Data Jurnal...' })\r\n    axios.post(`${API}/journal/review-${url}`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res))\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                alert(res.data.message)\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n\r\n\r\nconst JournalManual = dispatch => (data, callback, status, id) => {\r\n    dispatch({ type: 'LOADING', payload: 'Loading Data Manual...' })\r\n    var Fetch = ''\r\n    if (id == undefined) {\r\n        Fetch = axios.post(`${API}/journal/store`, data)\r\n    } else {\r\n        Fetch = axios.put(`${API}/journal/${id}/update`, data);\r\n    }\r\n    Fetch.then(res => {\r\n        console.log(JSON.stringify(res))\r\n        if (res.data.success) {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            callback()\r\n            alert(res.data.message)\r\n        } else {\r\n            alert(res.data.message)\r\n            dispatch({ type: 'NO-LOADING' })\r\n        }\r\n    }).catch(error => {\r\n        dispatch({ type: 'NO-LOADING' })\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst DeleteJournal = dispatch => (userId, callback) => {\r\n    dispatch({ type: 'LOADING', payload: 'Loading Delete...' })\r\n    axios.delete(`${API}/journal/${userId}/delete`)\r\n        .then(res => {\r\n            console.log(JSON.stringify(res))\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                callback()\r\n                alert(res.data.message)\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\nconst ListLaporanKeuangan = dispatch => (filter) => {\r\n    dispatch({ type: 'LOADING', payload: 'Menampilkan List Bahan Baku' })\r\n    if (filter != '') {\r\n        var url = `${API}/account-report?since=${filter.since}&until=${filter.until}`;\r\n    } else {\r\n        var url = `${API}/account-report`;\r\n    }\r\n    axios.get(url)\r\n        .then(res => {\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-LAPORAN-KEUANGAN', payload: res.data.data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\nexport const { Provider, Context } = CreateDataContext(\r\n    JournalReducer,\r\n    { GetDailyJournal, PostingJournal, JournalManual, DeleteJournal, ListLaporanKeuangan },\r\n    { loading: false, message: '', listJournalDaily: [], additionalData: {}, journalManual: [], listLaporanKeuangan: [] }\r\n)","import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport { Context as AuthContext } from \"../../services/Context/AuthContext\";\r\nimport { Context as JournalContext } from \"../../services/Context/JournalContext\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBBox,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from \"mdbreact\";\r\nimport { LinearProgress, TextField } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nvar d = new Date();\r\nconst JurnalPerhariComponent = ({ props, params, Change, Next, userData }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const { state, GetDailyJournal, PostingJournal, DeleteJournal } = useContext(JournalContext);\r\n  const [review, setReview] = useState(false);\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [save, setSave] = useState(false);\r\n  const [posting, setPosting] = useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(params.tanggal)\r\n  );\r\n  const [date, setDate] = useState(params.tanggal);\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate =\r\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n    setSelectedDate(date);\r\n    setDate(formattedDate);\r\n    props.history.push(`/jurnal-perhari/${formattedDate}`);\r\n    setReview(false);\r\n    // alert(formattedDate)\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetDailyJournal(date);\r\n  }, [date]);\r\n\r\n  const reviewStatus = () => {\r\n    if (!review) {\r\n      return (\r\n        <small style={{ color: \"black\" }}>\r\n          ...............................\r\n        </small>\r\n      );\r\n    } else if (review && !save) {\r\n      if (state.additionalData.review_status === \"Not Reviewed\") {\r\n        return <small style={{ color: \"orange\" }}>In Review</small>;\r\n      } else {\r\n        return (\r\n          <small style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n            {state.additionalData.status}\r\n          </small>\r\n        );\r\n      }\r\n    } else if (review && save && !posting) {\r\n      if (state.additionalData.review_status === \"Not Reviewed\") {\r\n        return (\r\n          <small style={{ color: \"orange\" }}>\r\n            {state.additionalData.status}\r\n          </small>\r\n        );\r\n      } else {\r\n        return (\r\n          <small style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n            Siap Posting\r\n          </small>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <small style={{ color: \"green\" }}>\r\n          <b>Direview & Diposting</b>\r\n        </small>\r\n      );\r\n    }\r\n  };\r\n\r\n  const memoComponent = () => {\r\n    // if(state.additionalData.review_status === 'Not Reviewed'){\r\n    return (\r\n      <Fragment>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Memo\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={3}\r\n          rowsMax={4}\r\n          onChange={(e) => setMemo(e.target.value)}\r\n        />\r\n\r\n        <MDBBtn\r\n          color=\"dark-green\"\r\n          gradient=\"blue\"\r\n          onClick={handleSave}\r\n          disabled={posting}\r\n        >\r\n          Simpan\r\n        </MDBBtn>\r\n      </Fragment>\r\n    );\r\n    // }else{\r\n    //     return(\r\n    //         <TextField fullWidth label=\"Memo\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={4} defaultValue={state.additionalData.memo} />\r\n    //     )\r\n    // }\r\n  };\r\n\r\n  const handleReview = () => {\r\n    GetDailyJournal(date);\r\n    setReview(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (state.listJournalDaily.length > 0) {\r\n      setSave(true);\r\n      // alert('Silahkan untuk melanjutkan posting!')\r\n    } else {\r\n      alert(\"Tidak tersedia data jurnal untuk tanggal yang dipilih!\");\r\n    }\r\n  };\r\n\r\n  const handlePosting = () => {\r\n    setPosting(true);\r\n    let data = {\r\n      reviewer_id: isAuthenticated().data.id,\r\n      memo: memo,\r\n      date: date,\r\n    };\r\n    PostingJournal(data, 'daily');\r\n    // alert(JSON.stringify(data))\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    DeleteJournal(id, () => GetDailyJournal(date))\r\n  }\r\n  const handleEdit = (data) => {\r\n    Next()\r\n    userData(data)\r\n  }\r\n  return (\r\n    <div>\r\n      {/* {JSON.stringify(state.additionalData)} */}\r\n      <MDBRow>\r\n        <MDBCol lg=\"9\">\r\n          <h4>Jurnal Umum | Perhari</h4>\r\n        </MDBCol>\r\n        <MDBCol lg=\"3\">\r\n          <MDBBox display=\"flex\" justifyContent=\"center\">\r\n            {save && (\r\n              <MDBBtn\r\n                color=\"dark-green\"\r\n                size=\"sm\"\r\n                gradient=\"green\"\r\n                onClick={handlePosting}\r\n                disabled={posting}\r\n              >\r\n                Posting Jurnal\r\n              </MDBBtn>\r\n            )}\r\n            {!save && (\r\n              <MDBBtn\r\n                color=\"dark-green\"\r\n                size=\"sm\"\r\n                gradient=\"blue\"\r\n                onClick={handleReview}\r\n                disabled={review}\r\n              >\r\n                Review Jurnal\r\n              </MDBBtn>\r\n            )}\r\n\r\n            <MDBBtn\r\n              color=\"dark-green\"\r\n              size=\"sm\"\r\n              gradient=\"blue\"\r\n              onClick={Change}\r\n            >\r\n              Tambah Jurnal Manual\r\n            </MDBBtn>\r\n          </MDBBox>\r\n        </MDBCol>\r\n      </MDBRow>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow>\r\n            <MDBCol lg=\"3\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Filter Tanggal\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\">\r\n              <h5 className=\"pt-2 mx-2\">\r\n                Tanggal Transaksi<br></br>\r\n                <span>{`${selectedDate.getDate()}/${selectedDate.getMonth() + 1\r\n                  }/${selectedDate.getFullYear()}`}</span>\r\n              </h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\">\r\n              <h5 className=\"pt-2 mx-2\">\r\n                Status<br></br>\r\n                {reviewStatus()}\r\n              </h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\">\r\n              <h5 className=\"pt-2 mx-2\">\r\n                Diperiksa Oleh<br></br>\r\n                {review && (\r\n                  <small>\r\n                    <b>Accountant</b>\r\n                  </small>\r\n                )}\r\n                {!review && <small>...............................</small>}\r\n              </h5>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n        {state.loading && <LinearProgress />}\r\n      </MDBCard>\r\n      {review && (\r\n        <MDBCard className=\"mb-2\">\r\n          {state && (\r\n            <MDBCardBody className=\"p-1\">\r\n              <MDBTable>\r\n                <MDBTableHead color=\"primary-color\" textWhite>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>NO. REFERENSI</th>\r\n                    <th>AKUN</th>\r\n                    <th>DESKRIPSI</th>\r\n                    <th>DEBIT(Rp.)</th>\r\n                    <th>KREDIT(Rp.)</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {state.listJournalDaily.map((item, i) => (\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        <b>{item.account.reference_number}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{item.account.name}</b>\r\n                      </td>\r\n                      <td>{item.account.information}</td>\r\n                      <td>\r\n                        <NumberFormat\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"Rp. \"}\r\n                          value={item.debit}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <NumberFormat\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"Rp. \"}\r\n                          value={item.credit}\r\n                        />\r\n                      </td>\r\n                      {\r\n                        item.review_harian == 0 &&\r\n                        <>\r\n                          {/* res.review_bulanan==0&& */}\r\n                          <EditIcon\r\n                            color=\"dark-green\"\r\n                            size=\"sm\"\r\n                            style={{ color: \"green\", margin: \"10px\" }}\r\n                            onClick={() => handleEdit(item)}\r\n                          />\r\n                          <DeleteIcon\r\n                            color=\"red\"\r\n                            // size=\"sm\"\r\n                            style={{ color: \"red\", margin: \"10px\" }}\r\n                            onClick={() => handleDelete(item.id)}\r\n                          />\r\n                        </>\r\n                      }\r\n                    </tr>\r\n                  ))}\r\n\r\n                  {/* <tr color=\"primary-color\">\r\n                                        <th colspan=\"6\">No. Transaksi : <b>PUSAT/IN/PEN/001/10-2020</b></th>\r\n                                    </tr> */}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n              <hr></hr>\r\n              <MDBRow className=\"mx-3\">\r\n                <MDBCol lg=\"9\">\r\n                  <h5 className=\"pt-2 mx-2\">\r\n                    <small>TOTAL DEBIT</small>\r\n                    <br></br>\r\n                    <small>TOTAL KREDIT</small>\r\n                  </h5>\r\n                </MDBCol>\r\n                <MDBCol lg=\"3\">\r\n                  <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                    <h5 className=\"pt-2 mx-2\">\r\n                      <small>\r\n                        <b>\r\n                          <NumberFormat\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"Rp. \"}\r\n                            value={state.additionalData.total_debit}\r\n                          />\r\n                        </b>\r\n                      </small>\r\n                      <br></br>\r\n                      <small>\r\n                        <b>\r\n                          <NumberFormat\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"Rp. \"}\r\n                            value={state.additionalData.total_credit}\r\n                          />\r\n                        </b>\r\n                      </small>\r\n                    </h5>\r\n                  </MDBBox>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <hr></hr>\r\n              <MDBRow className=\"mx-3\">\r\n                <MDBCol lg=\"6\">{memoComponent()}</MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          )}\r\n          {state.listJournalDaily.length === 0 && (\r\n            <MDBBox display=\"flex\" justifyContent=\"center\">\r\n              <h4 style={{ color: \"red\" }}>\r\n                Data Tidak Tersedia, Silahkan Pilih Tanggal Lain!\r\n              </h4>\r\n            </MDBBox>\r\n          )}\r\n        </MDBCard>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JurnalPerhariComponent;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context as AuthContext } from \"../../services/Context/AuthContext\";\r\nimport { Context as CustomerContext } from \"../../services/Context/CustomerContext\";\r\nimport { Context as AccountContext } from \"../../services/Context/AccountContext\";\r\nimport { Context as JournalContext } from \"../../services/Context/JournalContext\";\r\nimport { Context as ProductContext } from \"../../services/Context/ProductContext\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Icon,\r\n  FormControl,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from \"mdbreact\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst JurnalManualComponent = ({ Change, userData, status }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const {\r\n    state: { listAccount },\r\n    ListAccount,\r\n  } = useContext(AccountContext);\r\n  const { state, JournalManual } = useContext(JournalContext);\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [dataTanggal, setDataTanggal] = useState([]);\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n  const [bulan, setBulan] = useState(\"\");\r\n  const [ammount, setAmmount] = useState(0);\r\n  const [image, setImage] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState();\r\n\r\n  const constData = {\r\n    account_id: \"\",\r\n    description: \"\",\r\n    payment_method: \"\",\r\n    date: \"\",\r\n    debit: 0,\r\n    credit: 0,\r\n    akun: []\r\n  }\r\n  const [value, setValue] = useState(constData);\r\n  let today = new Date();\r\n  const handleChange = (name) => (event) => {\r\n    console.log('test = ', name)\r\n    if (name === \"akun\") {\r\n      console.log('masuk akun = ', event.target.value);\r\n      setValue({ ...value, [name]: event.target.value })\r\n      return 0;\r\n    }\r\n    setValue({\r\n      ...value,\r\n      [name]: event.target.value,\r\n    });\r\n\r\n    if (name === \"unit_price\") {\r\n      let set_ammount = event.target.value * value.unit;\r\n      setAmmount(set_ammount);\r\n    }\r\n    if (name === \"unit\") {\r\n      let set_ammount = event.target.value * value.unit_price;\r\n      setAmmount(set_ammount);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('user dtaa = ', userData);\r\n    ListAccount();\r\n    setValue(userData ? userData : constData);\r\n    \r\n    const loopingTanggal = () => {\r\n      let tanggal = \"\";\r\n      let data_tanggal = [];\r\n      for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n        data_tanggal.push({ tanggal: `${tanggal}` });\r\n      }\r\n      setDataTanggal(data_tanggal);\r\n    };\r\n    loopingTanggal();\r\n  }, []);\r\n\r\n  const dialogApprove = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\r\n          transakasi anda tidak di tolak oleh pihak Akuntan!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate = date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)\r\n    setSelectedDate(date);\r\n    setValue({\r\n      ...value,\r\n      date: formattedDate,\r\n    });\r\n  }\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n  };\r\n\r\n  const handleApproveProccess = async () => {\r\n\r\n    console.log(value)\r\n    let data = {\r\n      account_id: value.account_id,\r\n      debit: value.debit,\r\n      credit: value.credit,\r\n      description: value.description,\r\n      invoice_number: value.invoice_number,\r\n      date: today.getFullYear() + \"-\" + today.getMonth() + \"-\" + today.getDate(),\r\n    };\r\n\r\n  \r\n    JournalManual(data, Change, status, value.id)\r\n    setOpenDialogApprove(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* {today.getFullYear()} */}\r\n      <h4>Input Jurnal Manual</h4>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        {dialogApprove()}\r\n        {state.loading && <LinearProgress />}\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow className=\"m-3\">\r\n            <MDBCol lg=\"6\">\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Nomor Invoice\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  value={value.invoice_number}\r\n                  onChange={handleChange(\"invoice_number\")}\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-transaksi\"\r\n                    label=\"Tanggal Transaksi\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDate}\r\n                    views={[\"date\"]}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </form>\r\n            </MDBCol>\r\n            <MDBCol lg=\"6\">\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Akun\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Akun\"\r\n                  value={parseInt(value.account_id)}\r\n                  name={'account_id'}\r\n                  onChange={handleChange(\"account_id\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n\r\n                  {listAccount && listAccount.map((res, i) => (\r\n                    <MenuItem value={parseInt(res.id)}>{res.name}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <MDBRow className=\"m-12\">\r\n                <MDBCol lg=\"6\">\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Debit\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    value={value.debit}\r\n                    onChange={handleChange(\"debit\")}\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol lg=\"6\">\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Kredit\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    value={value.kredit}\r\n                    onChange={handleChange(\"credit\")}\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Keterangan\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value.description}\r\n                onChange={handleChange(\"description\")}\r\n              />\r\n              <MDBRow className=\"mt-3 mb-2\">\r\n                <MDBCol lg=\"12\">\r\n                  <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBBtn\r\n                      color=\"dark-green\"\r\n                      onClick={() => handleApproveDialog(\"approve\")}\r\n                      disabled={state.loading}\r\n                    >\r\n                      Simpan Transaksi\r\n                    </MDBBtn>\r\n                  </MDBBox>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(JurnalManualComponent);\r\n","import React, { Fragment, useState } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport JurnalPerhariComponent from '../../components/Jurnal/JurnalPerhariComponent';\r\nimport JurnalManualComponent from '../../components/Jurnal/JurnalManualComponent';\r\n\r\n\r\nexport default function JurnalPerHari(props) {\r\n    const { match: { params } } = props;\r\n    const [change, setChange] = useState(true)\r\n    const [value, setValue] = useState([])\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem MDBBreadcrumbItem><b>Jurnal Harian {params.tanggal} </b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                {change?\r\n                    <JurnalPerhariComponent props={props} Next={()=>setChange(!change)} params={params} Change={()=>setChange(!change)} userData={(data)=>setValue(data)} />:\r\n                    <JurnalManualComponent userData={value} Change={()=>setChange(!change)} status={true} />\r\n                }\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport { API } from '../Api/AccountingApi'\r\n\r\nconst LedgerReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-LEDGER':\r\n            return {\r\n                ...state,\r\n                listLedger: action.payload\r\n            }\r\n        case 'LIST-NERACA':\r\n            return {\r\n                ...state,\r\n                listNeraca: action.payload\r\n            }\r\n        case 'LEDGER-ADDITIONAL':\r\n            return {\r\n                ...state,\r\n                ledgerAdditional: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListLedger = dispatch => (data) => {\r\n    dispatch({ type: 'LOADING', payload: 'Menampilkan Data Buku Besar...' })\r\n    // axios.post(`${API}/ledger`, data)\r\n    axios.get(`${API}/buku-besar?tahun=${data.year}&bulan=${data.month}&account_id=${data.account_id}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.daftar))\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-LEDGER', payload: res.data.data.daftar })\r\n                dispatch({ type: 'LEDGER-ADDITIONAL', payload: res.data.additional_data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-LEDGER', payload: [] })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListNeraca = dispatch => (data) => {\r\n    dispatch({ type: 'LOADING', payload: 'Menampilkan Data Buku Besar...' })\r\n    // axios.post(`${API}/ledger`, data)\r\n    axios.get(`${API}/neraca-saldo?tahun=${data.year}&bulan=${data.month}`)\r\n        .then(res => {\r\n            alert(JSON.stringify(res.data.data))\r\n            if (res.data.success) {\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-NERACA', payload: res.data.data })\r\n                dispatch({ type: 'NERACA-ADDITIONAL', payload: res.data.additional_data })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({ type: 'NO-LOADING' })\r\n                dispatch({ type: 'LIST-LEDGER', payload: [] })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({ type: 'NO-LOADING' })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n// const ListLedger = dispatch => async (data) => {\r\n//     dispatch ({type: 'LOADING', payload: 'Menampilkan Data Buku Besar...'})\r\n//     try {\r\n//         let response = await fetch(`${API}/ledger`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Accept' : 'application/json',\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: data\r\n//         })\r\n//         let responseJson = await response.json()\r\n//         if(responseJson.success){\r\n//             dispatch({type: 'NO-LOADING'})\r\n//             dispatch({type: 'LIST-LEDGER', payload:responseJson.data.data})\r\n//             alert(responseJson.data.data)\r\n//         }else{\r\n//             alert(responseJson.message)\r\n//             dispatch({type: 'NO-LOADING'})\r\n//         }\r\n//     } catch (err) {\r\n//         dispatch({type: 'NO-LOADING'})\r\n//         alert(err)\r\n//     }\r\n// }\r\n\r\n\r\nexport const { Provider, Context } = CreateDataContext(\r\n    LedgerReducer,\r\n    { ListLedger, ListNeraca },\r\n    { loading: false, message: '', listLedger: [], ledgerAdditional: '', listNeraca: [] }\r\n)","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Context as LedgerContext } from '../../services/Context/LedgerContext'\r\nimport { Context as AccountContext } from '../../services/Context/AccountContext'\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBBox, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { InputLabel, Select, MenuItem, LinearProgress } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport moment from 'moment'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst BukuBesarComponent = ({ }) => {\r\n    const { state: { listAccount }, ListAccount } = useContext(AccountContext)\r\n    const { state, ListLedger } = useContext(LedgerContext)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [selectedDate2, setSelectedDate2] = useState();\r\n    const [] = useState('')\r\n    const [value, setValue] = useState({\r\n        account_id: '',\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        ListAccount()\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    const handleSelectAccount = (e) => {\r\n        // alert(JSON.stringify(e))\r\n        setValue({\r\n            ...value,\r\n            account_id: e\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        let formattedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate(date);\r\n        setValue({\r\n            ...value,\r\n            start_date: date\r\n        })\r\n    }\r\n\r\n    const handleDateChange2 = (date) => {\r\n        let formattedDate2 = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate2(date);\r\n        setValue({\r\n            ...value,\r\n            end_date: date\r\n        })\r\n    }\r\n\r\n    const handleFilter = () => {\r\n        if (value.account_id === '' || value.start_date === '' || value.end_date === '') {\r\n            alert('Pilih Jenis Akun & Tentukan Rentang Tanggal Transaksi!')\r\n        } else {\r\n            let data = {\r\n                account_id: value.account_id,\r\n                month: value.start_date.getMonth() + 1,\r\n                year: value.end_date.getFullYear()\r\n            }\r\n            console.log('data = ', data);\r\n            ListLedger(data)\r\n            console.log(state.listLedger)\r\n            // alert(JSON.stringify(state.listLedger))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {JSON.stringify(state.listLedger)} */}\r\n            <MDBRow>\r\n                <MDBCol lg='9'>\r\n                    <h4>Catatan Buku Besar</h4>\r\n                </MDBCol>\r\n                <MDBCol lg='3'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\">\r\n\r\n                    </MDBBox>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"2\">\r\n                            <InputLabel className=\"pt-2 mx-2\">Jenis Akun</InputLabel>\r\n                            <Select fullWidth className=\" mx-2\" onChange={(e) => handleSelectAccount(e.target.value)}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Pilih Jenis Akun</em>\r\n                                </MenuItem>\r\n                                {listAccount.map((item) => (\r\n                                    <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </MDBCol>\r\n                        {/* <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                No. Reff.<br></br>\r\n                                <small><i>Pilih Jenis Akun</i></small>\r\n                            </h5>\r\n                        </MDBCol> */}\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Pilih bulan\"\r\n                                        format=\"MMMM\"\r\n                                        value={selectedDate}\r\n                                        views={[\"month\"]}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Pilih tahun\"\r\n                                        // format=\"dd/MM/yyyy\"\r\n                                        views={[\"year\"]}\r\n                                        value={selectedDate2}\r\n                                        onChange={handleDateChange2}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                <MDBBtn color=\"dark-green\" gradient=\"blue\" onClick={handleFilter}>\r\n                                    Tampilkan <MDBIcon icon=\"filter\" className=\"ml-1\" />\r\n                                </MDBBtn>\r\n                                {/* <MDBBtn color=\"danger\" size=\"sm\">\r\n                                    Tolak <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                </MDBBtn> */}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n            </MDBCard>\r\n\r\n            {state.listLedger && (\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBTable>\r\n                            <MDBTableHead color=\"primary-color\" textWhite>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Tanggal</th>\r\n                                    <th>NO. TRANSAKSI</th>\r\n                                    <th>RINCIAN / DESKRIPSI</th>\r\n                                    <th>DEBIT(Rp.)</th>\r\n                                    <th>KREDIT(Rp.)</th>\r\n                                    <th>SALDO DEBIT(Rp.)</th>\r\n                                    <th>SALDO KREDIT(Rp.)</th>\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                {state.listLedger && state.listLedger.map((item, i) => (\r\n                                    <tr>\r\n                                        <td>{i + 1}</td>\r\n                                        <td> {item.Tanggal} </td>\r\n                                        <td><b>{item.invoice_number}</b></td>\r\n                                        <td>{item.description}</td>\r\n                                        <td> {item.Debet} </td>\r\n                                        <td>{item.Kredit}</td>\r\n                                        <td><b>{item['Saldo Debet']}  </b></td>\r\n                                        <td><b>{item['Saldo Kredit']}  </b></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n                        {/* <hr></hr>\r\n                        <MDBRow className='mx-3'>\r\n                            <MDBCol lg=\"9\">\r\n                                <h5 className=\"pt-2 mx-2\">\r\n                                    <small>TOTAL DEBIT</small><br></br>\r\n                                    <small>TOTAL KREDIT</small><br></br><hr></hr>\r\n                                    <small>SALDO AWAL</small><br></br>\r\n                                    <small>SALDO AKHIR</small>\r\n                                </h5>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBBox display='flex' justifyContent=\"start\">\r\n                                    <h5 className=\"pt-2 mx-2\">\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_credit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br><hr></hr>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_awal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_akhir} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small>\r\n                                    </h5>\r\n                                </MDBBox>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <hr></hr> */}\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BukuBesarComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport BukuBesarComponent from '../../components/BukuBesar/BukuBesarComponent';\r\n\r\n\r\n\r\nexport default function BukuBesar() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Buku Besar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <BukuBesarComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, LinearProgress, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { MDBRow, MDBCol, MDBBtn, MDBFormInline, MDBBox, MDBContainer } from 'mdbreact';\r\nimport { Context as JournalContext } from '../../services/Context/JournalContext'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport moment from 'moment';\r\nimport { ExternalLink } from 'react-external-link';\r\nimport Iframe from 'react-iframe';\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nvar d = new Date();\r\nconst BukuBesarKeuanganComponent = () => {\r\n    const classes = useStyles();\r\n    const { state, ListLaporanKeuangan } = useContext(JournalContext)\r\n    const [search, setSearch] = useState('')\r\n    const [selectedDate2, setSelectedDate2] = useState();\r\n    const [value, setValue] = useState({\r\n        account_id: '',\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n    const filterredDate = (date) => {\r\n        return date.getFullYear();\r\n    }\r\n\r\n    const [filter, setFilter] = useState({\r\n        tahun: new Date\r\n    })\r\n    const FilterRow = (data) => {\r\n        return {\r\n            tahun: filterredDate(filter.tahun)\r\n        }\r\n    }\r\n    const [tahun, setTahun] = useState(d.getFullYear());\r\n\r\n    const [years, setYears] = useState([]);\r\n\r\n\r\n    const handleDateChange2 = (date) => {\r\n        let tahun = date.getFullYear()\r\n        setSelectedDate2(date); \r\n        // state.loading = true\r\n        setValue({\r\n            ...value,\r\n            end_date: date\r\n        }) \r\n        handleChangeValue(tahun)\r\n        // setTimeout(() => {  state.loading = false }, 2000);\r\n    }\r\n    useEffect(() => {\r\n      const now = new Date().getUTCFullYear();\r\n      const years = Array(now - (now - 20))\r\n        .fill(\"\")\r\n        .map((v, idx) => now - idx);\r\n      setYears(years);\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        ListLaporanKeuangan(FilterRow(filter))\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        ListLaporanKeuangan(FilterRow(filter));\r\n    }, []);\r\n    // const  fullYear = new Date().getFullYear();\r\n    const [externalUrl, setExternalUrl] = useState(`http://localhost/farah_accounting_ws/public/laporan-keuangan-pdf/${moment().format('YYYY')}`);\r\n\r\n    const handleChangeValue = (tahun) => {\r\n        console.log(`http://localhost/farah_accounting_ws/public/laporan-keuangan-pdf/${tahun}`)\r\n        setExternalUrl(`http://localhost/farah_accounting_ws/public/laporan-keuangan-pdf/${tahun}`)\r\n    };\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MDBContainer fluid>\r\n                <MDBBox display='flex' style={{ marginBottom: 20 }} alignContent='between'>\r\n                    <MDBCol size=\"9\">\r\n                        <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                            <MDBCol lg=\"6\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <Grid container justify=\"space-around\">\r\n                                        <KeyboardDatePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"Pilih tahun\"\r\n                                            // format=\"dd/MM/yyyy\"\r\n                                            views={[\"year\"]}\r\n                                            value={selectedDate2}\r\n                                            onChange={handleDateChange2}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                </MuiPickersUtilsProvider>\r\n                            </MDBCol>\r\n\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n\r\n                </MDBBox>\r\n\r\n\r\n            </MDBContainer>\r\n            {state.loading && (\r\n                <LinearProgress />\r\n            )}\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Iframe url={externalUrl}\r\n                    width=\"1000px\"\r\n                    height=\"1000px\"\r\n                    id=\"myId\"\r\n                    className=\"m-20\"\r\n                    display=\"initial\"\r\n                    position=\"relative\" />\r\n            </div>\r\n            {/* <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Nama</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Nomor referensi</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Debit</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Kredit</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Informasi</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {state.listLaporanKeuangan.map((row) => {\r\n                            console.log(\"roooww = \",row)\r\n                            return(\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.reference_number}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.debit}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.credit}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.information}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        )})}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n         */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default BukuBesarKeuanganComponent\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport BukuBesarKeuanganComponent from '../../components/BukuBesar/BukuBesarKeuanganComponent';\r\n\r\nexport default function LaporanKeuangan() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Laporan Keuangan</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <BukuBesarKeuanganComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst MarketingRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Marketing' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default MarketingRoute;\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport { Context as CustomerContext } from \"../../../services/Context/CustomerContext\";\r\nimport { Context as AccountContext } from \"../../../services/Context/AccountContext\";\r\nimport { Context as IncomeContext } from \"../../../services/Context/IncomeContext\";\r\nimport { Context as ProductContext } from \"../../../services/Context/ProductContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Icon,\r\n  FormControl,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from \"mdbreact\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport RemoveCircleOutlinedIcon from '@material-ui/icons/RemoveCircleOutlined';\r\nconst TransaksiMasukComponent = (props) => {\r\n  const [subtotal, onChangeSubtotal] = useState([]);\r\n\r\n  const history = useHistory()\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const [selectedDate, setSelectedDate] = useState();\r\n  const [selectedDateTempo, setSelectedDateTempo] = useState();\r\n  const {\r\n    state: { listAccount },\r\n    ListAccount,\r\n  } = useContext(AccountContext);\r\n  const {\r\n    state: { listCustomer },\r\n    ListCustomer,\r\n  } = useContext(CustomerContext);\r\n  const {\r\n    state: { listProduct },\r\n    ListProduct\r\n  } = useContext(ProductContext);\r\n\r\n  const { state, AddIncome } = useContext(IncomeContext);\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [dataTanggal, setDataTanggal] = useState([]);\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n  const [bulan, setBulan] = useState(\"\");\r\n  const [tanggal_jt, setTanggal_jt] = useState(\"\");\r\n  const [bulan_jt, setBulan_jt] = useState(\"\");\r\n  const [ammount, setAmmount] = useState(0);\r\n  const [total, setTotal] = useState();\r\n  const [jmlprod, setJmlprod] = useState();\r\n  const [image, setImage] = useState([]);\r\n\r\n  const defaultData = {\r\n    customer: \"\",\r\n    account_id: \"\",\r\n    invoice_number: \"\",\r\n    description: \"\",\r\n    payment_method: \"\",\r\n    date: \"\",\r\n    information: \"\",\r\n    image: [],\r\n    shift: \"\",\r\n    uang_muka: \"\",\r\n    jatuh_tempo: \"\",\r\n    \r\n  };\r\n\r\n  function tex_dp(paymentod) {\r\n    if (paymentod == 'Pembayaran Bulanan') {\r\n      return (\r\n        <TextField\r\n          fullWidth label=\"Uang Muka\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline rowsMax={4}\r\n          value={0}\r\n          onChange={handleChange(\"uang muka\")} />\r\n      )\r\n    }\r\n  };\r\n\r\n  function jatuhtempo(paymentod) {\r\n    if (paymentod == 'Pembayaran Bulanan') {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-transaksi\"\r\n            label=\"Tanggal Jatuh Tempo\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={selectedDateTempo}\r\n            views={[\"date\"]}\r\n            onChange={handleDateTempoChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n  };\r\n\r\n  const [value, setValue] = useState(defaultData);\r\n  let today = new Date();\r\n  const handleChange = (name, ket, stok) => (event) => {\r\n    if (event.target.value == 'Pembayaran Uang Muka') {\r\n      console.log('show field');\r\n      let paymentod = event.target.value\r\n      tex_dp(paymentod)\r\n    }\r\n    if (ket) {\r\n      if (\r\n        Number(\r\n          `${value[name] ? value[name] : \"0\"}${event.target.value.slice(\r\n            event.target.value.length - 1\r\n          )}`\r\n        ) <= Number(stok)\r\n      ) {\r\n        setValue({\r\n          ...value,\r\n          [name]: event.target.value.replace(/[^0-9]/g, \"\"),\r\n        });\r\n      } else {\r\n        console.log(\"masuk error\");\r\n      }\r\n    } else {\r\n      setValue({\r\n        ...value,\r\n        [name]: event.target.value,\r\n      });\r\n      if (name === \"unit_price\") {\r\n        let set_ammount = event.target.value * value.unit;\r\n        setAmmount(set_ammount);\r\n      }\r\n      if (name === \"unit\") {\r\n        let set_ammount = event.target.value * value.unit_price;\r\n        setAmmount(set_ammount);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate = date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)\r\n    setSelectedDate(date);\r\n    setValue({\r\n      ...value,\r\n      date: formattedDate,\r\n    });\r\n  }\r\n\r\n  const handleDateTempoChange = (dateTempo) => {\r\n    let formattedDateTempo = dateTempo.getFullYear() + \"-\" + (\"0\" + (dateTempo.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + dateTempo.getDate()).slice(-2)\r\n    setSelectedDateTempo(dateTempo);\r\n    setValue({\r\n      ...value,\r\n      dateTempo: formattedDateTempo,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"VALUE : \", value)\r\n    console.log(\"Subtotal.. : \", subtotal)\r\n    updateTotalPrice()  \r\n  });\r\n  \r\n  const handleChangeProduk = (name, index) => (event) => {\r\n    console.log('name', name);\r\n\r\n    if (name === 'product') {\r\n      let id_prod = event.target.value.id\r\n\r\n      const prod_val  = Object.values(product)\r\n      if (prod_val.includes(id_prod)) {\r\n        alert(\"produk sudah ada di daftar pembelian\")\r\n        removeCard(index)\r\n        return(null)\r\n      }\r\n      // setJmlprod(1)\r\n      setProduct({\r\n        ...product,\r\n        [index]: event.target.value.id\r\n      })\r\n      setPrice({\r\n        ...price,\r\n        [index]:  event.target.value.unit_price\r\n      })\r\n      let prod_price = event.target.value.unit_price;\r\n      console.log('prod_price',price);\r\n\r\n      onChangeSubtotal({\r\n        ...subtotal,\r\n        [index] : 1 * prod_price\r\n      });\r\n\r\n     \r\n      setValue({\r\n        ...value,\r\n        ['product['+id_prod+']']: 1,\r\n      });\r\n        \r\n        if(subtotal.length === 0){\r\n          console.log('Sakali deui');\r\n          setTotal(1 * prod_price); \r\n          \r\n        }else{\r\n          updateTotalPrice()   \r\n        }\r\n        \r\n      \r\n      \r\n    } else {\r\n      let new_qty = parseInt(event.target.value)\r\n      console.log(\"Subtotal awal : \", subtotal)\r\n      console.log('new qty',new_qty);\r\n      if(isNaN(new_qty) || new_qty < 0){\r\n        console.log('is not nummber');\r\n      }else{\r\n        setValue({\r\n          ...value,\r\n          [name]: new_qty,\r\n        });\r\n  \r\n        onChangeSubtotal({\r\n          ...subtotal,\r\n          [index]: new_qty * price[index],\r\n        });\r\n        console.log(\"Price : \", price[index])\r\n        console.log(\"New Subtotal awal : \", subtotal)\r\n        updateTotalPrice()\r\n      }\r\n      \r\n      \r\n      \r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  \r\n  const updateTotalPrice = async () => {\r\n    let total_price;\r\n    total_price = Object.values(subtotal);\r\n    console.log('GRAND',total_price);\r\n    let sum = total_price.reduce((a, b) => a + b, 0)\r\n    console.log('SUM',sum);\r\n    if(sum == 0){\r\n      let total_price;\r\n      total_price = Object.values(subtotal);\r\n      console.log('GRAND',total_price);\r\n      let sum = total_price.reduce((a, b) => a + b, 0)\r\n      console.log('SUM',sum);\r\n      setTotal(sum);\r\n    }else{\r\n      setTotal(sum);\r\n    }\r\n    \r\n    console.log('value amount',total);\r\n\r\n  }\r\n  \r\n  const ammount_value = () =>{\r\n    return value.ammount;\r\n  }\r\n\r\n  useEffect(() => {\r\n    ListAccount();\r\n    // ListCustomer();\r\n    ListProduct();\r\n    setValue({\r\n      ...value,\r\n      user_id: isAuthenticated().data.id,\r\n    });\r\n    const loopingTanggal = () => {\r\n      let tanggal = \"\";\r\n      let data_tanggal = [];\r\n      for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n        data_tanggal.push({ tanggal: `${tanggal}` });\r\n      }\r\n      setDataTanggal(data_tanggal);\r\n    };\r\n    loopingTanggal();\r\n  }, []);\r\n\r\n  const dialogApprove = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\r\n          transakasi anda tidak di tolak oleh pihak Akuntan!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n  };\r\n  const [trigger, setTrigger] = useState(null);\r\n\r\n  const handleApproveProccess = async () => {\r\n    let formdata = new FormData();\r\n    console.log(value)\r\n    const tamp = await Object.keys(value).map((res) => {\r\n      console.log(res);\r\n      formdata.append('image',null)\r\n      if (res === \"date\") {\r\n        formdata.append(res, value.date)\r\n      } else if (res === \"jatuh_tempo\") {\r\n        formdata.append(res, value.dateTempo)\r\n      }\r\n      else {\r\n        formdata.append(res, value[res]);\r\n      }\r\n    });\r\n    Promise.all(tamp).then(() => {\r\n      console.log(formdata);\r\n      AddIncome(formdata, () => window.location.reload());\r\n      setOpenDialogApprove(false);\r\n    });\r\n  };\r\n\r\n  const removeImage = (form, img) => {\r\n    setImage([...image.filter((q) => q !== img)]);\r\n  };\r\n  const handleImage = (event) => {\r\n    setImage([...image, event.target.files[0]]);\r\n    setValue({\r\n      ...value,\r\n      image: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  function createObjectURL(media) {\r\n    if (media instanceof File) {\r\n      if (window.webkitURL) {\r\n        return window.webkitURL.createObjectURL(media);\r\n      } else if (window.URL && window.URL.createObjectURL) {\r\n        return window.URL.createObjectURL(media);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return \"kosong\";\r\n    }\r\n  }\r\n\r\n  function numberWithCommas(x) {\r\n    try {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    } catch (error) {\r\n      return '0';\r\n    }\r\n  }\r\n  const [count1, setCount] = useState([]);\r\n  const [product, setProduct] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  \r\n\r\n  const removeCard = (index) => {\r\n    console.log(index);\r\n    console.log(value[`product[${product[index]}]`])\r\n    delete value[`product[${product[index]}]`]\r\n    let newArr = [...count1];\r\n    newArr[index] = 'B';\r\n    setCount(newArr);\r\n   \r\n  }\r\n\r\n  const addProduct = () =>{\r\n    console.log('Sub total',subtotal);\r\n    setCount([...count1, 'A'])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Input Transaksi Masuk</h4>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        {dialogApprove()}\r\n        {state.loading && <LinearProgress />}\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow className=\"m-3\">\r\n            <MDBCol lg=\"6\">\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"No. Transaksi / Invoice\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  value={value.invoice_number}\r\n                  onChange={handleChange(\"invoice_number\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Nama Customer\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  value={value.customer}\r\n                  onChange={handleChange(\"customer\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Deskripsi Transaksi\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  multiline\r\n                  rowsMax={4}\r\n                  value={value.description}\r\n                  onChange={handleChange(\"description\")}\r\n                />\r\n                <br></br>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-transaksi\"\r\n                    label=\"Tanggal Transaksi\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDate}\r\n                    views={[\"date\"]}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <br></br>\r\n                <br></br>\r\n              </form>\r\n              <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                <p style={{ marginTop: '15px' }}>Tambah Produk</p>\r\n                <AddCircleIcon onClick={addProduct} />\r\n              </div>\r\n            </MDBCol>\r\n            <MDBCol lg=\"6\">\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Shift Kerja\r\n                    </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.shift}\r\n                  onChange={handleChange(\"shift\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Pilih Shift</em>\r\n                  </MenuItem>\r\n                  {[\r\n                    { id: 1, sif: \"Pagi\" },\r\n                    { id: 2, sif: \"Siang\" },\r\n                  ].map((item, i) => (\r\n                    <MenuItem key={i} value={item.sif}>\r\n                      {item.sif}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Metode Pembayaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.payment_method}\r\n                  onChange={handleChange(\"payment_method\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Tunai\">Tunai</MenuItem>\r\n                  <MenuItem value=\"Transfer\">Transfer</MenuItem>\r\n                  <MenuItem value=\"Pembayaran Bulanan\">\r\n                    Pembayaran Bulanan\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Retur Penjualan\">Retur Penjualan</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {tex_dp(value.payment_method)}\r\n              <br></br>\r\n              {jatuhtempo(value.payment_method)}\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n          {count1.map((res, index) => (\r\n            <>\r\n              {res === \"A\" && <Card style={{ marginTop: '10px' }}>\r\n                <CardContent>\r\n                  <MDBRow className=\"m-12\">\r\n                    <MDBCol lg=\"3\">\r\n                      <FormControl fullWidth>\r\n                        <RemoveCircleOutlinedIcon onClick={() => removeCard(index)} style={{ color: 'red', alignItems: 'flex-end', position: \"absolute\", fontSize: 25, cursor: 'pointer', marginLeft: 930, marginTop: -15 }} />\r\n                        <br></br>\r\n                        <InputLabel>Produk</InputLabel>\r\n                        <Select onChange={handleChangeProduk('product', index)}>\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {listProduct.map((res) => (\r\n                            <MenuItem value={res}>{res.name}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                    \r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        label=\"Jumlah Produk\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        onChange={handleChangeProduk(`product[${product[index]}]`, index)}\r\n                        value={value[`product[${product[index]}]`]}\r\n                      />\r\n                      \r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                    \r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"Harga\"\r\n                        variant=\"outlined\"\r\n                        label=\"Harga\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        margin=\"normal\"\r\n                        value={price[index]}\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"3\">\r\n                    \r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Total Harga\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        \r\n                        margin=\"normal\"\r\n                        value={subtotal[index]}\r\n                      />\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </CardContent>\r\n              </Card>}\r\n            </>\r\n          ))}\r\n\r\n          <br></br>\r\n          <br></br>\r\n          <MDBCol lg=\"12\">\r\n            <MDBRow className=\"mt-3 mb-2\">\r\n              <MDBCol lg=\"10\">\r\n                <b>TOTAL TRANSAKSI</b>\r\n                <br></br>\r\n              </MDBCol>\r\n              <MDBCol lg=\"2\">\r\n                <b>\r\n                  <NumberFormat\r\n                    value={total}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"Rp. \"}\r\n                  />\r\n                </b>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBCol>\r\n          <Divider style={{ variant: \"middle\", width: '100%' }} />\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <MDBRow className=\"mt-3 mb-2\">\r\n            <MDBCol lg=\"12\">\r\n              <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                <MDBBtn\r\n                  color=\"dark-green\"\r\n                  onClick={() => handleApproveDialog(\"approve\")}\r\n                  disabled={state.loading}\r\n                >\r\n                  Simpan Transaksi\r\n            </MDBBtn>\r\n              </MDBBox>\r\n            </MDBCol>\r\n            {/* <MDBCol lg=\"6\">\r\n                                    <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                                        <MDBBtn color=\"danger\" >\r\n                                            Batal\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol> */}\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TransaksiMasukComponent);","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport TransaksiMasukComponent from \"../../../components/Transaksi/Pemasukkan/TransaksiMasukComponent\";\r\n\r\nexport default function TransaksiMasuk() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Transaksi Masuk</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <TransaksiMasukComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context as AuthContext } from \"../../services/Context/AuthContext\";\nimport { Context as CustomerContext } from \"../../services/Context/CustomerContext\";\nimport { Context as AccountContext } from \"../../services/Context/AccountContext\";\nimport { Context as IncomeContext } from \"../../services/Context/IncomeContext\";\nimport { Context as ProductContext } from \"../../services/Context/ProductContext\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Button,\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  Icon,\n  FormControl,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox,MDBCardTitle } from \"mdbreact\";\nimport NumberFormat from \"react-number-format\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport RemoveCircleOutlinedIcon from '@material-ui/icons/RemoveCircleOutlined';\nconst KeuanganComponent = (props) => {\n  const defaultData = {\n    invoice_number: \"\",\n    repayment: \"\",\n    type: \"\",\n    // description: \"\",\n    // payment_method: \"\",\n    // date: \"\",\n    // information: \"\",\n    // image: [],\n    // shift: \"\",\n    // uang_muka :\"\",\n    // jatuh_tempo : \"\"\n  };\n  const [value, setValue] = useState(defaultData);\n  const [openAlertLimit, setOpenAlertLimit] = useState(false);\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\n  const {state, ListIncomeBl,GetDetailIncome,AddPelunasan} = useContext(IncomeContext);\n  const [dataTanggal, setDataTanggal] = useState([]);\n  const [tanggal, setTanggal] = useState(\"\");\n  const [bulan, setBulan] = useState(\"\");\n  const [image, setImage] = useState([]);\n  const [, setListData] = useState([]);\n  const [form, setForm] = useState([]);\n  useEffect(() => {\n      ListIncomeBl(\"\");\n      setListData(state.ListIncomeBl);\n      return () => {};\n    }, []);\n  \n    useEffect(()=>{\n      const obj = {\n        remaining_payment: Math.abs(state.detailIncome.remaining_payment),\n      }\n      setForm(obj);\n  },[state])\n\n  const onTagsChange = (event, values) => {\n    if(values){\n      console.log(`value`, values.id);\n    GetDetailIncome(values.id)\n    console.log('CONTENT',state.detailIncome);\n    }\n  }\n\n  const handleChange = (name, ket, stok) => (event) => {\n    if(name == 'bulanan'){\n      setForm({remaining_payment: event.target.value});\n      setValue({\n        repayment: event.target.value,\n        type: 0,\n        invoice_number: state.detailIncome.invoice_number,\n      });\n      if(event.target.value > Math.abs(state.detailIncome.remaining_payment)){\n        // alert('Nominal melebihi sisa pembayaran')\n        setOpenAlertLimit(true);\n        setForm({remaining_payment:Math.abs(state.detailIncome.remaining_payment)});\n      }\n    }\n    if(name == 'uangmuka'){\n      setForm({remaining_payment: event.target.value});\n      setValue({\n        repayment: event.target.value,\n        type: 1,\n        invoice_number: state.detailIncome.invoice_number,\n      });\n      if(event.target.value > Math.abs(state.detailIncome.remaining_payment)){\n        // alert('Nominal melebihi sisa pembayaran')\n        setOpenAlertLimit(true);\n        setForm({remaining_payment:Math.abs(state.detailIncome.remaining_payment)});\n      }\n    }\n  }\n  const removeImage = (form, img) => {\n    setImage([...image.filter((q) => q !== img)]);\n  };\n  const handleImage = (event) => {\n    setImage([...image, event.target.files[0]]);\n    setValue({\n      ...value,\n      image: event.target.files[0],\n    });\n  };\n  function createObjectURL(media) {\n    if (media instanceof File) {\n      if (window.webkitURL) {\n        return window.webkitURL.createObjectURL(media);\n      } else if (window.URL && window.URL.createObjectURL) {\n        return window.URL.createObjectURL(media);\n      } else {\n        return null;\n      }\n    } else {\n      //   return process.env.REACT_APP_API_DOMAIN + media.path;\n      return \"kosong\";\n    }\n  }\n\n  const handleApproveDialog = () => {\n    setOpenDialogApprove(true);\n  };\n\n  const handleApproveCancle = () => {\n    setOpenDialogApprove(false);\n  };\n\n  const AlertCencel = ()=>{\n    setOpenAlertLimit(false)\n  }\n  const handleApproveProccess = () => {\n    datas()\n    handleValue(state.detailIncome)\n  };\n\n  const submit = async () => {\n    let formdata = new FormData();\n    const tamp = await Object.keys(value).map((res) => {\n      console.log(\"tamp\",res);\n      formdata.append(res, value[res]);\n    });\n\n    Promise.all(tamp).then(() => {\n      console.log(value);\n      console.log(formdata);\n      AddPelunasan(formdata, () => window.location.reload());\n      setOpenDialogApprove(false);\n    });\n  }\n\n  function handleValue(data){\n    console.log('method',data);\n    if(data.payment_method == 'Pembayaran Bulanan'){\n      setValueBulanan()\n      if(value.repayment == ''){\n       setValueBulanan()\n      }else{\n        submit()\n      }\n      setTimeout(() => {\n        console.log(\"VALUES BULANAN\",value);\n      }, 500);\n      \n    }\n    if(data.payment_method == 'Pembayaran Uang Muka'){\n      setValueUM()\n      if(value.repayment == ''){\n        setValueUM()\n      }else{\n          submit()\n        }\n      \n      setTimeout(() => {\n        console.log(\"VALUES\",value);\n      }, 500);\n    \n    }\n  }\n  function setValueBulanan(){\n    setValue({\n      repayment: Math.abs(state.detailIncome.remaining_payment),\n      type: 0,\n      invoice_number: state.detailIncome.invoice_number,\n    });\n  }\n  function setValueUM(){\n    setValue({\n      repayment:Math.abs(state.detailIncome.remaining_payment),\n      type:1,\n      invoice_number:state.detailIncome.invoice_number,\n    });\n  }\n\n  const alertLimit = () => (\n    <Dialog\n      open={openAlertLimit}\n      onClose={AlertCencel}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Informasi !\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Nominal yang anda masukan Melebihi Sisa Pembayaran\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={AlertCencel}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  const dialogApprove = () => (\n    <Dialog\n      open={openDialogApprove}\n      onClose={handleApproveCancle}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Bayar?\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\n          transakasi anda tidak di tolak oleh pihak Akuntan!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleApproveCancle} color=\"secondary\">\n          Batal\n        </Button>\n        <Button\n          onClick={handleApproveProccess}\n          color=\"primary\"\n          autoFocus\n          disabled={state.loading}\n        >\n          {state.loading ? state.message : \"Bayar\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  function payment(){\n    if(state.detailIncome.payment_method == \"Pembayaran Uang Muka\"){\n     return(\n       <div>\n        <TextField\n      \n      fullWidth\n      label=\"Metode Pembayaran\"\n      variant=\"outlined\"\n      margin=\"normal\"\n      value=\"Pelunasan Uang Muka\"\n      \n    />\n                  <TextField\n                      fullWidth\n                      disabled\n                      label=\"Sisa Pembayaran\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={form.remaining_payment}\n                      onChange={handleChange(\"uangmuka\")}\n                    />   \n       </div>\n      \n    \n     ) \n    }else{\n      return(\n        <div>\n        <TextField\n        fullWidth\n        label=\"Metode Pembayaran\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        value=\"Pembayaran sisa bulanan\"\n        disabled\n      />\n          <TextField\n                      fullWidth\n                      label=\"Sisa Pembayaran\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={form.remaining_payment}\n                      onChange={handleChange(\"bulanan\")}\n                    />   \n        </div>\n        \n      )\n    }\n  }\n\n  \n\n\n  function showdatas(){\n    if(state.detailIncome){\n        return(\n          <MDBRow className=\"m-3\">\n                <MDBCol lg=\"7\">\n                {alertLimit()}\n                {dialogApprove()}\n                  <form>\n                    <TextField\n                      fullWidth\n                      label=\"Nama Pelanggan\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      multiline\n                      rowsMax={4}\n                      value={state.detailIncome.customer}\n                      // onChange={handleChange(\"name\")}\n                    />\n                    <br></br>\n                    <br></br>\n                    <TextField\n                      fullWidth\n                      label=\"Tanggal Jatuh Tempo\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      multiline\n                      rowsMax={4}\n                      value={state.detailIncome.due_date}\n                      // onChange={handleChange(\"name\")}\n                    />\n                    \n                    <br></br>\n            \n                    {payment(state.detailIncome)}\n                    \n                  </form>\n                </MDBCol>\n                <MDBCol lg=\"5\">\n                <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\n                      <div>\n                        <p style={{ color: \"grey\", fontSize: \"15px\" }}>\n                          Upload Gambar\n                        </p>\n                        <input\n                          type=\"file\"\n                          name=\"images[]\"\n                          id=\"button-file\"\n                          // className=\"display-none\"\n                          style={{ display: \"none\" }}\n                          accept=\"image/*\"\n                          onChange={handleImage}\n                        />\n                        <div className=\"flex justify-center sm:justify-start flex-wrap\">\n                          {image.length !== 1 && (\n                            <label\n                              htmlFor=\"button-file\"\n                              style={{\n                                padding: \"50px\",\n                                margin: \"10px\",\n                                alignItems: \"center\",\n                                borderRadius: \"10px\",\n                                boxShadow:\n                                  \"0 1px 3px 0 rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 2px 1px -1px rgba(0,0,0,.12)\",\n                              }}\n                            // className={\n                            //   \"flex relative w-128 h-128 rounded-4 mr-16 mb-16 overflow-hidden cursor-pointer hover:shadow-5\"\n                            // }\n                            >\n                              <Icon\n                                className={{\n                                  fontSize: \"3.6rem\",\n                                  color: \"rgba(0, 0, 0, 0.54)\",\n                                  width: \"1em\",\n                                  height: \"1em\",\n                                  overflow: \"hidden\",\n                                  flexShrink: \"0\",\n                                  useSelect: \"none\",\n                                  margin: \"16px\",\n                                }}\n                              >\n                                cloud_upload\n                              </Icon>\n                            </label>\n                          )}\n                          {image &&\n                            image.map((media, index) => {\n                              return (\n                                <img\n                                  onClick={() => removeImage(image, media)}\n                                  style={{\n                                    width: \"120px\",\n                                    marginBottom: \"20px\",\n                                    height: \"120px\",\n                                    borderRadius: \"10px\",\n                                    backgroundColor: \"red\",\n                                    margin: \"10px\",\n                                  }}\n                                  src={createObjectURL(media)}\n                                  alt=\"product2\"\n                                />\n                              );\n                            })}\n                        </div>\n                      </div>\n                    </FormControl>\n   \n                  <MDBRow className=\"mt-3 mb-2\">\n                    <MDBCol lg=\"12\">\n                      <MDBBox display=\"flex\" justifyContent=\"end\">\n                        <MDBBtn\n                          color=\"dark-green\"\n                          onClick={() => handleApproveDialog(\"approve\")}\n                          disabled={state.loading}>\n                          Simpan \n                        </MDBBtn>\n                      </MDBBox>\n                    </MDBCol>\n    \n                  </MDBRow>\n                </MDBCol>\n              </MDBRow>\n        )}\n        else{\n          return false\n        }\n    \n  }\n  const datas_content = ()=>{\n    let data = state.detailIncome\n    if(data != undefined){\n      return data\n    }\n  }\n  function datas()  {\n    let data = state.ListIncomeBl; \n    if (data !=undefined){\n        let list_data = data\n        // console.log('listdata',list_data);\n        return list_data; \n    }\n}\n\n\n  var comboBox = () => {\n    return (\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={top100Films}\n        getOptionLabel={(option) => option.invoice_number}\n        style={{ width: 600 ,marginLeft : 30}}\n        onChange={onTagsChange}\n        renderInput={(params) => <TextField {...params} label=\"Pilih Invoice\" variant=\"outlined\" />}\n      />\n    );\n    }\n\n    const top100Films = datas();\n    // const top100Films = [\n    //   { title: 'The Shawshank Redemption', year: 1994 },\n    //   { title: 'The Godfather', year: 1972 },\n    //   { title: 'The Godfather: Part II', year: 1974 },\n    //   { title: 'The Dark Knight', year: 2008 },\n    // ];\n   \n  return (\n    <div>\n      <h4>Transaksi Keuangan Penjualan</h4>\n      <hr className=\"\" />\n      <MDBCard className=\"mb-2\">\n        <MDBCardBody className=\"p-1\">\n          <MDBRow className=\"m-3\">\n            <MDBCol lg=\"7\">\n            {comboBox()}\n            </MDBCol>\n            <MDBCol lg=\"3\">\n            </MDBCol>\n          </MDBRow>\n          <MDBRow className=\"m-3\">\n            <MDBCol lg=\"12\">\n            {showdatas()}\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n      </MDBCard>\n    </div>\n  );\n}\nexport default withRouter(KeuanganComponent);","import React, { Fragment } from 'react'\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\nimport KeuanganComponent from '../../../components/Transaksi/KeuanganComponent';\n\nexport default function Keuangan() {\n    return (\n        <Fragment>\n            <MDBBreadcrumb >\n                <MDBBreadcrumbItem><b>Keuangan</b></MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n            <MDBContainer className=\"mt-0\" fluid>\n                <KeuanganComponent/>\n            </MDBContainer>\n        </Fragment>\n    )\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Context as IncomeContext } from \"../../services/Context/IncomeContext\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBBox } from \"mdbreact\";\nimport { useHistory, withRouter } from \"react-router-dom\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n\nconst ListKeuanganComponent = (props) => {\nlet list_data;\nlet belum_bayar;\nconst {state, ListKeuangan} = useContext(IncomeContext);\nconst [, setListData] = useState([]);\nuseEffect(() => {\n    ListKeuangan(\"\");\n    setListData(state.ListKeuangan);\n    return () => {};\n  }, []);\n\nfunction bb()  {\n    let data = state.ListKeuangan;    \n    if (data !=undefined){\n        list_data = data.data\n        console.log('listdata',list_data);\n        // tablebody(list_data)\n        belum_bayar = data.belum_dibayar\n            return belum_bayar; \n    }\n}\n\nfunction datas()  {\n    let data = state.ListKeuangan;    \n    if (data !=undefined){\n        list_data = data.data\n            return list_data; \n    }\n}\n\nfunction bt()  {\n    let data = state.ListKeuangan;    \n    if (data !=undefined){\n        let bln_terakhir = data.bulan_terakhir\n            return bln_terakhir; \n    }\n}\nfunction pjt()  {\n    let data = state.ListKeuangan;    \n    if (data !=undefined){\n        let pjt = data.jatuh_tempo\n            return pjt; \n    }\n}\n\nfunction btn_bayar(status,id){\n    console.log('id',id);\n    if(status == 'Belum Lunas'){\n        return (\n            <Button variant=\"contained\" color=\"primary\">Bayar</Button>\n        )\n    }\n    \n}\n\nfunction tablebody(){\n    if(datas() != undefined){\n        return (\n            <TableBody>\n            {datas().map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.date}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.invoice_number}</TableCell>\n                  <TableCell align=\"center\">{row.customer}</TableCell>\n                  <TableCell align=\"center\">{ row.remaining_payment == null ? '0' : row.remaining_payment}</TableCell>\n                  <TableCell align=\"center\">{row.ammount}</TableCell>\n                  <TableCell align=\"center\">{row.due_date == null ? '-' : row.due_date}</TableCell>\n                  <TableCell align=\"center\">{row.payment_status}</TableCell>\n                \n                </TableRow>\n              ))}\n            </TableBody>\n        )\n    }\n    \n}\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n  tableContainer :{\n    padding : 25\n  }\n});\n\n\nconst classes = useStyles();\n  return (\n    <div>\n      <h4>List Keuangan Penjualan</h4>\n      <hr className=\"\" />\n      {/* {JSON.stringify(state.ListKeuangan)} */}\n      \n      <MDBRow>\n                <MDBCol lg='4' md='4' className='mb-lg-0 mb-4'>\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\n                        <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\n                            <MDBCardBody>\n                                <MDBCardTitle>{bt()}</MDBCardTitle>\n                                <MDBCardText>\n                                    Penjualan 30 Hari terakhir\n                                    </MDBCardText>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBBox>\n                </MDBCol>\n                <MDBCol lg='4' md='4' className='mb-lg-0 mb-4'>\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\n                        <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\n                            <MDBCardBody>\n                                <MDBCardTitle>{pjt()}</MDBCardTitle>\n                                <MDBCardText>\n                                    Penjualan Jatuh tempo\n                                    </MDBCardText>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBBox>\n                </MDBCol>\n                <MDBCol lg='4' md='4' className='mb-lg-0 mb-4'>\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\n                        <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\n                            <MDBCardBody>\n                                <MDBCardTitle>{bb()}</MDBCardTitle>\n                                <MDBCardText>\n                                    Penjualan Belum di bayar\n                                    </MDBCardText>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBBox>\n                </MDBCol>\n        </MDBRow>\n        <br></br>\n        <MDBRow>\n        <MDBCol lg='12' md='12'>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n            <TableRow>\n                <StyledTableCell>Tanggal</StyledTableCell>\n                <StyledTableCell align=\"center\">Invoice</StyledTableCell>\n                <StyledTableCell align=\"center\">Customer</StyledTableCell>\n                <StyledTableCell align=\"center\">Sisa Tagihan</StyledTableCell>\n                <StyledTableCell align=\"center\">Total Tagihan</StyledTableCell>\n                <StyledTableCell align=\"center\">Jatuh Tempo</StyledTableCell>\n                <StyledTableCell align=\"center\">Status</StyledTableCell>\n              \n            </TableRow>\n            </TableHead>\n            {tablebody()}\n        </Table>\n        </TableContainer>\n\n        </MDBCol>\n\n      </MDBRow>\n    </div>\n  );\n}\nexport default withRouter(ListKeuanganComponent);","import React, { Fragment } from 'react'\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\nimport ListKeuanganComponent from '../../../components/Transaksi/ListKeuanganComponent';\n\nexport default function Keuangan() {\n    return (\n        <Fragment>\n            <MDBBreadcrumb >\n                <MDBBreadcrumbItem><b>Keuangan</b></MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n            <MDBContainer className=\"mt-0\" fluid>\n                <ListKeuanganComponent/>\n            </MDBContainer>\n        </Fragment>\n    )\n}\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { TextField, Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBBox,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from \"mdbreact\";\r\nimport { Context as AuthContext } from \"../../services/Context/AuthContext\";\r\nimport { Context as JournalContext } from \"../../services/Context/JournalContext\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nvar d = new Date();\r\nconst JurnalPerbulanComponent = ({ Next, userData, params }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const [review] = useState(false);\r\n  const [] = useState(false);\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [] = useState(false);\r\n  const [bulan, setBulan] = useState(0);\r\n  const [tahun, setTahun] = useState(d.getFullYear());\r\n  const { state, GetDailyJournal, PostingJournal, DeleteJournal } = useContext(JournalContext);\r\n  const [debit, setDebit] = useState(0);\r\n  const [kredit, setKredit] = useState(0);\r\n  const [date, setDate] = useState(params.tanggal);\r\n  useEffect(() => {\r\n    // var d = new Date();\r\n    // var n = d.getFullYear();\r\n    GetDailyJournal(`${tahun}/${bulan}`);\r\n  }, [bulan, tahun]);\r\n\r\n  useEffect(() => {\r\n    console.log('add = ', state);\r\n    setMemo(state.additionalData.review ? state.additionalData.review.memo : '')\r\n  }, [state.additionalData]);\r\n\r\n  const [years, setYears] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var d = 0,\r\n      c = 0;\r\n    state.listJournalDaily.map((res) => {\r\n      d += Number(res.debit);\r\n      c += Number(res.credit);\r\n    });\r\n    setDebit(d);\r\n    setKredit(c);\r\n  }, [state.listJournalDaily]);\r\n\r\n  useEffect(() => {\r\n    const now = new Date().getUTCFullYear();\r\n    const years = Array(now - (now - 20))\r\n      .fill(\"\")\r\n      .map((v, idx) => now - idx);\r\n    setYears(years);\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    DeleteJournal(id, () => GetDailyJournal(`${tahun}/${bulan}`))\r\n  }\r\n  const handleEdit = (data) => {\r\n    Next()\r\n    userData(data)\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (state.listJournalDaily.length > 0) {\r\n      // setSave(true);\r\n      // alert('Silahkan untuk melanjutkan posting!')\r\n      let data = {\r\n        reviewer_id: isAuthenticated().data.id,\r\n        memo: memo,\r\n        year: tahun,\r\n        month: bulan\r\n      };\r\n      PostingJournal(data, 'monthly');\r\n    } else {\r\n      alert(\"Tidak tersedia data jurnal untuk tanggal yang dipilih!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MDBRow>\r\n        <MDBCol lg=\"9\">\r\n          <h4>Jurnal Umum | Perbulan</h4>\r\n        </MDBCol>\r\n      </MDBRow>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow>\r\n            <MDBCol lg=\"2\" className=\"ml-4\">\r\n              <InputLabel>Bulan</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={bulan}\r\n                onChange={(event) => setBulan(event.target.value)}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Pilih Bulan</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"01\">Januari</MenuItem>\r\n                <MenuItem value=\"02\">Pebruari</MenuItem>\r\n                <MenuItem value=\"03\">Maret</MenuItem>\r\n                <MenuItem value=\"04\">April</MenuItem>\r\n                <MenuItem value=\"05\">Mei</MenuItem>\r\n                <MenuItem value=\"06\">Juni</MenuItem>\r\n                <MenuItem value=\"07\">Juli</MenuItem>\r\n                <MenuItem value=\"08\">Agustus</MenuItem>\r\n                <MenuItem value=\"09\">September</MenuItem>\r\n                <MenuItem value=\"10\">Oktober</MenuItem>\r\n                <MenuItem value=\"11\">Nopember</MenuItem>\r\n                <MenuItem value=\"12\">Desember</MenuItem>\r\n              </Select>\r\n            </MDBCol>\r\n            <MDBCol lg=\"2\" className=\"ml-4\">\r\n              <InputLabel>Tahun</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                value={tahun}\r\n                onChange={(event) => setTahun(event.target.value)}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Pilih Bulan</em>\r\n                </MenuItem>\r\n                {years.map((res, index) => (\r\n                  <MenuItem value={res}>{res}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <MDBCard className=\"mb-2\">\r\n        <MDBCardBody className=\"p-1\">\r\n          {/* <MDBRow className='m-3'>\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Tanggal Transaksi<br></br>\r\n                                <small>11/07/2020</small>\r\n                            </h5>\r\n                        </MDBRow> */}\r\n          <MDBTable>\r\n            <MDBTableHead color=\"primary-color\" textWhite>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>NO. REFERENSI</th>\r\n                <th>AKUN</th>\r\n                <th>DESKRIPSI</th>\r\n                <th>KREDIT(Rp.)</th>\r\n                <th>DEBIT(Rp.)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {state &&\r\n                state.listJournalDaily.map((res) => {\r\n                  return (\r\n                    <>\r\n                      <tr>\r\n                        <td>{res.account_id}</td>\r\n                        <td>\r\n                          <b>{res.account.reference_number}</b>\r\n                        </td>\r\n                        <td>{res.account.name}</td>\r\n                        <td>{res.description}</td>\r\n                        <td><NumberFormat value={res.debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} style={{color:'green'}}/></td>\r\n                        <td><NumberFormat value={res.credit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} style={{color:'red'}}/></td>\r\n                        <td>\r\n                          {\r\n                            res.review_bulanan == 0 &&\r\n                            <>\r\n\r\n                              <EditIcon\r\n                                color=\"dark-green\"\r\n                                size=\"sm\"\r\n                                style={{ color: \"green\", margin: \"10px\" }}\r\n                                onClick={() => handleEdit(res)}\r\n                              />\r\n                              <DeleteIcon\r\n                                color=\"red\"\r\n                                // size=\"sm\"\r\n                                style={{ color: \"red\", margin: \"10px\" }}\r\n                                onClick={() => handleDelete(res.id)}\r\n                              /></>\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n          <hr></hr>\r\n          <MDBRow className=\"mx-3\">\r\n            <MDBCol lg=\"9\">\r\n              <h5 className=\"pt-2 mx-2\">\r\n                <small>TOTAL DEBIT</small>\r\n                <br></br>\r\n                <small>TOTAL KREDIT</small>\r\n              </h5>\r\n            </MDBCol>\r\n            <MDBCol lg=\"3\">\r\n              <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                <h5 className=\"pt-2 mx-2\">\r\n                  <small>\r\n                  <b> <NumberFormat value = {kredit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '}  /> </b>\r\n                  </small>\r\n                  <br></br>\r\n                  <small>\r\n                 <b><NumberFormat value={debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '}/> </b>\r\n                  </small>\r\n                </h5>\r\n              </MDBBox>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <hr></hr>\r\n          {false && state.listJournalDaily.length > 0 && (\r\n            <MDBRow className=\"mx-3\">\r\n              <MDBCol lg=\"6\">\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Memo\"\r\n                  // defaultValue=\"Default Value\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  multiline\r\n                  rows={3}\r\n                  value={memo}\r\n                  rowsMax={4}\r\n                  onChange={(e) => setMemo(e.target.value)}\r\n                />\r\n                <MDBBtn color=\"dark-green\" gradient=\"blue\" onClick={handleSave} >\r\n                  Simpan\r\n                </MDBBtn>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          )}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JurnalPerbulanComponent;\r\n","import React, { Fragment, useState } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport JurnalPerbulanComponent from '../../components/Jurnal/JurnalPerbulanComponent';\r\nimport JurnalManualComponent from '../../components/Jurnal/JurnalManualComponent';\r\n\r\n\r\nexport default function JurnalPerbulan(props) {\r\n    const { match: { params } } = props;\r\n    const [Next, setNext] = useState(0);\r\n    const [value, setValue] = useState([])\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem MDBBreadcrumbItem><b>Jurnal Perbulan</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n              {Next===0&&<JurnalPerbulanComponent Next={()=>setNext(1)} params = {params} userData={(data)=>setValue(data)} />}\r\n              {Next===1&&<JurnalManualComponent userData={value} status={false} Change={()=>setNext(0)} />}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport { Context as AccountContext } from \"../../../services/Context/AccountContext\";\r\nimport { Context as OutcomeContext } from \"../../../services/Context/OutcomeContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Dialog,\r\n  Icon,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TransaksiKeluarComponent = (props) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const { state: { listAccount }, ListAccount } = useContext(AccountContext);\r\n  const { state, ListOutcomeTypeBy, AddOutcome, PaymentMethod } = useContext(OutcomeContext);\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState();\r\n  const [dataTanggal, setDataTanggal] = useState([]);\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n  const [bulan, setBulan] = useState(\"\");\r\n  const [typeOutcome, setTypeOutcome] = useState(\"\");\r\n  const [image, setImage] = useState([]);\r\n  const [value, setValue] = useState({\r\n    // account_id: \"\",\r\n    type: \"\",\r\n    invoice_number: \"\",\r\n    description: \"\",\r\n    unit_price: '',\r\n    payment_method: \"\",\r\n    qty: '',\r\n    // ammount: \"\",\r\n    // user_id: '',\r\n    information: \"\",\r\n  });\r\n  let today = new Date();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    if (\r\n      name === \"ammount\" ||\r\n      name === \"unit_price\" ||\r\n      name === \"total_invoice\" ||\r\n      name === \"qty\"\r\n    ) {\r\n      setValue({\r\n        ...value,\r\n        [name]: event.target.value.replace(/[^0-9]/g, \"\"),\r\n      });\r\n    } else\r\n      setValue({\r\n        ...value,\r\n        [name]: event.target.value,\r\n      });\r\n  };\r\n\r\n  const handleChangeTypeOutcome = (value) => {\r\n    setTypeOutcome(value);\r\n    return ListOutcomeTypeBy(value);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate = date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)\r\n    setSelectedDate(date);\r\n    setValue({\r\n      ...value,\r\n      date: formattedDate,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    ListAccount();\r\n    PaymentMethod();\r\n    const loopingTanggal = () => {\r\n      let tanggal = \"\";\r\n      let data_tanggal = [];\r\n      for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n        data_tanggal.push({ tanggal: `${tanggal}` });\r\n      }\r\n      setDataTanggal(data_tanggal);\r\n    };\r\n    loopingTanggal();\r\n  }, []);\r\n\r\n  const dialogApprove = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\r\n          transakasi anda tidak di tolak oleh pihak Akuntan!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n  };\r\n\r\n  const handleApproveProccess = async () => {\r\n    let formData = new FormData();\r\n    const tamp = Object.keys(value).map((res) => {\r\n      formData.append(res, value[res]);\r\n    })\r\n    //formData.append('date', today.getFullYear() + \"-\" + bulan + \"-\" + tanggal)\r\n    formData.append('category', typeOutcome == \"Logistik\" ? \"Logistik\" : \"Operasional\")\r\n    formData.append('image', image[0]);\r\n    formData.append('user_id', isAuthenticated().data.id);\r\n    AddOutcome(formData, () =>\r\n      setValue({\r\n        outcometype_id: \"\",\r\n        account_id: \"\",\r\n        invoice_number: \"\",\r\n        ammount: \"\",\r\n        information: \"\",\r\n        description: \"\",\r\n        payment_method: \"\",\r\n        date: \"\",\r\n      })\r\n    );\r\n    // alert(JSON.stringify(data))\r\n    setOpenDialogApprove(false);\r\n  };\r\n\r\n  const removeImage = (form, img) => {\r\n    setImage([...image.filter((q) => q !== img)]);\r\n  };\r\n  const handleImage = (event) => {\r\n    setImage([...image, event.target.files[0]]);\r\n  };\r\n\r\n  function createObjectURL(media) {\r\n    if (media instanceof File) {\r\n      if (window.webkitURL) {\r\n        return window.webkitURL.createObjectURL(media);\r\n      } else if (window.URL && window.URL.createObjectURL) {\r\n        return window.URL.createObjectURL(media);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      //   return process.env.REACT_APP_API_DOMAIN + media.path;\r\n      return \"kosong\";\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {/* {today.getFullYear()} */}\r\n      {/* {JSON.stringify(listOutcomeType)} */}\r\n      <h4>Input Transaksi Keluar</h4>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        {dialogApprove()}\r\n        {state.loading && <LinearProgress />}\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow className=\"m-3\">\r\n            <MDBCol lg=\"6\">\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"No. Transaksi / Invoice\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  value={value.invoice_number}\r\n                  onChange={handleChange(\"invoice_number\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Deskripsi Transaksi\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  multiline\r\n                  rowsMax={4}\r\n                  value={value.description}\r\n                  onChange={handleChange(\"description\")}\r\n                />\r\n                \r\n                <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Shift Kerja\r\n                  </InputLabel>\r\n                  <Select\r\n                    label=\"Metode Pembayaran\"\r\n                    value={value.shift}\r\n                    onChange={handleChange(\"shift\")}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Pilih shift</em>\r\n                    </MenuItem>\r\n                    {[\r\n                      { id: 1, sif: \"Pagi\" },\r\n                      { id: 2, sif: \"Siang\" },\r\n                    ].map((item, i) => (\r\n                      <MenuItem key={i} value={item.sif}>\r\n                        {item.sif}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <br></br>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-transaksi\"\r\n                    label=\"Tanggal Transaksi\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDate}\r\n                    views={[\"date\"]}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <br></br>\r\n                <br></br>\r\n                <div>\r\n                  <p style={{ color: \"grey\", fontSize: \"15px\" }}>\r\n                    Upload Gambar\r\n                  </p>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"images[]\"\r\n                    id=\"button-file\"\r\n                    // className=\"display-none\"\r\n                    style={{ display: \"none\" }}\r\n                    accept=\"image/*\"\r\n                    onChange={handleImage}\r\n                  />\r\n                  <div className=\"flex justify-center sm:justify-start flex-wrap\">\r\n                    <label\r\n                      htmlFor=\"button-file\"\r\n                      style={{\r\n                        padding: \"50px\",\r\n                        margin: \"10px\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: \"10px\",\r\n                        boxShadow:\r\n                          \"0 1px 3px 0 rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 2px 1px -1px rgba(0,0,0,.12)\",\r\n                      }}\r\n                    >\r\n                      <Icon\r\n                        className={{\r\n                          fontSize: \"3.6rem\",\r\n                          color: \"rgba(0, 0, 0, 0.54)\",\r\n                          width: \"1em\",\r\n                          height: \"1em\",\r\n                          overflow: \"hidden\",\r\n                          flexShrink: \"0\",\r\n                          useSelect: \"none\",\r\n                          margin: \"16px\",\r\n                        }}\r\n                      >\r\n                        cloud_upload\r\n                      </Icon>\r\n                    </label>\r\n                    {image &&\r\n                      image.map((media, index) => {\r\n                        return (\r\n                          <img\r\n                            onClick={() => removeImage(image, media)}\r\n                            style={{\r\n                              width: \"120px\",\r\n                              marginBottom: \"20px\",\r\n                              height: \"120px\",\r\n                              borderRadius: \"10px\",\r\n                              backgroundColor: \"red\",\r\n                              margin: \"10px\",\r\n                            }}\r\n                            src={createObjectURL(media)}\r\n                            alt=\"product2\"\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </MDBCol>\r\n            <MDBCol lg=\"6\">\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Tipe Jenis Pengeluaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={typeOutcome}\r\n                  onChange={(e) => handleChangeTypeOutcome(e.target.value)}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Logistik\">Logistik</MenuItem>\r\n                  <MenuItem value=\"Operasional-Perusahaan\">\r\n                    Operasional Perusahaan\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <MDBRow className=\"m-12\">\r\n                <MDBCol lg=\"12\">\r\n                  <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      Jenis Pengeluaran\r\n                    </InputLabel>\r\n                    <Select\r\n                      label=\"Metode Pembayaran\"\r\n                      value={value.type}\r\n                      onChange={handleChange(\"type\")}\r\n                    >\r\n                      {typeOutcome === \"\" ? (\r\n                        <MenuItem value=\"\">\r\n                          <em>Pilih Jenis Akun Terlebih Dahulu</em>\r\n                        </MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                      )}\r\n                      {state.listOutcomeType.map((item, i) => (\r\n                        <MenuItem key={i} value={item}>\r\n                          {item}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Quantity\"\r\n                // defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                //   type=\"number\"\r\n                value={value.qty}\r\n                onChange={handleChange(\"qty\")}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Harga Satuan\"\r\n                //   defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                //   type=\"number\"\r\n                value={value.unit_price}\r\n                onChange={handleChange(\"unit_price\")}\r\n              />\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Metode Pembayaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.payment_method}\r\n                  onChange={handleChange(\"payment_method\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {state.paymentMethod && state.paymentMethod.map((res) => (\r\n                    <MenuItem value={res}>{res}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Keterangan\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value.information}\r\n                onChange={handleChange(\"information\")}\r\n              />\r\n              <MDBRow className=\"mt-3 mb-2\">\r\n                <MDBCol lg=\"12\">\r\n                  <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBBtn\r\n                      color=\"dark-green\"\r\n                      onClick={() => handleApproveDialog(\"approve\")}\r\n                      disabled={state.loading}\r\n                    >\r\n                      Simpan Transaksi\r\n                    </MDBBtn>\r\n                  </MDBBox>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TransaksiKeluarComponent);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport { Context as AccountContext } from \"../../../services/Context/AccountContext\";\r\nimport { Context as OutcomeContext } from \"../../../services/Context/OutcomeContext\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Icon,\r\n  FormControl,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TransaksiKeluarComponent = ({ props, data, Next }) => {\r\n  const history = useHistory();\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const { state: { listAccount }, ListAccount, } = useContext(AccountContext);\r\n  const { state, DetailOutcome, UpdateOutcome, ListOutcomeTypeBy } = useContext(OutcomeContext);\r\n  const [selectedDate, setSelectedDate] = useState();\r\n  const [openDialogApprove, setOpenDialogApprove] = useState(false);\r\n  const [dataTanggal, setDataTanggal] = useState([]);\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n  const [bulan, setBulan] = useState(\"\");\r\n  const [ammount, setAmmount] = useState(0);\r\n  const [image, setImage] = useState([]);\r\n  const [typeOutcome, setTypeOutcome] = useState(\"\");\r\n\r\n  const defaultData = {\r\n    customer: \"\",\r\n    account_id: \"\",\r\n    user_id: null,\r\n    invoice_number: \"\",\r\n    description: \"\",\r\n    payment_method: \"\",\r\n    date: \"\",\r\n    information: \"\",\r\n    image: [],\r\n    shift: \"\",\r\n  };\r\n\r\n  const [value, setValue] = useState(defaultData);\r\n  let today = new Date();\r\n  const handleChange = (name, ket, stok) => (event) => {\r\n    console.log('firs render = ', value[name] ? value[name] : \"0\");\r\n    if (ket) {\r\n      if (\r\n        Number(\r\n          `${value[name] ? value[name] : \"\"}${event.target.value.slice(\r\n            event.target.value.length - 1\r\n          )}`\r\n        ) <= Number(stok)\r\n      ) {\r\n        setValue({\r\n          ...value,\r\n          [name]: event.target.value.replace(/[^0-9]/g, \"\"),\r\n        });\r\n      } else {\r\n        if (value[name] === undefined || value[name] === null) {\r\n          setValue({\r\n            ...value,\r\n            [name]: '',\r\n          });\r\n        }\r\n        console.log(\"masuk error\");\r\n        return 0;\r\n      }\r\n    } else {\r\n      console.log('elseee')\r\n      setValue({\r\n        ...value,\r\n        [name]: event.target.value,\r\n      });\r\n      if (name === \"unit_price\") {\r\n        let set_ammount = event.target.value * value.unit;\r\n        setAmmount(set_ammount);\r\n      }\r\n      if (name === \"unit\") {\r\n        let set_ammount = event.target.value * value.unit_price;\r\n        setAmmount(set_ammount);\r\n      }\r\n    }\r\n  };\r\n\r\n  const month = [\r\n    \"Januari\",\r\n    \"Pebruari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ];\r\n\r\n  const [updated, setUpdated] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DetailOutcome(data.id);\r\n    setUpdated(isAuthenticated().data.level === 'Admin' ? false : true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    ListAccount();\r\n    setValue(data);\r\n\r\n    setImage([data.image]);\r\n    setTanggal(data.date.split(\" \")[0]);\r\n    var bln = 0;\r\n    month.map((res, i) => {\r\n      console.log(res);\r\n      if (res === data.date.split(\" \")[1]) {\r\n        bln = i + 1;\r\n      }\r\n    });\r\n    setBulan(bln);\r\n    console.log(\"data  ==  \", data);\r\n    const loopingTanggal = () => {\r\n      let tanggal = \"\";\r\n      let data_tanggal = [];\r\n      for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n        data_tanggal.push({ tanggal: `${tanggal}` });\r\n      }\r\n      setDataTanggal(data_tanggal);\r\n    };\r\n    loopingTanggal();\r\n  }, [state.detailOutcome]);\r\n\r\n  const dialogApprove = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Sebelum menyimpan transaksi, pastikan inputan sudah benar agar\r\n          transakasi anda tidak di tolak oleh pihak Akuntan!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          Batal\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const alertSuccess = () => (\r\n    <Dialog\r\n      open={openDialogApprove}\r\n      onClose={handleApproveCancle}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Success?\"}</DialogTitle>\r\n      <DialogActions>\r\n        <Button onClick={handleApproveCancle} color=\"secondary\">\r\n          OK\r\n        </Button>\r\n        <Button\r\n          onClick={handleApproveProccess}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={state.loading}\r\n        >\r\n          {state.loading ? state.message : \"Simpan Transaksi\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleApproveDialog = () => {\r\n    setOpenDialogApprove(true);\r\n  };\r\n\r\n  const handleApproveCancle = () => {\r\n    setOpenDialogApprove(false);\r\n  };\r\n  const [trigger, setTrigger] = useState(null);\r\n\r\n\r\n  const handleApproveProccess = async () => {\r\n    let formdata = new FormData();\r\n    const tamp = await Object.keys(value).map(async (res) => {\r\n      console.log(value[res]);\r\n\r\n      if (res === \"date\") {\r\n        formdata.append(res, today.getFullYear() + \"-\" + bulan + \"-\" + tanggal); //format tanggal\r\n      } else if (\r\n        res === \"shift\" ||\r\n        res === \"customer\" ||\r\n        res === \"invoice_number\" ||\r\n        res === \"information\" ||\r\n        res === \"payment_method\" ||\r\n        res === \"description\"\r\n      ) {\r\n        formdata.append(res, value[res]);\r\n      } else if (res === \"image\") {  //format gambar\r\n        if (typeof value[res] === \"string\") {\r\n          const tt = await urlToObject(\r\n            \"https://newdemo.aplikasiskripsi.com/farah_accounting/public/\" + //simpan ke BE\r\n            data.image\r\n          ).then((result) => result);\r\n          formdata.append(res, tt);\r\n        } else {\r\n          formdata.append(res, value[res]);\r\n        }\r\n      } else if (res !== \"user_id\") {\r\n        formdata.append(res, value[res]);\r\n      }\r\n    });\r\n    formdata.append(\"_method\", \"PUT\");\r\n    formdata.append(\"user_id\", data.user_id);\r\n\r\n    Promise.all(tamp).then((res) => {\r\n      let back = history.goBack()\r\n      UpdateOutcome(data.id, formdata, () => {\r\n        history.push('/list-pengeluaran-admin')\r\n      });\r\n      setOpenDialogApprove(false);\r\n    });\r\n  };\r\n\r\n  function backPage(){\r\n    return alertSuccess()\r\n  }\r\n\r\n  const urlToObject = async (inputURI) => {\r\n    var binaryVal;\r\n\r\n    // mime extension extraction\r\n    var inputMIME = inputURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n    // Extract remaining part of URL and convert it to binary value\r\n    if (inputURI.split(\",\")[0].indexOf(\"base64\") >= 0)\r\n      binaryVal = atob(inputURI.split(\",\")[1]);\r\n    // Decoding of base64 encoded string\r\n    else binaryVal = unescape(inputURI.split(\",\")[1]);\r\n\r\n    // Computation of new string in which hexadecimal\r\n    // escape sequences are replaced by the character\r\n    // it represents\r\n\r\n    // Store the bytes of the string to a typed array\r\n    var blobArray = [];\r\n    for (var index = 0; index < binaryVal.length; index++) {\r\n      blobArray.push(binaryVal.charCodeAt(index));\r\n    }\r\n\r\n    return new Blob([blobArray], {\r\n      type: inputMIME,\r\n    });\r\n  };\r\n\r\n  const removeImage = (form, img) => {\r\n    setImage([...image.filter((q) => q !== img)]);\r\n  };\r\n  const handleImage = (event) => {\r\n    setImage([...image, event.target.files[0]]);\r\n    setValue({\r\n      ...value,\r\n      image: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  function createObjectURL(media) {\r\n    if (media instanceof File) {\r\n      if (window.webkitURL) {\r\n        return window.webkitURL.createObjectURL(media);\r\n      } else if (window.URL && window.URL.createObjectURL) {\r\n        return window.URL.createObjectURL(media);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      console.log(\"masuk else\", media);\r\n      return (\r\n        \"https://newdemo.aplikasiskripsi.com/farah_accounting/public/\" + media\r\n      );\r\n    }\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    let formattedDate = date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)\r\n    setSelectedDate(date);\r\n    setValue({\r\n      ...value,\r\n      date: formattedDate,\r\n    });\r\n  }\r\n\r\n  const handleChangeTypeOutcome = (value) => {\r\n    setTypeOutcome(value);\r\n    return ListOutcomeTypeBy(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Edit Transaksi</h4>\r\n      <hr className=\"\" />\r\n      <MDBCard className=\"mb-2\">\r\n        {dialogApprove()}\r\n        {state.loading && <LinearProgress />}\r\n        <MDBCardBody className=\"p-1\">\r\n          <MDBRow className=\"m-3\">\r\n            <MDBCol lg=\"7\">\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"No. Transaksi / Invoice\"\r\n                  variant=\"outlined\"\r\n                  disabled={updated}\r\n                  margin=\"normal\"\r\n                  value={value.invoice_number}\r\n                  onChange={handleChange(\"invoice_number\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Deskripsi Transaksi\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  multiline\r\n                  rowsMax={4}\r\n                  disabled={updated}\r\n                  value={value.description}\r\n                  onChange={handleChange(\"description\")}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Nama Customer\"\r\n                  variant=\"outlined\"\r\n                  disabled={updated}\r\n                  margin=\"normal\"\r\n                  value={value.user ? value.user.name : '-'}\r\n                  onChange={handleChange(\"customer\")}\r\n                />\r\n                 <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      Shift Kerja\r\n                    </InputLabel>\r\n                    <Select\r\n                      label=\"Metode Pembayaran\"\r\n                      value={value.shift}\r\n                      disabled={updated}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>Pilih Shift</em>\r\n                      </MenuItem>\r\n                      {[\r\n                        { id: 1, sif: \"Pagi\" },\r\n                        { id: 2, sif: \"Siang\" },\r\n                      ].map((item, i) => (\r\n                        <MenuItem key={i} value={item.sif}>\r\n                          {item.sif}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                <br></br>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-transaksi\"\r\n                    label=\"Tanggal Transaksi\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={value.date}\r\n                    views={[\"date\"]}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <br></br>\r\n               \r\n                <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                  <div>\r\n                    <p style={{ color: \"grey\", fontSize: \"15px\" }}>\r\n                      Gambar\r\n                    </p>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"images[]\"\r\n                      id=\"button-file\"\r\n                      className=\"display-none\"\r\n                      style={{ display: \"none\" }}\r\n                      accept=\"image/*\"\r\n                      onChange={!updated ? handleImage : {}}\r\n                    />\r\n                    <div className=\"flex justify-center sm:justify-start flex-wrap\">\r\n                      {image.length !== 1 && (\r\n                        <label\r\n                          htmlFor=\"button-file\"\r\n                          style={{\r\n                            padding: \"50px\",\r\n                            margin: \"10px\",\r\n                            alignItems: \"center\",\r\n                            borderRadius: \"10px\",\r\n                            boxShadow:\r\n                              \"0 1px 3px 0 rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 2px 1px -1px rgba(0,0,0,.12)\",\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            className={{\r\n                              fontSize: \"3.6rem\",\r\n                              color: \"rgba(0, 0, 0, 0.54)\",\r\n                              width: \"1em\",\r\n                              height: \"1em\",\r\n                              overflow: \"hidden\",\r\n                              flexShrink: \"0\",\r\n                              useSelect: \"none\",\r\n                              margin: \"16px\",\r\n                            }}\r\n                          >\r\n                            cloud_upload\r\n                          </Icon>\r\n                        </label>\r\n                      )}\r\n                      {image &&\r\n                        image.map((media, index) => {\r\n                          return (\r\n                            <img\r\n                              onClick={() => !updated ? removeImage(image, media) : {}}\r\n                              style={{\r\n                                width: \"120px\",\r\n                                marginBottom: \"20px\",\r\n                                height: \"120px\",\r\n                                borderRadius: \"10px\",\r\n                                backgroundColor: \"red\",\r\n                                margin: \"10px\",\r\n                              }}\r\n                              src={\r\n                                typeof image === \"string\"\r\n                                  ? \"https://newdemo.aplikasiskripsi.com/farah_accounting/public/\" +\r\n                                  media\r\n                                  : createObjectURL(media)\r\n                              }\r\n                              alt=\"product2\"\r\n                            />\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                </FormControl>\r\n              </form>\r\n            </MDBCol>\r\n            <MDBCol lg=\"5\">\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Tipe Jenis Pengeluaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  value={value.category} //typeOutcome\r\n                  onChange={(e) => handleChangeTypeOutcome(e.target.value)}>\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Logistik\">Logistik</MenuItem>\r\n                  <MenuItem value=\"Operasional\">Operasional Perusahaan</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <MDBRow className=\"m-12\">\r\n                <MDBCol lg=\"12\">\r\n                  <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      Jenis Pengeluaran\r\n                    </InputLabel>\r\n                    <Select\r\n                      label=\"Metode Pembayaran\"\r\n                      value={value.type}\r\n                      onChange={handleChange(\"type\")}\r\n                    >\r\n                      {typeOutcome === \"\" ? (\r\n                        <MenuItem value=\"\">\r\n                          <em>Pilih Jenis Akun Terlebih Dahulu</em>\r\n                        </MenuItem>\r\n                      ) : (\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                        )}\r\n                      {state.listOutcomeType && state.listOutcomeType.map((item, i) => (\r\n                        <MenuItem key={i} value={item}>\r\n                          {item}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <FormControl variant=\"outlined\" margin=\"normal\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Metode Pembayaran\r\n                </InputLabel>\r\n                <Select\r\n                  label=\"Metode Pembayaran\"\r\n                  disabled={updated}\r\n                  value={value.payment_method}\r\n                  onChange={handleChange(\"payment_method\")}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Tunai\">Tunai</MenuItem>\r\n                  <MenuItem value=\"Kredit\">Kredit</MenuItem>\r\n                  <MenuItem value=\"Pembayaran Utang\">Pembayaran Utang</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                    fullWidth\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    disabled={updated}\r\n                    margin=\"normal\"\r\n                    value={value.qty}\r\n                    onChange={handleChange(\"qty\")}\r\n                  />\r\n\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Harga Satuan\"\r\n                    variant=\"outlined\"\r\n                    disabled={updated}\r\n                    margin=\"normal\"\r\n                    value={value.unit_price}\r\n                    onChange={handleChange(\"unit_price\")}\r\n                  />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Keterangan\"\r\n                disabled={updated}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value.information}\r\n                onChange={handleChange(\"information\")}\r\n              />\r\n              <MDBRow className=\"mt-3 mb-2\">\r\n                <MDBCol lg=\"12\">\r\n                  <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBBtn\r\n                      color=\"dark-green\"\r\n                      onClick={() => handleApproveDialog(\"approve\")}\r\n                      disabled={state.loading}\r\n                    >\r\n                      Update Transaksi\r\n                    </MDBBtn>\r\n                  </MDBBox>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TransaksiKeluarComponent);\r\n","import React, { Fragment, useState } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport TransaksiKeluarComponent from '../../../components/Transaksi/Pengeluaran/TransaksiKeluarComponent'\r\nimport ReviewTransaksiKeluar from './ReviewPengeluaran'\r\nimport EditPengeluaranComponent from '../../../components/Transaksi/Pengeluaran/EditPengeluaranComponent'\r\n\r\nexport default function TransaksiKeluar(props) {\r\n    const [Goto, setGoto] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Transaksi Keluar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                {Goto === 5 && <ReviewTransaksiKeluar id={data.id} />}\r\n                {Goto === 0 && <TransaksiKeluarComponent dataTamp={(value) => setData(value)} Next={() => setGoto(Goto + 1)} NextR={() => setGoto(5)} />}\r\n                {Goto === 1 && <EditPengeluaranComponent data={data} Next={() => setGoto(Goto - 1)} />}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Context as OutcomeContext } from \"../../../services/Context/OutcomeContext\";\r\nimport { Context as AuthContext } from \"../../../services/Context/AuthContext\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTypography,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBox,\r\n  MDBBtn,\r\n  MDBFormInline,\r\n} from \"mdbreact\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport EditPengeluaranComponent from \"./EditPengeluaranComponent\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ReviewPengeluaranComponent from \"./ReviewPengeluaranComponent\";\r\n\r\nconst ListPengeluaranComponent = (props, dataTamp, NextR) => {\r\n  const { state, ListOutcome, DeleteOutcome, UpdateOutcome } = useContext(OutcomeContext);\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  const [Next, setNext] = useState(0);\r\n  const [value, setValue] = useState([]);\r\n  useEffect(() => {\r\n    ListOutcome();\r\n    return () => { };\r\n  }, []);\r\n  const handleNext = (value, data) => {\r\n    setNext(value)\r\n    setValue(data)\r\n  }\r\n\r\n  /*const { state, ListOutcome, DeleteOutcome, UpdateOutcome, InvoiceOutcome } = useContext(OutcomeContext);\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  const [Next, setNext] = useState(true);\r\n  const [value, setValue] = useState([]);\r\n  const [, setListData] = useState([]);\r\n  const [login, setLogin] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    ListOutcome(\"\");\r\n    setLogin(JSON.parse(localStorage.getItem('login')));\r\n    setListData(state.listOutcome);\r\n    return () => { };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ListOutcome();\r\n    return () => { };\r\n  }, []);\r\n\r\n  const handleNext = (data) => {\r\n    setNext(false)\r\n    setValue(data)\r\n  }\r\n\r\n  const handleClickReview = (data) => {\r\n    props.history.push(`/review-transaksi-keluar/${data.id}`);\r\n    dataTamp(data.id);\r\n    NextR();\r\n  };*/\r\n\r\n  const ListTransaksi = () => (\r\n    <Fragment>\r\n      {state.listOutcome.map((item, i) => {\r\n        console.log('ite = ', item.is_valid);\r\n        return (\r\n          <MDBCard key={i} className=\"mb-2\">\r\n            <MDBCardBody className=\"p-1\">\r\n              <MDBRow>\r\n                <MDBCol lg=\"9\">\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    {item.is_valid === '1' && <DoneIcon />}\r\n                    <MDBTypography tag=\"h5\" className=\"pt-2 mx-2\">\r\n                      {\" \"}\r\n                      {item.invoice_number}{\" \"}\r\n                      <small>\r\n                        {item.customer} - {item.payment_method}\r\n                      </small>\r\n                    </MDBTypography>\r\n                  </div>\r\n                  <MDBTypography tag=\"h10\" className=\"pt-2 mx-2\">\r\n                    {\" \"}\r\n                    {\"status review: \"} {item.review_status == null ? '-' : item.review_status}\r\n                  </MDBTypography>\r\n                  <MDBTypography tag=\"h5\" className=\"pt-2 mx-2\">\r\n                    {\" \"}\r\n                    {\"pesan review: \"} {item.review == null ? '-' : item.review}\r\n                  </MDBTypography>\r\n                </MDBCol>\r\n                <MDBCol lg=\"3\">\r\n                  <MDBRow>\r\n                    {isAuthenticated().data.level === \"Accountant\" && (\r\n                      <MDBBtn\r\n                        color=\"cyan\"\r\n                        size=\"sm\"\r\n                        style={{ margin: \"10px\", position: \"absolute\", left: \"100px\" }}\r\n                        onClick={() => handleNext(2, item)}\r\n                      >\r\n                        Review\r\n                      </MDBBtn>\r\n                    )}\r\n                    {isAuthenticated().data.level === 'Admin' && item.review_status !== 'approved' && <>\r\n                      <EditIcon\r\n                        color=\"dark-green\"\r\n                        size=\"sm\"\r\n                        style={{ color: \"green\", margin: \"10px\", position: \"absolute\", left: \"150px\" }}\r\n                        onClick={() => handleNext(1, item)}\r\n                      />\r\n                      <DeleteIcon\r\n                        color=\"red\"\r\n                        // size=\"sm\"\r\n                        style={{ color: \"red\", margin: \"10px\", position: \"absolute\", left: \"100px\" }}\r\n                        onClick={() => DeleteOutcome(item.id, () => ListOutcome())}\r\n                      />\r\n                    </>\r\n                    }\r\n                  </MDBRow>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n      })}\r\n    </Fragment >\r\n  );\r\n\r\n  if (Next === 0)\r\n    return (\r\n      <Fragment>\r\n        <MDBContainer fluid>\r\n          <MDBBox display=\"flex\" justifyContent=\"end\">\r\n            <MDBCol md=\"4\">\r\n              <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"text\"\r\n                  placeholder=\"Cari Transaksi\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <MDBBtn\r\n                  gradient=\"aqua\"\r\n                  rounded\r\n                  positiion=\"absolute\"\r\n                  left=\"90px\"\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  className=\"mr-auto\"\r\n                >\r\n                  Cari\r\n                </MDBBtn>\r\n              </MDBFormInline>\r\n            </MDBCol>\r\n          </MDBBox>\r\n          {state.loading && (\r\n            <MDBBox display=\"flex\" justifyContent=\"center\">\r\n              <CircularProgress />\r\n            </MDBBox>\r\n          )}\r\n          {!state.loading && ListTransaksi()}\r\n        </MDBContainer>\r\n      </Fragment>\r\n    );\r\n  else if (Next === 1)\r\n    return (\r\n      <>\r\n        <EditPengeluaranComponent data={value} Next={(v) => setNext(v)} />\r\n      </>\r\n    );\r\n  else\r\n    return <ReviewPengeluaranComponent data={value} Next={(v) => setNext(v)} />\r\n  /*else\r\n    return (\r\n      <>\r\n        <EditPengeluaranComponent data={value} Next={() => setNext(true)} />\r\n      </>*/\r\n\r\n};\r\n\r\nexport default withRouter(ListPengeluaranComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../../components/Transaksi/Pengeluaran/ListPengeluaranComponent';\r\n\r\n\r\nexport default function ListTransaksiKeluar(props) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Daftar Transaksi Keluar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {Context as LedgerContext} from '../../services/Context/LedgerContext'\r\nimport {Context as AccountContext} from '../../services/Context/AccountContext'\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBBox, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { InputLabel, Select, MenuItem, LinearProgress } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst NeracaSaldoComponent = ({  }) => {\r\n    const {state:{listAccount}, ListAccount} = useContext(AccountContext)\r\n    const {state, ListNeraca} = useContext(LedgerContext)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [selectedDate2, setSelectedDate2] = useState();\r\n    const [] = useState('')\r\n    const [value, setValue] = useState({\r\n        account_id: '',\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        ListAccount()\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    const handleSelectAccount = (e) => {\r\n        // alert(JSON.stringify(e))\r\n        setValue({\r\n            ...value,\r\n            account_id: e\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        let formattedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate(date);\r\n        setValue({\r\n            ...value,\r\n            start_date: date\r\n        })   \r\n    }\r\n\r\n    const handleDateChange2 = (date) => {\r\n        let formattedDate2 = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate2(date); \r\n        setValue({\r\n            ...value,\r\n            end_date: date\r\n        }) \r\n    }\r\n\r\n    const handleFilter = () => {\r\n        // if(value.account_id===''||value.start_date===''||value.end_date===''){\r\n        //     alert('Pilih Jenis Akun & Tentukan Rentang Tanggal Transaksi!')\r\n        // }else{\r\n            const date = new Date()\r\n            if(value.start_date){\r\n            let data = {\r\n                account_id : value.account_id,\r\n                month: value.start_date.getMonth() + 1 || date.getMonth()+1,\r\n                year: value.end_date.getFullYear() || date.getFullYear()\r\n            }\r\n            console.log('data = ', data);\r\n            ListNeraca(data)\r\n        }else{\r\n            let data = {\r\n                account_id : value.account_id,\r\n                month: date.getMonth()+1,\r\n                year: date.getFullYear()\r\n            }\r\n            console.log('data = ', data);\r\n            ListNeraca(data)\r\n        }\r\n            // alert(JSON.stringify(state.listLedger))\r\n        // }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {JSON.stringify(state.listLedger)} */}\r\n            <MDBRow>\r\n                <MDBCol lg='9'>\r\n                    <h4>Catatan Neraca Saldo</h4>\r\n                </MDBCol>\r\n                <MDBCol lg='3'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\">\r\n\r\n                    </MDBBox>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        {/* <MDBCol lg=\"2\">\r\n                            <InputLabel className=\"pt-2 mx-2\">Jenis Akun</InputLabel> \r\n                            <Select fullWidth className=\" mx-2\" onChange={(e) => handleSelectAccount(e.target.value)}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Pilih Jenis Akun</em>\r\n                                </MenuItem>\r\n                                {listAccount.map((item) => (\r\n                                    <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </MDBCol> */}\r\n                        {/* <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                No. Reff.<br></br>\r\n                                <small><i>Pilih Jenis Akun</i></small>\r\n                            </h5>\r\n                        </MDBCol> */}\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Pilih bulan\"\r\n                                        format=\"MMMM\"\r\n                                        value={selectedDate}\r\n                                        views={[\"month\"]}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Pilih tahun\"\r\n                                        // format=\"dd/MM/yyyy\"\r\n                                        views={[\"year\"]}\r\n                                        value={selectedDate2}\r\n                                        onChange={handleDateChange2}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                <MDBBtn color=\"dark-green\"  gradient=\"blue\" onClick={handleFilter}>\r\n                                    Tampilkan <MDBIcon icon=\"filter\" className=\"ml-1\" />\r\n                                </MDBBtn>\r\n                                {/* <MDBBtn color=\"danger\" size=\"sm\">\r\n                                    Tolak <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                </MDBBtn> */}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n            </MDBCard>\r\n            \r\n            {state.listNeraca && (\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBTable>\r\n                            <MDBTableHead color=\"primary-color\" textWhite>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>NO. TRANSAKSI</th>\r\n                                    <th>AKUN</th>\r\n                                    <th>DEBIT(Rp.)</th>\r\n                                    <th>KREDIT(Rp.)</th>\r\n                                    {/* <th>SALDO DEBIT(Rp.)</th>\r\n                                    <th>SALDO KREDIT(Rp.)</th> */}\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                {state.listNeraca&&Object.keys(state.listNeraca).map((item,i) => (\r\n                                    <tr>\r\n                                        <td>{i+1}</td>\r\n                                        {/* <td> {item.Tanggal} </td> */}\r\n                                        <td><b>{item.invoice_number}</b></td>\r\n                                        <td>{item}</td>\r\n                                        <td>{state.listNeraca[item].Debet}</td>\r\n                                        <td>{state.listNeraca[item].Kredit}</td>\r\n                                        {/* <td><b><NumberFormat value={item['Saldo Debet']} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></td>\r\n                                        <td><b><NumberFormat value={item['Saldo Kredit']} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></td> */}\r\n                                    </tr>\r\n                                ))}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n                        {/* <hr></hr>\r\n                        <MDBRow className='mx-3'>\r\n                            <MDBCol lg=\"9\">\r\n                                <h5 className=\"pt-2 mx-2\">\r\n                                    <small>TOTAL DEBIT</small><br></br>\r\n                                    <small>TOTAL KREDIT</small><br></br><hr></hr>\r\n                                    <small>SALDO AWAL</small><br></br>\r\n                                    <small>SALDO AKHIR</small>\r\n                                </h5>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBBox display='flex' justifyContent=\"start\">\r\n                                    <h5 className=\"pt-2 mx-2\">\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_credit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br><hr></hr>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_awal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_akhir} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small>\r\n                                    </h5>\r\n                                </MDBBox>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <hr></hr> */}\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NeracaSaldoComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport NeracaSaldoComponent from '../../components/BukuBesar/NeracaSaldoComponent';\r\n\r\n\r\n\r\nexport default function NeracaSaldo() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Neraca Saldo</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <NeracaSaldoComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport AccountantRoute from './services/Route/AccountantRoute';\r\nimport AdminRoute from './services/Route/AdminRoute';\r\nimport PrivateRoute from './services/Route/PrivateRoute';\r\nimport Layout from './components/layouts/Layout';\r\nimport Signin from './pages/Authentication/Signin';\r\nimport Home from './pages/Home/Home';\r\nimport Test from './pages/Test';\r\nimport TransaksiCabang from './pages/Transaksi/Cabang/TransaksiCabang';\r\nimport TransaksiPusat from './pages/Transaksi/Pusat/TransaksiPusat';\r\nimport ReviewTransaksiKeluar from './pages/Transaksi/Pengeluaran/ReviewPengeluaran';\r\nimport ReviewTransaksi from './pages/Transaksi/ReviewPemasukan';\r\nimport GeneratePDF from './pages/GenereatePDF/App';\r\nimport JurnalPerHari from './pages/Jurnal/JurnalPerhari';\r\nimport BukuBesar from './pages/BukuBesar/BukuBesar';\r\nimport LaporanKeuangan from './pages/Jurnal/JurnalLaporanKeuangan';\r\nimport MarketingRoute from './services/Route/MarketingRoute';\r\nimport TransaksiMasuk from './pages/Transaksi/Pusat/TransaksiMasuk';\r\nimport Keuangan from './pages/Transaksi/Keuangan/Keuangan';\r\nimport ListKeuangan from './pages/Transaksi/Keuangan/ListKeuangan';\r\nimport JurnalPerBulan from './pages/Jurnal/JurnalPerBulan';\r\nimport TransaksiKeluar from './pages/Transaksi/Pengeluaran/TransaksiKeluar';\r\nimport ListTransaksiKeluar from './pages/Transaksi/Pengeluaran/ListTransaksiKeluar';\r\nimport NeracaSaldo from './pages/BukuBesar/NeracaSaldo';\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/test' exact component={Test} />\r\n                <Route path='/signin' exact component={Signin} />\r\n                <Layout>\r\n                    <PrivateRoute path='/' exact component={Home} />\r\n                    <MarketingRoute path='/transaksi-masuk' exact component={TransaksiMasuk} />\r\n                    <MarketingRoute path='/keuangan' exact component={Keuangan}/>\r\n                    <AccountantRoute path='/list-keuangan' exact component={ListKeuangan}/>\r\n                    <PrivateRoute path='/list-transaksi-pusat' exact component={TransaksiPusat} />\r\n                    <PrivateRoute path='/list-transaksi-cabang' exact component={TransaksiCabang} />\r\n                    <PrivateRoute path='/review-transaksi-keluar/:id' exact component={ReviewTransaksiKeluar} />\r\n                    <PrivateRoute path='/review-transaksi-masuk/:id' exact component={ReviewTransaksi} />\r\n                    <AdminRoute path='/transaksi-keluar' exact component={TransaksiKeluar} />\r\n                    <AccountantRoute path='/list-pengeluaran' exact component={ListTransaksiKeluar} />\r\n                    <AccountantRoute path='/jurnal-perhari/:tanggal' exact component={JurnalPerHari} />\r\n                    <AccountantRoute path='/jurnal-perbulan/' exact component={JurnalPerBulan} />\r\n                    <AccountantRoute path='/buku-besar' exact component={BukuBesar} />\r\n                    <AccountantRoute path='/neraca-saldo' exact component={NeracaSaldo} />\r\n                    <AccountantRoute path='/laporan-keuangan' exact component={LaporanKeuangan} />\r\n                    <PrivateRoute path='/generate-invoice-income' exact component={GeneratePDF} />\r\n                    <AdminRoute path='/list-pengeluaran-admin' exact component={ListTransaksiKeluar} />\r\n                </Layout>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst MaterialCategoryReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-MATERIAL-CATEGORY':\r\n            return {\r\n                ...state,\r\n                listMaterialCategory:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListMaterialCategory = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Kategori Material'})\r\n    axios.get(`${API}/raw-category`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-MATERIAL-CATEGORY', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst AddMaterialCategory = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Kategori Bahan Baku...'})\r\n    axios.post(`${API}/raw-category`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Kategori Bahan Baku...'})\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Kategori Bahan Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    MaterialCategoryReducer,\r\n    {ListMaterialCategory, AddMaterialCategory, DeleteMaterialCategory},\r\n    {loading: false, message:'', listMaterialCategory:[]}\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {\r\n    API\r\n} from '../Api/AccountingApi'\r\n\r\nconst RawMaterialReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                    message: action.payload,\r\n            }\r\n            case 'NO-LOADING':\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                        message: '',\r\n                }\r\n                case 'LIST-MATERIAL-RAW':\r\n                    return {\r\n                        ...state,\r\n                        listMaterialRaw: action.payload\r\n                    }\r\n                    case 'LIST-UNIT':\r\n                        return {\r\n                            ...state,\r\n                            listUnit: action.payload\r\n                        }\r\n                        case 'LIST-REPORT':\r\n                            return {\r\n                                ...state,\r\n                                listReportMaterial: action.payload\r\n                            }\r\n                            case 'LIST-STOK':\r\n                                return {\r\n                                    ...state,\r\n                                    listStok: action.payload\r\n                                }\r\n                                case 'LIST-STATUS':\r\n                                    return {\r\n                                        ...state,\r\n                                        listStatus: action.payload\r\n                                    }\r\n                                    case 'LIST-RIWAYAT':\r\n                                        return {\r\n                                            ...state,\r\n                                            listRiwayatProduksi: action.payload\r\n                                        }\r\n                                        case 'REPORT':\r\n                                            return {\r\n                                                ...state,\r\n                                                report: action.payload\r\n                                            }\r\n                                            default:\r\n                                                return state\r\n    }\r\n}\r\n\r\nconst AddRawMaterial = dispatch => (data, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Bahan Baku...'\r\n    })\r\n    axios.post(`${API}/raw-material`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Bahan Baku Berhasil Ditambahkan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst UpdateStok = dispatch => (data, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Bahan Baku...'\r\n    })\r\n    axios.post(`${API}/stock-material`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert(res.data.message)\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                callback()\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListRawMaterial = dispatch => (filter) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    if (filter != '') {\r\n        var url = `${API}/raw-material?filter=${filter}`;\r\n    } else {\r\n        var url = `${API}/raw-material`;\r\n    }\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-MATERIAL-RAW',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListStok = dispatch => (filter) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/stock-material`;\r\n\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-STOK',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListReportMaterial = dispatch => (filter) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/raw-material/report?since=${filter.since}&until=${filter.until}`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-REPORT',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListUnit = dispatch => (filter) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/product-unit`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-UNIT',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst ListStatus = dispatch => (filter) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/stock-opname/material/status`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-STATUS',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Mengahapus Data Kategori Bahan Baku...'\r\n    })\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Transaksi Berhasil Dihapus!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst DeleteBahanBaku = dispatch => (id, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Mengahapus Data Kategori Bahan Baku...'\r\n    })\r\n    axios.delete(`${API}/raw-material/${id}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    alert('Transaksi Berhasil Dihapus!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\n\r\nconst ListRiwayatProduksi = dispatch => (id) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/product-process/${id}`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-RIWAYAT',\r\n                    payload: res.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-RIWAYAT',\r\n                    payload: []\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst DetailPorduksi = dispatch => (id, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Bahan Baku'\r\n    })\r\n    var url = `${API}/product-process/${id}/report`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'REPORT',\r\n                    payload: res.data.data\r\n                })\r\n                callback()\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                // dispatch({\r\n                //     type: 'LIST-RIWAYAT',\r\n                //     payload: []\r\n                // })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst StartProduksi = dispatch => (data, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Bahan Baku...'\r\n    })\r\n    axios.post(`${API}/product-process`, data)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    // alert('Bahan Baku Berhasil Ditambahkan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nconst StopProduksi = dispatch => (id, callback) => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menyimpan Data Bahan Baku...'\r\n    })\r\n    axios.patch(`${API}/product-process/${id}`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res)) \r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                if (callback) {\r\n                    callback()\r\n                    // alert('Bahan Baku Berhasil Ditambahkan!')\r\n                }\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nexport const {\r\n    Provider,\r\n    Context\r\n} = CreateDataContext(\r\n    RawMaterialReducer, {\r\n        AddRawMaterial,\r\n        ListRawMaterial,\r\n        DeleteMaterialCategory,\r\n        UpdateStok,\r\n        ListUnit,\r\n        DeleteBahanBaku,\r\n        ListReportMaterial,\r\n        ListStok,\r\n        ListStatus,\r\n        ListRiwayatProduksi,\r\n        StartProduksi,\r\n        StopProduksi,\r\n        DetailPorduksi\r\n    }, {\r\n        loading: false,\r\n        message: '',\r\n        listMaterialRaw: [],\r\n        listUnit: [],\r\n        listReportMaterial: [],\r\n        listStok: [],\r\n        listStatus: [],\r\n        listRiwayatProduksi: [],\r\n        report:{}\r\n    }\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst StockOpnameReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-STOCK-OPNAME':\r\n            return {\r\n                ...state,\r\n                listStockOpname:action.payload\r\n            }\r\n            case 'LIST-STATUS':\r\n                return {\r\n                    ...state,\r\n                    listStatus: action.payload\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListStockOpname = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Stock Opname'})\r\n    axios.get(`${API}/stock-opname`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-STOCK-OPNAME', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst AddStockOpname = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Stcok Opname...'})\r\n    axios.post(`${API}/stock-opname`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            alert(res.data.message)\r\n            if(callback){\r\n                callback()\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Kategori Bahan Baku...'})\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Kategori Bahan Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListStatus = dispatch => () => {\r\n    dispatch({\r\n        type: 'LOADING',\r\n        payload: 'Menampilkan List Status'\r\n    })\r\n    axios.get(`${API}/stock-opname/produk/status`)\r\n        .then(res => {\r\n            //   alert(JSON.stringify(res.data.data.data))\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'LIST-STATUS',\r\n                    payload: res.data.data\r\n                })\r\n            } else {\r\n                alert(res.data.message)\r\n                dispatch({\r\n                    type: 'NO-LOADING'\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: 'NO-LOADING'\r\n            })\r\n            alert(error)\r\n            // console.log(error)\r\n        })\r\n}\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    StockOpnameReducer,\r\n    {ListStockOpname, AddStockOpname, DeleteMaterialCategory, ListStatus},\r\n    {loading: false, message:'', listStockOpname:[], listStatus:[]}\r\n)","import React from 'react';\nimport Router from './Router';\nimport { Provider as AuthProvider } from './services/Context/AuthContext'\nimport { Provider as CustomerProvider } from './services/Context/CustomerContext'\nimport { Provider as AccountProvider } from './services/Context/AccountContext'\nimport { Provider as IncomeProvider } from './services/Context/IncomeContext'\nimport { Provider as LedgerProvider } from './services/Context/LedgerContext'\nimport { Provider as OutcomeProvider } from './services/Context/OutcomeContext'\nimport { Provider as JournalProvider } from './services/Context/JournalContext'\nimport { Provider as MaterialCategoryProvider } from './services/Context/MaterialCategoryContext'\nimport { Provider as RawMaterialProvider } from './services/Context/RawMaterialContext'\nimport { Provider as ProductProvider } from './services/Context/ProductContext'\nimport { Provider as StockOpnameProvider } from './services/Context/StockOpnameContext'\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <CustomerProvider>\n        <IncomeProvider>\n          <AccountProvider>\n            <LedgerProvider>\n              <OutcomeProvider>\n                <JournalProvider>\n                  <MaterialCategoryProvider>\n                    <RawMaterialProvider>\n                      <ProductProvider>\n                        <StockOpnameProvider>\n                          <Router />\n                        </StockOpnameProvider>\n                      </ProductProvider>\n                    </RawMaterialProvider>\n                  </MaterialCategoryProvider>\n                </JournalProvider>\n              </OutcomeProvider>\n            </LedgerProvider>\n          </AccountProvider>\n        </IncomeProvider>\n      </CustomerProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App'\nconsole.disableYellowBox = true;\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}