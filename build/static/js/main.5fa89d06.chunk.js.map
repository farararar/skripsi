{"version":3,"sources":["services/Context/CreateDataContext.js","services/Api/AccountingApi.js","services/Context/AuthContext.js","services/Route/AccountantRoute.js","services/Route/AdminRoute.js","services/Route/PrivateRoute.js","components/layouts/ListMenu.jsx","components/layouts/NotificationComponent.jsx","components/layouts/Layout.jsx","pages/Authentication/Signin.jsx","components/Dashboard/PanelInformationComponent.jsx","components/Dashboard/ChartComponent.jsx","pages/Home/Home.jsx","pages/Test.jsx","components/Transaksi/TransaksiCabang/ListTransaksiComponent.jsx","pages/Transaksi/Cabang/TransaksiCabang.jsx","services/Context/IncomeContext.js","components/Transaksi/TransaksiPusat/ListTransaksiComponent.jsx","pages/Transaksi/Pusat/TransaksiPusat.jsx","components/Transaksi/ReviewTransaksiComponent.jsx","pages/Transaksi/ReviewTransaksi.jsx","services/Context/JournalContext.js","components/Jurnal/JurnalPerhariComponent.jsx","pages/Jurnal/JurnalPerhari.jsx","services/Context/LedgerContext.js","services/Context/AccountContext.js","components/BukuBesar/BukuBesarComponent.jsx","pages/BukuBesar/BukuBesar.jsx","services/Route/MarketingRoute.js","services/Context/CustomerContext.js","services/Context/ProductContext.js","components/Transaksi/TransaksiMasukComponent.jsx","pages/Transaksi/Pusat/TransaksiMasuk.jsx","components/Jurnal/JurnalPerbulanComponent.jsx","pages/Jurnal/JurnalPerBulan.jsx","services/Context/OutcomeContext.js","components/Transaksi/Pengeluaran/TransaksiKeluarComponent.jsx","pages/Transaksi/Pengeluaran/TransaksiKeluar.jsx","components/Transaksi/Pengeluaran/ListComponent.jsx","pages/Transaksi/Pengeluaran/ListTransaksiKeluar.jsx","components/product/FormComponent.jsx","pages/Product/AddProduct.jsx","components/product/ListComponent.jsx","pages/Product/ListProduct.jsx","services/Context/StockOpnameContext.js","components/StockOpname/AddFormComponent.jsx","components/StockOpname/ListComponent.jsx","pages/Product/StokOpname.jsx","components/ProductProccess/ListComponent.jsx","pages/Product/ProccessProduct.jsx","services/Context/MaterialCategoryContext.js","services/Context/RawMaterialContext.js","components/BahanBaku/FormComponent.jsx","pages/BahanBaku/AddBahanBaku.jsx","components/BahanBaku/kategori/FormComponent.jsx","components/BahanBaku/kategori/ListComponent.jsx","pages/BahanBaku/KategoriBahanBaku.jsx","components/BahanBaku/ListComponent.jsx","pages/BahanBaku/ListBahanBaku.jsx","Router.js","App.js","index.js"],"names":["reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","API","CreateDataContext","action","type","loading","message","payload","isAuthenticated","window","localStorage","getItem","JSON","parse","Signin","email","password","axios","post","then","res","data","success","setItem","stringify","location","reload","alert","catch","error","AccountantRoute","Component","component","rest","useContext","AuthContext","render","props","level","to","pathname","from","AdminRoute","PrivateRoute","withRouter","classes","useStyles","useState","open","setOpen","open1","setOpen1","open2","setOpen2","produkMenu","setProdukMenu","bahanMenu","setBahanMenu","today","Date","date","getFullYear","getMonth","getDate","List","aria-labelledby","subheader","ListSubheader","id","className","root","Divider","link","ListItem","button","ListItemIcon","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","nested","removeItem","history","push","makeStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","textDecoration","color","emails","avatar","blue","SimpleDialog","onClose","selectedValue","handleListItemClick","Dialog","DialogTitle","map","ListItemAvatar","Avatar","autoFocus","NotificationComponent","setSelectedValue","IconButton","Badge","badgeContent","Copyright","Typography","variant","align","Link","href","Layout","anchorEl","setAnchorEl","Boolean","handleClose","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","container","footer","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","marginTop","grey","setValue","handleChange","name","target","Grid","item","xs","sm","md","image","Paper","elevation","square","form","onSubmit","e","preventDefault","TextField","onChange","margin","required","fullWidth","label","autoComplete","FormControlLabel","control","Checkbox","LinearProgress","style","top","Button","submit","disabled","Box","mt","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","secondary","main","PanelInformationComponent","lg","tag","ChartComponent","nama","alamat","dataLine","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chart","options","responsive","TransaksiPusat","fluid","Test","cascade","narrow","ecommerce","color-block-dark","danger-color-dark","z-depth-2","src","alt","placeholder","gradient","rounded","size","tanggal","TransaksiCabang","listIncome","concat","currentPage","current_page","totalData","total","detailIncome","detailAccount","detailUser","detailCustomer","detailReviewer","AddIncome","callback","ListIncome","keyword","get","GetDetailIncome","account","user","customer","reviewed_by","ReviewIncome","put","ListIncomeNext","page","IncomeContext","search","setSearch","setListData","useEffect","CircularProgress","i","invoice_number","reference_number","length","outline","ReviewTransaksiComponent","useParams","setDataTanggal","setDataBulan","openDialogApprove","setOpenDialogApprove","data_tanggal","loopingTanggal","bulan","data_bulan","loopingBulan","handleApproveCancle","handleApproveProccess","review_status","reviewer_id","handleRejectedProccess","review_date","icon","aria-describedby","DialogContent","DialogContentText","DialogActions","readonly","description","unit","unit_price","displayType","thousandSeparator","prefix","ammount","payment_method","multiline","rows","rowsMax","information","ReviewTransaksi","listJournalDaily","additionalData","GetDailyJournal","additional_data","PostingJournal","JurnalPerhariComponent","params","JournalContext","review","setReview","memo","setMemo","save","setSave","posting","setPosting","selectedDate","setSelectedDate","setDate","handleSave","utils","DateFnsUtils","justify","format","formattedDate","KeyboardButtonProps","fontWeight","status","textWhite","debit","credit","total_debit","total_credit","JurnalPerHari","match","MDBBreadcrumbItem","listLedger","ledgerAdditional","ListLedger","listAccount","ListAccount","BukuBesarComponent","AccountContext","LedgerContext","selectedDate2","setSelectedDate2","account_id","start_date","end_date","InputLabel","Select","handleSelectAccount","formattedDate2","saldo","saldo_awal","saldo_akhir","BukuBesar","MarketingRoute","listCustomer","ListCustomer","listProduct","AddProduct","formData","a","headers","_boundary","ListProduct","DeleteProduct","delete","CustomerContext","ProductContext","dataTanggal","setTanggal","setBulan","setAmmount","customer_id","product_id","set_ammount","user_id","FormControl","TransaksiMasuk","JurnalPerbulanComponent","JurnalPerbulan","listOutcomeType","listOutcome","ListOutcomeType","AddOutcome","ListOutcome","OutcomeContext","outcome_type_id","outcometype_id","TransaksiKeluar","ListTransaksiKeluar","FormComponent","file","setFile","product_category_id","code","unit_product","stok","useRef","handleReset","ref","FormData","append","formControl","acceptedFiles","filesLimit","maxFileSize","minWidth","selectEmpty","ListComponent","ItemProduct","category","handleDelete","kategori","listStockOpname","ListStockOpname","AddStockOpname","DeleteMaterialCategory","AddFormComponent","StockOpnameContext","stock","TableContainer","Table","table","TableHead","TableRow","StyledTableCell","TableBody","row","StyledTableRow","scope","product_name","withStyles","head","common","black","white","body","fontSize","TableCell","hover","createData","calories","fat","carbs","protein","StockOpname","ProccessProduct","listMaterialCategory","ListMaterialCategory","AddMaterialCategory","listMaterialRaw","AddRawMaterial","ListRawMaterial","filter","url","MaterialCategoryContext","RawMaterialContext","raw_material_category_id","unit_buy","unit_use","AddBahanBaku","ListCategory","KategoriBahanBaku","setFilter","alignContent","ListBahanBaku","Router","path","exact","Home","JurnalPerBulan","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fa89d06.chunk.js","sourcesContent":["import React, {useReducer} from 'react'\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n    const Context = React.createContext()\r\n\r\n    const Provider = ({children}) => {\r\n        const [state, dispatch] = useReducer(reducer, defaultValue)\r\n\r\n        const boundActions = {}\r\n        for (let key in actions){\r\n            boundActions[key] = actions[key](dispatch)\r\n        }\r\n\r\n        return (\r\n            <Context.Provider value={{ state, ...boundActions }}>\r\n                {children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n    return {Context, Provider}\r\n}","export const API = 'https://newdemo.aplikasiskripsi.com/farah_accounting/public';","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst AuthReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setLogin = (data) => {\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('login', JSON.stringify(data))\r\n    }\r\n}\r\n\r\nconst isAuthenticated = dispatch => () => {\r\n    if(typeof window == 'undefined'){\r\n        return false\r\n    }\r\n    if(localStorage.getItem('login')){\r\n        return JSON.parse(localStorage.getItem('login'))\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst Signin = dispatch => ({email, password}) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengautentikasi Pengguna...'})\r\n    axios.post(`${API}/login`, { email: email, password: password })\r\n      .then(res => {\r\n        // alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            // alert(res)\r\n            // console.log(res)\r\n            dispatch({type: 'NO-LOADING'})\r\n            setLogin(res.data)\r\n            window.location.reload();\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        // alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n// const Signin = dispatch => async ({email, password}) => {\r\n//     dispatch ({type: 'LOADING', payload: 'Mengautentikasi Pengguna...'})\r\n//     try {\r\n//         let response = await fetch(`${API}/login`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Accept' : 'application/json',\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 email: email,\r\n//                 password: password\r\n//             })\r\n//         })\r\n//         let responseJson = await response.json()\r\n//         if(responseJson.success){\r\n//             dispatch({type: 'NO-LOADING'})\r\n//             setLogin(responseJson.data)\r\n//         }else{\r\n//             alert(responseJson.message)\r\n//             dispatch({type: 'NO-LOADING'})\r\n//         }\r\n//     } catch (err) {\r\n//         dispatch({type: 'NO-LOADING'})\r\n//         alert(err)\r\n//     }\r\n// }\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    AuthReducer,\r\n    {isAuthenticated, Signin},\r\n    {loading: false, message:''}\r\n)","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst AccountantRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Accountant' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default AccountantRoute;\r\n\r\n","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst AdminRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Admin' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;\r\n\r\n","import React, {useContext} from 'react';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to={{ pathname: '/signin', state: {from: props.location} }} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Context as AuthContext } from '../../services/Context/AuthContext'\r\nimport { makeStyles, ListSubheader, List, ListItem, ListItemIcon, ListItemText, Collapse } from '@material-ui/core'\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport ShopIcon from '@material-ui/icons/Shop';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\n\r\nfunction ListMenu(props) {\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [open1, setOpen1] = useState(true);\r\n  const [open2, setOpen2] = useState(true);\r\n  const [produkMenu, setProdukMenu] = useState(true)\r\n  const [bahanMenu, setBahanMenu] = useState(true)\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickJurnal = () => {\r\n    setOpen2(!open2);\r\n  };\r\n\r\n  const handleClickOutcome = () => {\r\n    setOpen1(!open1);\r\n  };\r\n\r\n  const handleClickMenuProduct = () => {\r\n    setProdukMenu(!produkMenu)\r\n  }\r\n\r\n  const handleClickMenuBahan = () => {\r\n    setBahanMenu(!bahanMenu)\r\n  }\r\n\r\n  let today = new Date()\r\n  let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\r\n  const handleLogout = () => {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.removeItem('login')\r\n      props.history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Menu\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      <Divider />\r\n      <Link to='/' className={classes.link}>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Marketing' && (\r\n        <Link to={`/transaksi-masuk`} className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PaymentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Transaksi Masuk\" />\r\n          </ListItem>\r\n        </Link>\r\n      )}\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Admin' && (\r\n        <Fragment>\r\n          <ListItem button onClick={handleClickOutcome}>\r\n            <ListItemIcon>\r\n              <PaymentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pengeluaran\" />\r\n            {open1 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={!open1} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <Link to={`/transaksi-keluar`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <PaymentIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Transaksi Keluar\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/list-pengeluaran`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Daftar Pengeluaran\" />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n\r\n\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <FormatListBulletedIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"List Transaksi\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {/* <Link to='/list-transaksi-cabang' className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Cabang\" />\r\n            </ListItem>\r\n          </Link> */}\r\n          <Link to='/list-transaksi-pusat' className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pusat\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      {isAuthenticated() && isAuthenticated().data.level === 'Accountant' && (\r\n        <Fragment>\r\n          <ListItem button onClick={handleClickJurnal}>\r\n            <ListItemIcon>\r\n              <ImportContactsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Jurnal\" />\r\n            {open2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={!open2} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <Link to={`/jurnal-perhari/${date}`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Jurnal Per Hari\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to={`/jurnal-perbulan`} className={classes.link}>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <ListIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Jurnal Per Bulan\" />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </Collapse>\r\n\r\n          {/* <Link to={`/buku-besar`} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Buku Besar\" />\r\n            </ListItem>\r\n          </Link> */}\r\n\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AssessmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Laporan Keuangan\" />\r\n          </ListItem>\r\n\r\n        </Fragment>\r\n      )}\r\n\r\n\r\n          {isAuthenticated() && isAuthenticated().data.level === 'Admin' && (\r\n            <Fragment>\r\n              <ListItem button onClick={handleClickMenuProduct}>\r\n                <ListItemIcon>\r\n                  <ShopIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Produk\" />\r\n                {produkMenu ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={!produkMenu} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <Link to={`/AddProduct`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <AddBoxIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Tambah Produk\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/ProductList`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <ListIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"List Produk\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/StockOpname`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <ListIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Stok Opname\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  {/* <Link to={`/ProductInProccess`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <ListIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Produk Proses\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                </List>\r\n              </Collapse>\r\n\r\n              <ListItem button onClick={handleClickMenuBahan}>\r\n                <ListItemIcon>\r\n                  <EcoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Bahan Baku\" />\r\n                {bahanMenu ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={!bahanMenu} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <Link to={`/AddRawMaterial`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <AddBoxIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Tambah Bahan\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/RawMaterialList`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <ListIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"List Bahan Baku\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/RawMaterialCategories`} className={classes.link}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <ListIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Kategori Bahan\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </List>\r\n              </Collapse>\r\n              <Divider />\r\n\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pengaturan\" />\r\n          </ListItem>\r\n            </Fragment>\r\n          )}\r\n\r\n          \r\n\r\n      <ListItem button onClick={() => handleLogout()}>\r\n        <ListItemIcon>\r\n          <ExitToAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Keluar\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default withRouter(ListMenu)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black'\r\n  }\r\n}));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Badge, IconButton } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Notification</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function NotificationComponent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n        </IconButton>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ListMenu from './ListMenu';\r\nimport NotificationComponent from './NotificationComponent';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Accounting App | Farah Thesis\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open2 = Boolean(anchorEl);\r\n  \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            TOKO ROTI AMAYA\r\n          </Typography>\r\n          <NotificationComponent props={props}/>\r\n          {/* <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n          <div>\r\n              <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open2}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n       \r\n        {/* <List>{mainListItems}</List> */}\r\n        <ListMenu/>\r\n        \r\n        {/* <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        {/* <Container className={classes.container}>\r\n            {props.children}\r\n        </Container> */}\r\n        {props.children}\r\n        <Container className={classes.container}>\r\n          <footer className={classes.footer}>\r\n              <Container maxWidth=\"sm\">\r\n                <Copyright />\r\n              </Container>\r\n          </footer>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));","import React, {useContext, useState} from 'react';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Accounting App | Farah Thesis\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Signin(props) {\r\n  const {state, isAuthenticated, Signin} = useContext(AuthContext)\r\n  const [value, setValue] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const {email, password} = value\r\n\r\n  const classes = useStyles();\r\n\r\n  const checkLogin = () => {\r\n    if(isAuthenticated()){\r\n        return <Redirect to='/' />\r\n    }else{\r\n        return false\r\n    }\r\n  }\r\n\r\n  const handleChange = name => event => {\r\n      setValue({\r\n          ...value,\r\n          [name]: event.target.value\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      Signin({email, password})\r\n  }\r\n\r\n  const showLoading = () => (\r\n      state.loading && (\r\n          <LinearProgress style={{ top: 27,  alignItems: 'center', }}/>\r\n      )\r\n  )\r\n\r\n  const textButtonSubmit = () => {\r\n    if(state.loading){\r\n      return state.message\r\n    }else{\r\n      return 'MASUK'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      {checkLogin()}\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            TOKO ROTI AMAYA\r\n          </Typography>\r\n          \r\n          <form className={classes.form} onSubmit={handleSubmit} >\r\n            \r\n            <TextField value={email} onChange={handleChange('email')} variant=\"outlined\" margin=\"normal\" required fullWidth label=\"Email Pengguna\" autoComplete=\"email\" autoFocus />\r\n            <TextField value={password} onChange={handleChange('password')} variant=\"outlined\" margin=\"normal\" required fullWidth label=\"Kata Sandi\" type=\"password\" autoComplete=\"current-password\" />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {showLoading()}\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} disabled={state.loading}>\r\n              {textButtonSubmit()}\r\n            </Button>\r\n            \r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage: 'url(https://images.unsplash.com/photo-1477763858572-cda7deaa9bc5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","import React, { Fragment } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBBox } from \"mdbreact\";\r\n\r\n\r\nconst PanelInformationComponent = () => {\r\n    return (\r\n        <Fragment>\r\n                <MDBRow>\r\n                    <MDBCol lg='6' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                            <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                                <MDBCardHeader color=\"primary-color\" tag=\"h3\">\r\n                                    Penjualan\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle>Rp. 590.000.000</MDBCardTitle>\r\n                                    <MDBCardText>\r\n                                        170 Transaksi Pada Bulan Ini\r\n                                    </MDBCardText>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n                    <MDBCol lg='6' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                            <MDBCard style={{ width: \"22rem\", marginTop: \"1rem\" }}>\r\n                                <MDBCardHeader color=\"primary-color\" tag=\"h3\">\r\n                                    Pengeluaran\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle>Rp. 260.000.000</MDBCardTitle>\r\n                                    <MDBCardText>\r\n                                        90 Transaksi Pada Bulan Ini\r\n                                    </MDBCardText>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                \r\n\r\n          \r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default PanelInformationComponent;\r\n","import React, {Fragment, useState} from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBCard, MDBCardBody, MDBCardHeader, MDBCardText, MDBCardTitle, MDBContainer } from \"mdbreact\";\r\n\r\nconst ChartComponent = () => {\r\n    const [test, setTest] = useState({\r\n        nama: 'iqbal',\r\n        alamat: 'tanggulun'\r\n    })\r\n    const [chart, setChart] = useState({\r\n        dataLine: {\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n            datasets: [\r\n                {\r\n                    label: \"Penjualan\",\r\n                    fill: true,\r\n                    lineTension: 0.3,\r\n                    backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n                    borderColor: \"rgb(35, 26, 136)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(35, 26, 136)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                },\r\n                {\r\n                    label: \"Pengeluaran\",\r\n                    fill: true,\r\n                    lineTension: 0.3,\r\n                    backgroundColor: \"rgba(225, 204,230, .3)\",\r\n                    borderColor: \"rgb(205, 130, 158)\",\r\n                    borderCapStyle: \"butt\",\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: \"rgb(205, 130,1 58)\",\r\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n                    pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n              \r\n            ]\r\n        }\r\n    })\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <MDBCard style={{  marginTop: \"1rem\" }}> \r\n                <MDBCardHeader color=\"\" tag=\"h3\">\r\n                    Statistik Keuangan Tahun {new Date().getFullYear()}\r\n                </MDBCardHeader>\r\n                <MDBCardBody> \r\n                    <Line data={chart.dataLine} options={{ responsive: true }} />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default ChartComponent\r\n\r\n\r\n// class ChartsPage extends React.Component {\r\n//   state = {\r\n//     dataLine: {\r\n//       labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n//       datasets: [\r\n//         {\r\n//           label: \"My First dataset\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(225, 204,230, .3)\",\r\n//           borderColor: \"rgb(205, 130, 158)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(205, 130,1 58)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data: [65, 59, 80, 81, 56, 55, 40]\r\n//         },\r\n//         {\r\n//           label: \"My Second dataset\",\r\n//           fill: true,\r\n//           lineTension: 0.3,\r\n//           backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n//           borderColor: \"rgb(35, 26, 136)\",\r\n//           borderCapStyle: \"butt\",\r\n//           borderDash: [],\r\n//           borderDashOffset: 0.0,\r\n//           borderJoinStyle: \"miter\",\r\n//           pointBorderColor: \"rgb(35, 26, 136)\",\r\n//           pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n//           pointBorderWidth: 10,\r\n//           pointHoverRadius: 5,\r\n//           pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n//           pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n//           pointHoverBorderWidth: 2,\r\n//           pointRadius: 1,\r\n//           pointHitRadius: 10,\r\n//           data: [28, 48, 40, 19, 86, 27, 90]\r\n//         }\r\n//       ]\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <MDBContainer>\r\n//         <h3 className=\"mt-5\">Line chart</h3>\r\n//         <Line data={this.state.dataLine} options={{ responsive: true }} />\r\n//       </MDBContainer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ChartsPage;","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport PanelInformationComponent from '../../components/Dashboard/PanelInformationComponent';\r\nimport ChartComponent from '../../components/Dashboard/ChartComponent';\r\n\r\nexport default function TransaksiPusat(props) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem ><b>Dashboard | Halaman Utama</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <PanelInformationComponent props={props} />\r\n                <ChartComponent props={props} />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard } from \"mdbreact\";\r\n\r\nconst Test = () => {\r\n  return (\r\n    <div>\r\n            <MDBTypography tag='h2'><b>Transaksi Pusat</b></MDBTypography>\r\n            <MDBContainer className=\"mt-3\" fluid>\r\n                <MDBRow lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                    <MDBCol color='red'>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                    <MDBCol>One of three columns</MDBCol>\r\n                </MDBRow>\r\n\r\n                <MDBRow>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce color-block-dark danger-color-dark z-depth-2> \r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>    \r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                    <MDBCol lg='3' md='6' className='mb-lg-0 mb-4 mt-4'>\r\n                        <MDBCard cascade narrow ecommerce>\r\n                            <img src=\"https://mdbootstrap.com/img/Others/documentation/1.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Test;","import React, { Fragment } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline } from \"mdbreact\";\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nconst ListTransaksiComponent = (props) => {\r\n\r\n    const handleClickReview = (id) => {\r\n        props.history.push(`/review-transaksi/${id}`)\r\n    }\r\n    const handleClickGenerate = (tanggal) => {\r\n        props.history.push(`/jurnal-perhari/${tanggal}`)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MDBContainer fluid>\r\n                <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBCol md=\"3\">\r\n                        <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" />\r\n                            <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                                Cari\r\n                                </MDBBtn>\r\n                        </MDBFormInline>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <h4 className=\"pt-2 mx-2\"> 1. Transaksi Cabang <small>Pemasukan</small></h4>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    <MDBBtn color=\"cyan\" size=\"sm\" onClick={()=>handleClickReview(2)} >Review</MDBBtn>\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" onClick={()=>handleClickGenerate('2020-08-20')}>Generate</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n\r\n                <MDBCard>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <h4 className=\"pt-2 mx-2\"> 1. Transaksi Cabang <small>Pemasukan</small></h4>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    <MDBBtn color=\"cyan\" size=\"sm\">Review</MDBBtn>\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\">Generate</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(ListTransaksiComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBContainer, MDBTypography } from \"mdbreact\";\r\nimport ListTransaksiComponent from '../../../components/Transaksi/TransaksiCabang/ListTransaksiComponent';\r\n\r\n\r\nexport default function TransaksiCabang() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem><b>List Transaksi Cabang</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListTransaksiComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst IncomeReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-INCOME':\r\n            return {\r\n                ...state,\r\n                listIncome: action.payload\r\n            }\r\n        case 'LIST-INCOME-NEXT':\r\n            return {\r\n                ...state,\r\n                listIncome: state.listIncome.concat(action.payload)\r\n            }\r\n        case 'PAGE-INFORMATION':\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.current_page,\r\n                totalData: action.payload.total\r\n            }\r\n        case 'DETAIL-INCOME':\r\n            return {\r\n                ...state,\r\n                detailIncome: action.payload\r\n            }\r\n        case 'DETAIL-ACCOUNT':\r\n            return {\r\n                ...state,\r\n                detailAccount: action.payload\r\n            }\r\n        case 'DETAIL-USER':\r\n            return {\r\n                ...state,\r\n                detailUser: action.payload\r\n            }\r\n        case 'DETAIL-CUSTOMER':\r\n            return {\r\n                ...state,\r\n                detailCustomer: action.payload\r\n            }\r\n        case 'DETAIL-REVIEWER':\r\n            return {\r\n                ...state,\r\n                detailReviewer: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AddIncome = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Transaksi'})\r\n    axios.post(`${API}/income/store`, data)\r\n      .then(res => {\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            callback()\r\n            alert('Transaksi Berhasil Disimpan!')\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListIncome = dispatch => (keyword, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan data transaksi....'})\r\n    axios.get(`${API}/income?keyword=${keyword}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-INCOME', payload:res.data.data.data})\r\n            dispatch({type: 'PAGE-INFORMATION', payload:res.data.data})\r\n            if(callback){\r\n                callback()\r\n            }\r\n            return res.data.data.data\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListIncomeNext = dispatch => (page) => {\r\n    axios.get(`${API}/income?page=${page}`)\r\n      .then(res => {\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-INCOME-NEXT', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst GetDetailIncome = dispatch => (id) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan Detail Transaksi....'})\r\n    axios.get(`${API}/income/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'DETAIL-INCOME', payload:res.data.data})\r\n            dispatch({type: 'DETAIL-ACCOUNT', payload:res.data.data.account})\r\n            dispatch({type: 'DETAIL-USER', payload:res.data.data.user})\r\n            dispatch({type: 'DETAIL-CUSTOMER', payload:res.data.data.customer})\r\n            dispatch({type: 'DETAIL-REVIEWER', payload:res.data.data.reviewed_by})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ReviewIncome = dispatch => (id, data) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengirim...'})\r\n    axios.put(`${API}/income/${id}/review`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            window.location.reload();\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n// const GetDetailIncome = dispatch => async (id) => {\r\n//     dispatch({type: 'LOADING', payload: 'Menampilkan Data . . .'})\r\n//     try {\r\n//         let response = await fetch(`${API}/income/${id}`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Accept' : 'application/json',\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//         })\r\n//         let responseJson = await response.json()\r\n//         // alert(JSON.stringify(responseJson))\r\n//         if(responseJson.success){\r\n//             dispatch({type: 'NO-LOADING'})\r\n//             dispatch({type: 'DETAIL-INCOME', payload:responseJson.data.account})\r\n//         }else{\r\n//             alert(responseJson.message)\r\n//             dispatch({type: 'NO-LOADING'})\r\n//         }\r\n//     } catch (err) {\r\n//         dispatch({type: 'NO-LOADING'})\r\n//         alert(err)\r\n//         // console.log(err)\r\n//     }\r\n// }\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    IncomeReducer,\r\n    {AddIncome, ListIncome, GetDetailIncome, ReviewIncome, ListIncomeNext},\r\n    {loading: false, message:'', listIncome:[], detailIncome:'', detailAccount:'', detailUser:'', detailCustomer:'', detailReviewer:'', currentPage:'', totalData:''}\r\n)","import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Context as AuthContext } from '../../../services/Context/AuthContext'\r\nimport { Context as IncomeContext } from '../../../services/Context/IncomeContext'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline } from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst ListTransaksiComponent = (props) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const { state, ListIncome, ListIncomeNext } = useContext(IncomeContext)\r\n    const [search, setSearch] = useState('')\r\n    const [, setListData] = useState([])\r\n\r\n    useEffect(() => {\r\n        ListIncome('')\r\n        setListData(state.listIncome)\r\n        return () => {\r\n\r\n        };\r\n    }, []);\r\n\r\n    const handleClickReview = (id) => {\r\n        props.history.push(`/review-transaksi/${id}`)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        if(search === ''){\r\n            alert('Ketikan yg ingin dicari!')\r\n        }else{\r\n            ListIncome(search)\r\n        }\r\n    }\r\n\r\n    const handleResetSearch = () => {\r\n        ListIncome('')\r\n        setSearch('')\r\n    }\r\n\r\n\r\n    const handleTestClick = () => {\r\n        ListIncomeNext(2)\r\n    }\r\n\r\n\r\n    const listTransaksi = () => (\r\n        <Fragment>\r\n            {state.listIncome.map((item,i) => (\r\n                <MDBCard key={i} className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <MDBTypography tag='h5' className=\"pt-2 mx-2\"> {item.invoice_number} <small>{item.account.name}-{item.account.reference_number}</small></MDBTypography>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    {isAuthenticated() && isAuthenticated().data.level === 'Accountant' && (\r\n                                        <MDBBtn color=\"cyan\" size=\"sm\" onClick={() => handleClickReview(item.id)} >Review</MDBBtn>\r\n                                    )}\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\">Generate Invoice</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            ))}\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {JSON.stringify(state.listIncome)} */}\r\n            <MDBContainer fluid>\r\n                <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBCol md=\"4\">\r\n                        <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                            <MDBBtn gradient=\"aqua\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleSearch}>\r\n                                Cari\r\n                            </MDBBtn>\r\n                            {search !== '' && (\r\n                                <MDBBtn color=\"red\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleResetSearch}>\r\n                                    Reset\r\n                                </MDBBtn>\r\n                            )}\r\n                        </MDBFormInline>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n                \r\n                {state.loading && (\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                        <CircularProgress />\r\n                    </MDBBox>\r\n                )}\r\n                {!state.loading && (\r\n                    listTransaksi()\r\n                )}\r\n                <MDBBox display=\"flex\" justifyContent=\"center\" className=\"mt-4\">\r\n                    {state.listIncome.length !== state.totalData && (\r\n                        <MDBBtn outline color=\"primary\" onClick={handleTestClick}>Load More...</MDBBtn>\r\n                    )}  \r\n                </MDBBox>\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(ListTransaksiComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBTypography } from \"mdbreact\";\r\nimport ListTransaksiComponent from '../../../components/Transaksi/TransaksiPusat/ListTransaksiComponent';\r\n\r\nexport default function TransaksiPusat() {\r\n    return (\r\n        <Fragment>\r\n            <MDBTypography tag='h2' className=\"mt-4 mx-4\"><b>List Transaksi Pusat</b></MDBTypography>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListTransaksiComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Context as AuthContext } from '../../services/Context/AuthContext'\r\nimport {Context as IncomeContext} from '../../services/Context/IncomeContext'\r\nimport { Button, TextField, Divider, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, LinearProgress} from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport {useParams} from \"react-router-dom\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst ReviewTransaksiComponent = () => {\r\n    let { id } = useParams();\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const {state, GetDetailIncome, ReviewIncome} = useContext(IncomeContext)\r\n    const [, setDataTanggal] = useState([])\r\n    const [, setDataBulan] = useState([])\r\n    const [openDialogApprove, setOpenDialogApprove] = useState(false)\r\n\r\n    useEffect(() => {\r\n        GetDetailIncome(id)\r\n        const loopingTanggal = () => {\r\n            let tanggal = '';\r\n            let data_tanggal = [];\r\n            for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n                data_tanggal.push({ 'tanggal': `${tanggal}`})\r\n            }\r\n            setDataTanggal(data_tanggal)\r\n        }\r\n        const loopingBulan = () => {\r\n            let bulan = '';\r\n            let data_bulan = [];\r\n            for (bulan = 1; bulan <= 12; bulan++) {\r\n                data_bulan.push({ 'bulan': `${bulan}` })\r\n            }\r\n            setDataBulan(data_bulan)\r\n        }\r\n        loopingTanggal()\r\n        loopingBulan()\r\n    }, []);\r\n\r\n    const dialogApprove = () => (\r\n        <Dialog open={openDialogApprove} onClose={handleApproveCancle} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Setujui / Tolak Transaksi?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Pilih untuk menyetujui atau menolak transaksi ini, transaksi tidak dapat di ubah setelah melakukan tindakan ini!.\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleRejectedProccess} color=\"secondary\">\r\n                    Tolak Transaksi\r\n                </Button>\r\n                <Button onClick={handleApproveProccess} color=\"primary\" autoFocus>\r\n                    Setujui Transaksi\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const handleApproveDialog = () => {\r\n        setOpenDialogApprove(true)\r\n    }\r\n    \r\n    const handleApproveCancle = () => {\r\n        setOpenDialogApprove(false)\r\n    } \r\n\r\n    const handleApproveProccess = () => {\r\n        let data = {\r\n            review_status: 'approved',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewIncome(id, data)\r\n    } \r\n\r\n    const handleRejectedProccess = () => {\r\n        let data = {\r\n            review_status: 'rejected',\r\n            reviewer_id: isAuthenticated().data.id\r\n        }\r\n        setOpenDialogApprove(false)\r\n        ReviewIncome(id, data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Transaksi Pusat ID {id}</h4>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Nomor Transaksi<br></br>\r\n                                <small>{state.detailIncome.invoice_number}</small>\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Status Review<br></br>\r\n                                <b>{state.detailIncome.review_status}</b>\r\n                                {state.detailIncome.review_status === null && (\r\n                                    '........................'\r\n                                )}\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            \r\n                                <h5 className=\"pt-2 mx-2\">\r\n                                    Direview Oleh<br></br>\r\n                                    {state.detailReviewer && (\r\n                                        <Fragment>\r\n                                            <b>{state.detailReviewer.name}</b>\r\n                                        </Fragment>\r\n                                    )}\r\n                                    {!state.detailReviewer && (\r\n                                        '........................'\r\n                                    )}\r\n                                </h5> \r\n                            \r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Tanggal Review<br></br>\r\n                                <small>{state.detailIncome.review_date}</small>\r\n                                {state.detailIncome.review_date === null && (\r\n                                        '........................'\r\n                                )}\r\n                            </h5> \r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                {state.detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" disabled>\r\n                                        Transaksi Sudah Direview\r\n                                    </MDBBtn>\r\n                                )}\r\n                                {!state.detailReviewer && (\r\n                                    <MDBBtn color=\"dark-green\" size=\"sm\" onClick={() => handleApproveDialog('approve')} gradient=\"blue\">\r\n                                        Setujui / Tolak Transaksi <MDBIcon icon=\"check\" className=\"ml-1\" /> <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                    </MDBBtn>\r\n                                )}\r\n                                {/* <MDBBtn color=\"danger\" size=\"sm\">\r\n                                    Tolak <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                </MDBBtn> */}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                        {dialogApprove()}\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n            <MDBCard className='mb-2'>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"7\">\r\n                            {/* {JSON.stringify(state.detailReviewer)} */}\r\n                            <form>\r\n                                <TextField fullWidth value={`${state.detailUser.name} | ${state.detailUser.email}`} margin=\"normal\" readonly /><br></br>\r\n                                <TextField fullWidth value={state.detailIncome.description} margin=\"normal\" readonly /><br></br>\r\n                                <TextField fullWidth value={state.detailIncome.date} margin=\"normal\" readonly /><br></br>\r\n                                <TextField fullWidth value={state.detailCustomer.name} margin=\"normal\" readonly /><br></br>\r\n                                <TextField fullWidth value={state.detailAccount.name} margin=\"normal\" readonly /><br></br>\r\n                            </form>\r\n                        </MDBCol>\r\n\r\n                        <MDBCol lg=\"5\">\r\n                            <MDBRow className='m-12'>\r\n                                <MDBCol lg=\"4\">\r\n                                    <TextField fullWidth defaultValue=\"Default Value\" margin=\"normal\" type='number' value={state.detailIncome.unit}  />\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"8\">\r\n                                    <TextField fullWidth margin=\"normal\" type='number' value={state.detailIncome.unit_price} />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"8\" >\r\n                                    <b>TOTAL</b>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"4\">\r\n                                    <b><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={state.detailIncome.ammount} /></b>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <Divider /><Divider />\r\n                            <TextField fullWidth value={state.detailIncome.payment_method} margin=\"normal\" readonly />\r\n                            <TextField fullWidth  variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} value={`Keterangan: ${state.detailIncome.information}`} readonly />\r\n                            \r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewTransaksiComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ReviewTransaksiComponent from '../../components/Transaksi/ReviewTransaksiComponent';\r\n\r\n\r\nexport default function ReviewTransaksi(props) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Review Transaksi</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ReviewTransaksiComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst JournalReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-JOURNAL-DAILY':\r\n            return {\r\n                ...state,\r\n                listJournalDaily:action.payload\r\n            }\r\n        case 'LIST-JOURNAL-DAILY-ADDITIONAL':\r\n            return {\r\n                ...state,\r\n                additionalData:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst GetDailyJournal = dispatch => (date) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan Data Jurnal...'})\r\n    axios.get(`${API}/journal/${date}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-JOURNAL-DAILY', payload:res.data.data})\r\n            dispatch({type: 'LIST-JOURNAL-DAILY-ADDITIONAL', payload:res.data.additional_data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-JOURNAL-DAILY', payload:[]})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst PostingJournal = dispatch => (data, date) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan Data Jurnal...'})\r\n    axios.put(`${API}/journal/${date}/posting`, data)\r\n      .then(res => {\r\n          alert(JSON.stringify(res))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            alert(res.data.message)\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    JournalReducer,\r\n    {GetDailyJournal, PostingJournal},\r\n    {loading: false, message:'', listJournalDaily:[], additionalData:''}\r\n)","import React, { Fragment, useState, useContext } from 'react';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\nimport {Context as JournalContext} from '../../services/Context/JournalContext'\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { LinearProgress, TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst JurnalPerhariComponent = ({props, params}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    const {state, GetDailyJournal, PostingJournal} = useContext(JournalContext)\r\n    const [review, setReview] = useState(false)\r\n    const [memo, setMemo] = useState('')\r\n    const [save, setSave] = useState(false)\r\n    const [posting, setPosting] = useState(false)\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date(params.tanggal));\r\n    const [date, setDate] = useState(params.tanggal) \r\n\r\n    const handleDateChange = (date) => {\r\n        let formattedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate(date);\r\n        setDate(formattedDate)\r\n        props.history.push(`/jurnal-perhari/${formattedDate}`)\r\n        setReview(false)\r\n        // alert(formattedDate)\r\n    };\r\n\r\n    const reviewStatus = () => {\r\n        \r\n        // {!review && (\r\n        //     <small style={{ color: 'red' }}>Not Review</small>\r\n        // )}\r\n        // {review && !save && (\r\n        //     <small style={{ color: 'red' }}>Not Review</small>\r\n        // )}\r\n        if (!review) {\r\n            return <small style={{ color: 'black' }}>...............................</small>\r\n        } else if (review && !save) {\r\n            if(state.additionalData.review_status === 'Not Reviewed'){\r\n                return <small style={{ color: 'orange' }}>In Review</small>\r\n            }else{\r\n                return <small style={{ color: 'green', fontWeight:'bold' }}>{state.additionalData.status}</small>\r\n            }\r\n        } else if (review && save && !posting) {\r\n            if(state.additionalData.review_status === 'Not Reviewed'){\r\n                return <small style={{ color: 'orange' }}>{state.additionalData.status}</small>\r\n            }else{\r\n                return <small style={{ color: 'green', fontWeight:'bold' }}>Siap Posting</small>\r\n            }\r\n        } else {\r\n            return <small style={{ color: 'green' }}><b>Direview & Diposting</b></small>\r\n        }\r\n    }\r\n\r\n    const memoComponent = () => {\r\n        if(state.additionalData.review_status === 'Not Reviewed'){\r\n            return(\r\n                <Fragment>\r\n                    <TextField fullWidth label=\"Memo\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={4} onChange={(e) => setMemo(e.target.value)} />\r\n           \r\n                    <MDBBtn color=\"dark-green\" gradient=\"blue\" onClick={handleSave} disabled={posting} >\r\n                            Simpan\r\n                        </MDBBtn>\r\n                </Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <TextField fullWidth label=\"Memo\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={4} defaultValue={state.additionalData.memo} disabled />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleReview = () => {\r\n        GetDailyJournal(date)\r\n        setReview(true)\r\n\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(state.listJournalDaily.length > 0){\r\n            setSave(true)\r\n            alert('Silahkan untuk melanjutkan posting!')\r\n        }else{\r\n            alert('Tidak tersedia data jurnal untuk tanggal yang dipilih!')\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePosting = () => {\r\n        setPosting(true)\r\n        let data = {\r\n            reviewer_id : isAuthenticated().data.id,\r\n            memo : memo,\r\n        }\r\n        PostingJournal(data, date)\r\n        // alert(JSON.stringify(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {JSON.stringify(state.additionalData)} */}\r\n            <MDBRow>\r\n                <MDBCol lg='9'>\r\n                    <h4>Jurnal Umum | Perhari</h4>\r\n                </MDBCol>\r\n                <MDBCol lg='3'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\">\r\n                        {save && (\r\n                            <MDBBtn color=\"dark-green\" size=\"sm\" gradient=\"green\" onClick={handlePosting} disabled={posting}>\r\n                                Posting Jurnal\r\n                            </MDBBtn>\r\n                        )}\r\n                        {!save && (\r\n                            <MDBBtn color=\"dark-green\" size=\"sm\" gradient=\"blue\" onClick={handleReview} disabled={review}>\r\n                                Review Jurnal\r\n                            </MDBBtn>\r\n                        )}\r\n                    </MDBBox>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"3\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Filter Tanggal\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Tanggal Transaksi<br></br>\r\n                                <span>{`${selectedDate.getDate()}/${(selectedDate.getMonth() + 1)}/${selectedDate.getFullYear()}`}</span>\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Status<br></br>\r\n                                {reviewStatus()}\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Diperiksa Oleh<br></br>\r\n                                {review && (\r\n                                    <small><b>Accountant</b></small>\r\n                                )}\r\n                                {!review && (\r\n                                    <small>...............................</small>\r\n                                )}\r\n                            </h5>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n            </MDBCard>\r\n            {review && (\r\n                <MDBCard className='mb-2'>\r\n                    {state.listJournalDaily.length > 0 && (\r\n                        <MDBCardBody className='p-1'>\r\n                            <MDBTable>\r\n                                <MDBTableHead color=\"primary-color\" textWhite>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>NO. REFERENSI</th>\r\n                                        <th>AKUN</th>\r\n                                        <th>DESKRIPSI</th>\r\n                                        <th>DEBIT(Rp.)</th>\r\n                                        <th>KREDIT(Rp.)</th>\r\n                                    </tr>\r\n                                </MDBTableHead>\r\n                                <MDBTableBody>\r\n                                    {state.listJournalDaily.map((item,i) => (\r\n                                        <tr>\r\n                                            <td>{i+1}</td>\r\n                                            <td><b>{item.reference_number}</b></td>\r\n                                            <td><b>{item.name}</b></td>\r\n                                            <td>{item.information}</td>\r\n                                            <td><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={item.debit} /></td>\r\n                                            <td><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={item.credit} /></td>\r\n                                        </tr>\r\n                                    ))}\r\n \r\n                                    {/* <tr color=\"primary-color\">\r\n                                        <th colspan=\"6\">No. Transaksi : <b>PUSAT/IN/PEN/001/10-2020</b></th>\r\n                                    </tr> */}\r\n\r\n                                </MDBTableBody>\r\n                            </MDBTable>\r\n                            <hr></hr>\r\n                            <MDBRow className='mx-3'>\r\n                                <MDBCol lg=\"9\">\r\n                                    <h5 className=\"pt-2 mx-2\">\r\n                                        <small>TOTAL DEBIT</small><br></br>\r\n                                        <small>TOTAL KREDIT</small>\r\n                                    </h5>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"3\">\r\n                                    <MDBBox display='flex' justifyContent=\"start\">\r\n                                        <h5 className=\"pt-2 mx-2\">\r\n                                            <small><b><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={state.additionalData.total_debit}/></b></small><br></br>\r\n                                            <small><b><NumberFormat displayType={'text'} thousandSeparator={true} prefix={'Rp. '} value={state.additionalData.total_credit}/></b></small>\r\n                                        </h5>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <hr></hr>\r\n                            <MDBRow className='mx-3'>\r\n                                <MDBCol lg=\"6\">\r\n                                    {memoComponent()}\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCardBody>\r\n                    )}\r\n                    {state.listJournalDaily.length === 0 && (\r\n                        <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                            <h4 style={{color:'red'}}>Data Tidak Tersedia, Silahkan Pilih Tanggal Lain!</h4>\r\n                        </MDBBox>\r\n                    )}\r\n                </MDBCard>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JurnalPerhariComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport JurnalPerhariComponent from '../../components/Jurnal/JurnalPerhariComponent';\r\n\r\n\r\nexport default function JurnalPerHari(props) {\r\n    const { match: { params } } = props;\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem MDBBreadcrumbItem><b>Jurnal Harian {params.tanggal} </b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <JurnalPerhariComponent props={props} params={params} />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst LedgerReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-LEDGER':\r\n            return {\r\n                ...state,\r\n                listLedger: action.payload\r\n            }\r\n        case 'LEDGER-ADDITIONAL':\r\n            return {\r\n                ...state,\r\n                ledgerAdditional: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListLedger = dispatch => (data) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan Data Buku Besar...'})\r\n    axios.post(`${API}/ledger`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-LEDGER', payload:res.data.data.data})\r\n            dispatch({type: 'LEDGER-ADDITIONAL', payload:res.data.additional_data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-LEDGER', payload:[]})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n// const ListLedger = dispatch => async (data) => {\r\n//     dispatch ({type: 'LOADING', payload: 'Menampilkan Data Buku Besar...'})\r\n//     try {\r\n//         let response = await fetch(`${API}/ledger`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Accept' : 'application/json',\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: data\r\n//         })\r\n//         let responseJson = await response.json()\r\n//         if(responseJson.success){\r\n//             dispatch({type: 'NO-LOADING'})\r\n//             dispatch({type: 'LIST-LEDGER', payload:responseJson.data.data})\r\n//             alert(responseJson.data.data)\r\n//         }else{\r\n//             alert(responseJson.message)\r\n//             dispatch({type: 'NO-LOADING'})\r\n//         }\r\n//     } catch (err) {\r\n//         dispatch({type: 'NO-LOADING'})\r\n//         alert(err)\r\n//     }\r\n// }\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    LedgerReducer,\r\n    {ListLedger},\r\n    {loading: false, message:'', listLedger:[], ledgerAdditional:''}\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst AccountReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-ACCOUNT':\r\n            return {\r\n                ...state,\r\n                listAccount:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListAccount = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Transaksi'})\r\n    axios.get(`${API}/account`)\r\n      .then(res => {\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-ACCOUNT', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    AccountReducer,\r\n    {ListAccount},\r\n    {loading: false, message:'', listAccount:[]}\r\n)","import React, { useState, useContext, useEffect } from 'react';\r\nimport {Context as LedgerContext} from '../../services/Context/LedgerContext'\r\nimport {Context as AccountContext} from '../../services/Context/AccountContext'\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBBox, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { InputLabel, Select, MenuItem, LinearProgress } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst BukuBesarComponent = ({  }) => {\r\n    const {state:{listAccount}, ListAccount} = useContext(AccountContext)\r\n    const {state, ListLedger} = useContext(LedgerContext)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [selectedDate2, setSelectedDate2] = useState();\r\n    const [] = useState('')\r\n    const [value, setValue] = useState({\r\n        account_id: '',\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        ListAccount()\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    const handleSelectAccount = (e) => {\r\n        // alert(JSON.stringify(e))\r\n        setValue({\r\n            ...value,\r\n            account_id: e\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        let formattedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate(date);\r\n        setValue({\r\n            ...value,\r\n            start_date: formattedDate\r\n        })   \r\n    }\r\n\r\n    const handleDateChange2 = (date) => {\r\n        let formattedDate2 = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate2(date); \r\n        setValue({\r\n            ...value,\r\n            end_date: formattedDate2\r\n        }) \r\n    }\r\n\r\n    const handleFilter = () => {\r\n        if(value.account_id===''||value.start_date===''||value.end_date===''){\r\n            alert('Pilih Jenis Akun & Tentukan Rentang Tanggal Transaksi!')\r\n        }else{\r\n            let data = {\r\n                account_id : value.account_id,\r\n                start_date: value.start_date,\r\n                end_date: value.end_date\r\n            }\r\n            ListLedger(data)\r\n            // alert(JSON.stringify(state.listLedger))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {JSON.stringify(state.listLedger)} */}\r\n            <MDBRow>\r\n                <MDBCol lg='9'>\r\n                    <h4>Catatan Buku Besar</h4>\r\n                </MDBCol>\r\n                <MDBCol lg='3'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\">\r\n\r\n                    </MDBBox>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"2\">\r\n                            <InputLabel className=\"pt-2 mx-2\">Jenis Akun</InputLabel> \r\n                            <Select fullWidth className=\" mx-2\" onChange={(e) => handleSelectAccount(e.target.value)}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Pilih Jenis Akun</em>\r\n                                </MenuItem>\r\n                                {listAccount.map((item) => (\r\n                                    <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </MDBCol>\r\n                        {/* <MDBCol lg=\"2\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                No. Reff.<br></br>\r\n                                <small><i>Pilih Jenis Akun</i></small>\r\n                            </h5>\r\n                        </MDBCol> */}\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Tanggal Awal\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Tanggal Akhir\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        value={selectedDate2}\r\n                                        onChange={handleDateChange2}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className=\"pt-2 mx-2\">\r\n                                <MDBBtn color=\"dark-green\"  gradient=\"blue\" onClick={handleFilter}>\r\n                                    Tampilkan <MDBIcon icon=\"filter\" className=\"ml-1\" />\r\n                                </MDBBtn>\r\n                                {/* <MDBBtn color=\"danger\" size=\"sm\">\r\n                                    Tolak <MDBIcon icon=\"times\" className=\"ml-1\" />\r\n                                </MDBBtn> */}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n            </MDBCard>\r\n            \r\n            {state.listLedger.length !== 0 && (\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBTable>\r\n                            <MDBTableHead color=\"primary-color\" textWhite>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Tanggal</th>\r\n                                    <th>NO. TRANSAKSI</th>\r\n                                    <th>RINCIAN / DESKRIPSI</th>\r\n                                    <th>DEBIT(Rp.)</th>\r\n                                    <th>KREDIT(Rp.)</th>\r\n                                    <th>SALDO(Rp.)</th>\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                {state.listLedger.map((item,i) => (\r\n                                    <tr>\r\n                                        <td>{i+1}</td>\r\n                                        <td> {item.date} </td>\r\n                                        <td><b>{item.invoice_number}</b></td>\r\n                                        <td>{item.description}</td>\r\n                                        <td><NumberFormat value={item.debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} style={{color:'green'}} /></td>\r\n                                        <td><NumberFormat value={item.credit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} style={{color:'red'}}/></td>\r\n                                        <td><b><NumberFormat value={item.saldo} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n                        <hr></hr>\r\n                        <MDBRow className='mx-3'>\r\n                            <MDBCol lg=\"9\">\r\n                                <h5 className=\"pt-2 mx-2\">\r\n                                    <small>TOTAL DEBIT</small><br></br>\r\n                                    <small>TOTAL KREDIT</small><br></br><hr></hr>\r\n                                    <small>SALDO AWAL</small><br></br>\r\n                                    <small>SALDO AKHIR</small>\r\n                                </h5>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBBox display='flex' justifyContent=\"start\">\r\n                                    <h5 className=\"pt-2 mx-2\">\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_debit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.total_credit} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br><hr></hr>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_awal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small><br></br>\r\n                                        <small><b><NumberFormat value={state.ledgerAdditional.saldo_akhir} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b></small>\r\n                                    </h5>\r\n                                </MDBBox>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <hr></hr>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BukuBesarComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport BukuBesarComponent from '../../components/BukuBesar/BukuBesarComponent';\r\n\r\n\r\n\r\nexport default function BukuBesar() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Buku Besar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <BukuBesarComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {Context as AuthContext} from '../../services/Context/AuthContext'\r\n\r\nconst MarketingRoute = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated} = useContext(AuthContext)\r\n    return (\r\n        <Route {...rest} render={props => isAuthenticated() && isAuthenticated().data.level === 'Marketing' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to ={{ pathname: '/', state: {from: props.location} }} />\r\n            )} \r\n        />\r\n    );\r\n}\r\n\r\nexport default MarketingRoute;\r\n\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst CustomerContext = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-CUSTOMER':\r\n            return {\r\n                ...state,\r\n                listCustomer:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListCustomer = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Transaksi'})\r\n    axios.get(`${API}/customer`)\r\n      .then(res => {\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-CUSTOMER', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    CustomerContext,\r\n    {ListCustomer},\r\n    {loading: false, message:'', listCustomer:[]}\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst ProductReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-PRODUCT':\r\n            return {\r\n                ...state,\r\n                listProduct:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AddProduct = dispatch => async (formData, callback) => {\r\n    // alert(JSON.stringify(formData))\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Bahan Baku...'})\r\n    axios.post(`${API}/product`, formData, { headers: {'content-type': `multipart/form-data; boundary=${formData._boundary}`}})\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Produk Berhasil Ditambahkan!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListProduct = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Produk'})\r\n    axios.get(`${API}/product`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-PRODUCT', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\n\r\nconst DeleteProduct = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Produk...'})\r\n    axios.delete(`${API}/product/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Produk Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    ProductReducer,\r\n    {AddProduct, ListProduct, DeleteProduct},\r\n    {loading: false, message:'', listProduct:[]}\r\n)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Context as AuthContext } from '../../services/Context/AuthContext'\r\nimport { Context as CustomerContext } from '../../services/Context/CustomerContext'\r\nimport {Context as AccountContext} from '../../services/Context/AccountContext'\r\nimport {Context as IncomeContext} from '../../services/Context/IncomeContext'\r\nimport {Context as ProductContext} from '../../services/Context/ProductContext'\r\nimport { Button, TextField, Select, MenuItem, InputLabel, FormControl, Divider, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport NumberFormat from 'react-number-format';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TransaksiMasukComponent = (props) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const {state:{listAccount}, ListAccount} = useContext(AccountContext)\r\n    const { state:{listCustomer}, ListCustomer } = useContext(CustomerContext)\r\n    const {state:{listProduct}, ListProduct} = useContext(ProductContext)\r\n    const {state, AddIncome} = useContext(IncomeContext)\r\n    const [openDialogApprove, setOpenDialogApprove] = useState(false)\r\n    const [dataTanggal, setDataTanggal] = useState([])\r\n    const [tanggal, setTanggal] = useState('')\r\n    const [bulan, setBulan] = useState('')\r\n    const [ammount, setAmmount] = useState(0)\r\n    const [value, setValue] = useState({\r\n        customer_id: '',\r\n        account_id: '',\r\n        product_id: '',\r\n        invoice_number: '',\r\n        description: '',\r\n        payment_method: '',\r\n        date: '',\r\n        unit: 0,\r\n        unit_price: 0,\r\n        information: ''\r\n    })\r\n    let today = new Date()\r\n    const handleChange = name => event => {\r\n        setValue({\r\n            ...value,\r\n            [name]: event.target.value\r\n        })\r\n        if (name === 'unit_price') {\r\n            let set_ammount = event.target.value * value.unit;\r\n            setAmmount(set_ammount)\r\n        }\r\n        if (name === 'unit') {\r\n            let set_ammount = event.target.value * value.unit_price;\r\n            setAmmount(set_ammount)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        ListAccount()\r\n        ListCustomer()\r\n        ListProduct()\r\n        const loopingTanggal = () => {\r\n            let tanggal = '';\r\n            let data_tanggal = [];\r\n            for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n                data_tanggal.push({ 'tanggal': `${tanggal}` })\r\n            }\r\n            setDataTanggal(data_tanggal)\r\n        }\r\n        loopingTanggal()\r\n\r\n    }, []);\r\n\r\n\r\n    const dialogApprove = () => (\r\n        <Dialog open={openDialogApprove} onClose={handleApproveCancle} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Sebelum menyimpan transaksi, pastikan inputan sudah benar agar transakasi anda tidak di tolak oleh pihak Akuntan!\r\n            </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleApproveCancle} color=\"secondary\">\r\n                    Batal\r\n                </Button>\r\n                <Button onClick={handleApproveProccess} color=\"primary\" autoFocus disabled={state.loading}>\r\n                    {state.loading?state.message:'Simpan Transaksi'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const handleApproveDialog = () => {\r\n        setOpenDialogApprove(true)\r\n    }\r\n\r\n    const handleApproveCancle = () => {\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    const handleApproveProccess = () => {\r\n        let data = {\r\n            user_id: isAuthenticated().data.id,\r\n            customer_id: value.customer_id,\r\n            account_id: value.account_id,\r\n            product_id: value.product_id,\r\n            invoice_number: value.invoice_number,\r\n            unit: value.unit,\r\n            unit_price: value.unit_price,\r\n            information: value.information,\r\n            description: value.description,\r\n            payment_method: value.payment_method,\r\n            date: today.getFullYear()+'-'+bulan+'-'+tanggal\r\n        }\r\n        // alert(JSON.stringify(data))\r\n        AddIncome(data, () => setValue({\r\n            customer_id: '',\r\n            account_id: '',\r\n            product_id: '',\r\n            invoice_number: '',\r\n            description: '',\r\n            payment_method: '',\r\n            date: '',\r\n            unit: 0,\r\n            unit_price: 0,\r\n            information: ''\r\n        }))\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {today.getFullYear()} */}\r\n            <h4>Input Transaksi Masuk</h4>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                {dialogApprove()}\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"7\">\r\n                            <form>                             \r\n                                <TextField fullWidth label=\"No. Transaksi / Invoice\" variant=\"outlined\" margin=\"normal\" value={value.invoice_number} onChange={handleChange('invoice_number')} /><br></br><br></br>\r\n                                <InputLabel>Produk</InputLabel>\r\n                                <Select fullWidth value={value.product_id} onChange={handleChange('product_id')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>Pilih Produk</em>\r\n                                    </MenuItem>\r\n                                    {listProduct.map((item, i) => (\r\n                                         <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <TextField fullWidth label=\"Deskripsi Transaksi\" variant=\"outlined\" margin=\"normal\" multiline rowsMax={4} value={value.description} onChange={handleChange('description')} /><br></br>\r\n                                <br></br>\r\n                                <MDBRow className='m-12'>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Tanggal</InputLabel>\r\n                                        <Select fullWidth value={tanggal} onChange={(event) => setTanggal(event.target.value)}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Pilih Tanggal</em>\r\n                                            </MenuItem>\r\n                                            {dataTanggal.map((item) => (\r\n                                                <MenuItem key={item.tanggal} value={item.tanggal}>{item.tanggal}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Bulan</InputLabel>\r\n                                        <Select fullWidth value={bulan} onChange={(event) => setBulan(event.target.value)}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Pilih Bulan</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={1}>Januari</MenuItem>\r\n                                            <MenuItem value={2}>Pebruari</MenuItem>\r\n                                            <MenuItem value={3}>Maret</MenuItem>\r\n                                            <MenuItem value={4}>April</MenuItem>\r\n                                            <MenuItem value={5}>Mei</MenuItem>\r\n                                            <MenuItem value={6}>Juni</MenuItem>\r\n                                            <MenuItem value={7}>Juli</MenuItem>\r\n                                            <MenuItem value={8}>Agustus</MenuItem>\r\n                                            <MenuItem value={9}>September</MenuItem>\r\n                                            <MenuItem value={10}>Oktober</MenuItem>\r\n                                            <MenuItem value={11}>Nopember</MenuItem>\r\n                                            <MenuItem value={12}>Desember</MenuItem>\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Tahun</InputLabel>\r\n                                        <Select fullWidth value={2020}>\r\n                                            <MenuItem value={2020}>\r\n                                                <em>2020</em>\r\n                                            </MenuItem>\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                </MDBRow><br></br>\r\n                                <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Pilih Customer</InputLabel>\r\n                                    <Select label=\"Metode Pembayaran\" value={value.customer_id} onChange={handleChange('customer_id')}>\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        {listCustomer.map((item, i) => (\r\n                                            <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Jenis Akun</InputLabel>\r\n                                    <Select label=\"Metode Pembayaran\" value={value.account_id} onChange={handleChange('account_id')}>\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        {listAccount.map((item, i) => (\r\n                                            <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </form>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"5\">\r\n                            {/* <MDBBox display=\"flex\" justifyContent=\"center\">\r\n                                <MDBCardImage className=\"img-fluid\" src=\"https://docs.devexpress.com/XtraReports/images/invoice-preview.png\" style={{ height: 300 }} />\r\n                            </MDBBox> */}\r\n                            {/* <TextField fullWidth label=\"Pesan\" defaultValue=\"Default Value\" variant=\"outlined\" margin=\"normal\" multiline rowsMax={4} /> */}\r\n                            <MDBRow className='m-12'>\r\n                                <MDBCol lg=\"4\">\r\n                                    <TextField fullWidth label=\"Jumlah Item\" defaultValue=\"Default Value\" variant=\"outlined\" margin=\"normal\" type='number' value={value.unit} onChange={handleChange('unit')} />\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"8\">\r\n                                    <TextField fullWidth label=\"Harga Satuan\" defaultValue=\"Default Value\" variant=\"outlined\" margin=\"normal\" type='number' value={value.unit_price} onChange={handleChange('unit_price')} />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"8\" >\r\n                                    <b>TOTAL</b>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"4\">\r\n                                    <b><NumberFormat value={ammount} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></b>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <Divider /><Divider />\r\n                            <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Metode Pembayaran</InputLabel>\r\n                                <Select label=\"Metode Pembayaran\" value={value.payment_method} onChange={handleChange('payment_method')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Cash'>Tunai</MenuItem>\r\n                                    <MenuItem value='Transfer'>Transfer</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField fullWidth label=\"Keterangan\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} value={value.information} onChange={handleChange('information')} />\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"12\" >\r\n                                    <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                                        <MDBBtn color=\"dark-green\" onClick={() => handleApproveDialog('approve')} disabled={state.loading}>\r\n                                            Simpan Transaksi\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                                {/* <MDBCol lg=\"6\">\r\n                                    <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                                        <MDBBtn color=\"danger\" >\r\n                                            Batal\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol> */}\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(TransaksiMasukComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport TransaksiMasukComponent from '../../../components/Transaksi/TransaksiMasukComponent';\r\n\r\nexport default function TransaksiMasuk() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Transaksi Masuk</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <TransaksiMasukComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, Select, MenuItem, InputLabel } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst JurnalPerbulanComponent = () => {\r\n    const [review] = useState(false)\r\n    const [] = useState(false)\r\n    const [] = useState(false)\r\n    const [bulan, setBulan] = useState('')\r\n\r\n    return (\r\n        <div>\r\n            <MDBRow>\r\n                <MDBCol lg='9'>\r\n                    <h4>Jurnal Umum | Perbulan</h4>\r\n                </MDBCol>\r\n\r\n            </MDBRow>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"2\" className='ml-4'>\r\n                            <InputLabel>Bulan</InputLabel>\r\n                            <Select fullWidth value={bulan} onChange={(event) => setBulan(event.target.value)}>\r\n                                <MenuItem value=\"\">\r\n                                    <em>Pilih Bulan</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1}>Januari</MenuItem>\r\n                                <MenuItem value={2}>Pebruari</MenuItem>\r\n                                <MenuItem value={3}>Maret</MenuItem>\r\n                                <MenuItem value={4}>April</MenuItem>\r\n                                <MenuItem value={5}>Mei</MenuItem>\r\n                                <MenuItem value={6}>Juni</MenuItem>\r\n                                <MenuItem value={7}>Juli</MenuItem>\r\n                                <MenuItem value={8}>Agustus</MenuItem>\r\n                                <MenuItem value={9}>September</MenuItem>\r\n                                <MenuItem value={10}>Oktober</MenuItem>\r\n                                <MenuItem value={11}>Nopember</MenuItem>\r\n                                <MenuItem value={12}>Desember</MenuItem>\r\n                            </Select>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Bulan Transaksi<br></br>\r\n                                <smal>Silahkan Pilih Bulan</smal>\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Status<br></br>\r\n                                ............\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Diperiksa Oleh<br></br>\r\n                                ..........\r\n                            </h5>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    {/* <MDBRow className='m-3'>\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                Tanggal Transaksi<br></br>\r\n                                <small>11/07/2020</small>\r\n                            </h5>\r\n                        </MDBRow> */}\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\" textWhite>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>NO. REFERENSI</th>\r\n                                <th>AKUN</th>\r\n                                <th>DESKRIPSI</th>\r\n                                <th>KREDIT(Rp.)</th>\r\n                                <th>DEBIT(Rp.)</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td><b>1001</b></td>\r\n                                <td>Kas</td>\r\n                                <td>-</td>\r\n                                <td>50.000.000</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>2</td>\r\n                                <td><b>1002</b></td>\r\n                                <td>Modal</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>20.000.000</td>\r\n                            </tr>\r\n                            {/* <tr color=\"primary-color\">\r\n                                    <th colspan=\"6\">No. Transaksi : <b>PUSAT/IN/PEN/001/10-2020</b></th>\r\n                                </tr> */}\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td><b>1002</b></td>\r\n                                <td>Peralatan</td>\r\n                                <td>-</td>\r\n                                <td>1.000.000</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>4</td>\r\n                                <td><b>1002</b></td>\r\n                                <td>Modal</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>2.000.000</td>\r\n                            </tr>\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    <hr></hr>\r\n                    <MDBRow className='mx-3'>\r\n                        <MDBCol lg=\"9\">\r\n                            <h5 className=\"pt-2 mx-2\">\r\n                                <small>TOTAL DEBIT</small><br></br>\r\n                                <small>TOTAL KREDIT</small>\r\n                            </h5>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBBox display='flex' justifyContent=\"start\">\r\n                                <h5 className=\"pt-2 mx-2\">\r\n                                    <small><b>Rp. 52.000.000</b></small><br></br>\r\n                                    <small><b>Rp. 52.000.000</b></small>\r\n                                </h5>\r\n                            </MDBBox>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <hr></hr>\r\n                    {review && (\r\n                        <MDBRow className='mx-3'>\r\n                            <MDBCol lg=\"6\">\r\n                                <TextField fullWidth label=\"Memo\" defaultValue=\"Default Value\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={4} />\r\n                                <MDBBtn color=\"dark-green\" gradient=\"blue\" >\r\n                                    Simpan\r\n                                    </MDBBtn>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    )}\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JurnalPerbulanComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport JurnalPerbulanComponent from '../../components/Jurnal/JurnalPerbulanComponent';\r\n\r\n\r\n\r\nexport default function JurnalPerbulan(props) {\r\n    const { match: { params } } = props;\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem MDBBreadcrumbItem><b>Jurnal Perbulan</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n              <JurnalPerbulanComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst IncomeReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-OUTCOME-TYPE':\r\n            return {\r\n                ...state,\r\n                listOutcomeType: action.payload\r\n            }\r\n        case 'LIST-OUTCOME':\r\n            return {\r\n                ...state,\r\n                listOutcome: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListOutcomeType = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan Tipe Transaksi Keluar'})\r\n    axios.get(`${API}/outcome_type`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-OUTCOME-TYPE', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst AddOutcome = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Transaksi...'})\r\n    axios.post(`${API}/outcome/store`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Transaksi Berhasil Disimpan!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListOutcome = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Transaksi Keluar...'})\r\n    axios.get(`${API}/outcome`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-OUTCOME', payload:res.data.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    IncomeReducer,\r\n    {ListOutcomeType, AddOutcome, ListOutcome},\r\n    {loading: false, message:'', listOutcomeType:[], listOutcome:[]}\r\n)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Context as AuthContext } from '../../../services/Context/AuthContext'\r\nimport {Context as AccountContext} from '../../../services/Context/AccountContext'\r\nimport {Context as OutcomeContext} from '../../../services/Context/OutcomeContext'\r\nimport { Button, TextField, Select, MenuItem, InputLabel, FormControl, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TransaksiKeluarComponent = (props) => {\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    const {state:{listAccount}, ListAccount} = useContext(AccountContext)\r\n    const {state, ListOutcomeType, AddOutcome} = useContext(OutcomeContext)\r\n    const [openDialogApprove, setOpenDialogApprove] = useState(false)\r\n    const [dataTanggal, setDataTanggal] = useState([])\r\n    const [tanggal, setTanggal] = useState('')\r\n    const [bulan, setBulan] = useState('')\r\n    const [value, setValue] = useState({\r\n        account_id: '',\r\n        outcome_type_id: '',\r\n        invoice_number: '',\r\n        description: '',\r\n        payment_method: '',\r\n        date: '',\r\n        ammount: '',\r\n        information: ''\r\n    })\r\n    let today = new Date()\r\n\r\n    const handleChange = name => event => {\r\n        setValue({\r\n            ...value,\r\n            [name]: event.target.value\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ListAccount()\r\n        ListOutcomeType()\r\n        const loopingTanggal = () => {\r\n            let tanggal = '';\r\n            let data_tanggal = [];\r\n            for (tanggal = 1; tanggal <= 31; tanggal++) {\r\n                data_tanggal.push({ 'tanggal': `${tanggal}` })\r\n            }\r\n            setDataTanggal(data_tanggal)\r\n        }\r\n        loopingTanggal()\r\n\r\n    }, []);\r\n\r\n\r\n    const dialogApprove = () => (\r\n        <Dialog open={openDialogApprove} onClose={handleApproveCancle} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Simpan Transakasi?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Sebelum menyimpan transaksi, pastikan inputan sudah benar agar transakasi anda tidak di tolak oleh pihak Akuntan!\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleApproveCancle} color=\"secondary\">\r\n                    Batal\r\n                </Button>\r\n                <Button onClick={handleApproveProccess} color=\"primary\" autoFocus disabled={state.loading}>\r\n                    {state.loading?state.message:'Simpan Transaksi'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const handleApproveDialog = () => {\r\n        setOpenDialogApprove(true)\r\n    }\r\n\r\n    const handleApproveCancle = () => {\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    const handleApproveProccess = () => {\r\n        let data = {\r\n            user_id: isAuthenticated().data.id,\r\n            outcometype_id: value.outcome_type_id,\r\n            account_id: value.account_id,\r\n            invoice_number: value.invoice_number,\r\n            ammount: value.ammount,\r\n            information: value.information,\r\n            description: value.description,\r\n            payment_method: value.payment_method,\r\n            date: today.getFullYear()+'-'+bulan+'-'+tanggal\r\n        }\r\n        AddOutcome(data, () => setValue({\r\n            outcometype_id: '',\r\n            account_id: '',\r\n            invoice_number: '',\r\n            ammount: '',\r\n            information: '',\r\n            description: '',\r\n            payment_method: '',\r\n            date: ''\r\n        }))\r\n        // alert(JSON.stringify(data))\r\n        setOpenDialogApprove(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {today.getFullYear()} */}\r\n            {/* {JSON.stringify(listOutcomeType)} */}\r\n            <h4>Input Transaksi Keluar</h4>\r\n            <hr className=\"\" />\r\n            <MDBCard className='mb-2'>\r\n                {dialogApprove()}\r\n                {state.loading && (\r\n                    <LinearProgress />\r\n                )}\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"7\">\r\n                            <form>\r\n                                <TextField fullWidth label=\"No. Transaksi / Invoice\" variant=\"outlined\" margin=\"normal\" value={value.invoice_number} onChange={handleChange('invoice_number')} /><br></br>\r\n                                <TextField fullWidth label=\"Deskripsi Transaksi\" variant=\"outlined\" margin=\"normal\" multiline rowsMax={4} value={value.description} onChange={handleChange('description')} /><br></br>\r\n                                <br></br>\r\n                                <MDBRow className='m-12'>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Tanggal</InputLabel>\r\n                                        <Select fullWidth value={tanggal} onChange={(event) => setTanggal(event.target.value)}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Pilih Tanggal</em>\r\n                                            </MenuItem>\r\n                                            {dataTanggal.map((item) => (\r\n                                                <MenuItem key={item.tanggal} value={item.tanggal}>{item.tanggal}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Bulan</InputLabel>\r\n                                        <Select fullWidth value={bulan} onChange={(event) => setBulan(event.target.value)}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Pilih Bulan</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={1}>Januari</MenuItem>\r\n                                            <MenuItem value={2}>Pebruari</MenuItem>\r\n                                            <MenuItem value={3}>Maret</MenuItem>\r\n                                            <MenuItem value={4}>April</MenuItem>\r\n                                            <MenuItem value={5}>Mei</MenuItem>\r\n                                            <MenuItem value={6}>Juni</MenuItem>\r\n                                            <MenuItem value={7}>Juli</MenuItem>\r\n                                            <MenuItem value={8}>Agustus</MenuItem>\r\n                                            <MenuItem value={9}>September</MenuItem>\r\n                                            <MenuItem value={10}>Oktober</MenuItem>\r\n                                            <MenuItem value={11}>Nopember</MenuItem>\r\n                                            <MenuItem value={12}>Desember</MenuItem>\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                    <MDBCol lg=\"4\">\r\n                                        <InputLabel>Tahun</InputLabel>\r\n                                        <Select fullWidth value={2020}>\r\n                                            <MenuItem value={2020}>\r\n                                                <em>2020</em>\r\n                                            </MenuItem>\r\n                                        </Select>\r\n                                    </MDBCol>\r\n                                </MDBRow><br></br>\r\n                                <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Jenis Akun</InputLabel>\r\n                                    <Select label=\"Metode Pembayaran\" value={value.account_id} onChange={handleChange('account_id')}>\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        {listAccount.map((item, i) => (\r\n                                            <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </form>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"5\">\r\n\r\n                            <MDBRow className='m-12'>\r\n                                <MDBCol lg=\"12\">\r\n                                    <TextField fullWidth label=\"Jumlah Pengeluaran\" defaultValue=\"Default Value\" variant=\"outlined\" margin=\"normal\" type='number' value={value.ammount} onChange={handleChange('ammount')} />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <MDBRow className='m-12'>\r\n                                <MDBCol lg=\"12\">\r\n                                    <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Jenis Pengeluaran</InputLabel>\r\n                                        <Select label=\"Metode Pembayaran\" value={value.outcome_type_id} onChange={handleChange('outcome_type_id')}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>None</em>\r\n                                            </MenuItem>\r\n                                            {state.listOutcomeType.map((item, i) => (\r\n                                                <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <FormControl variant=\"outlined\" margin='normal' fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Metode Pembayaran</InputLabel>\r\n                                <Select label=\"Metode Pembayaran\" value={value.payment_method} onChange={handleChange('payment_method')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Cash'>Tunai</MenuItem>\r\n                                    <MenuItem value='Transfer'>Transfer</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField fullWidth label=\"Keterangan\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} value={value.information} onChange={handleChange('information')} />\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"12\" >\r\n                                    <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                                        <MDBBtn color=\"dark-green\" onClick={() => handleApproveDialog('approve')} disabled={state.loading}>\r\n                                            Simpan Transaksi\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(TransaksiKeluarComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport TransaksiKeluarComponent from '../../../components/Transaksi/Pengeluaran/TransaksiKeluarComponent';\r\n\r\n\r\n\r\nexport default function TransaksiKeluar(props) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Transaksi Keluar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <TransaksiKeluarComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Context as OutcomeContext } from '../../../services/Context/OutcomeContext'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline } from \"mdbreact\";\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst ListComponent = (props) => {\r\n    const { state, ListOutcome } = useContext(OutcomeContext)\r\n\r\n    useEffect(() => {\r\n        ListOutcome()\r\n        return () => {\r\n\r\n        };\r\n    }, []);\r\n\r\n    const ListTransaksi = () => (\r\n        <Fragment>\r\n            {state.listOutcome.map((item, i) => (\r\n                <MDBCard className='mb-2'>\r\n                    <MDBCardBody className='p-1'>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"9\">\r\n                                <MDBTypography tag='h5' className=\"pt-2 mx-2\"> {item.invoice_number} <small>{item.account.name}-{item.account.reference_number}</small></MDBTypography>\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"3\">\r\n                                <MDBRow>\r\n                                    <MDBBtn color=\"cyan\" size=\"sm\" >Detail</MDBBtn>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            ))}\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {JSON.stringify(state.listOutcome)} */}\r\n            <MDBContainer fluid>\r\n                <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBCol md=\"3\">\r\n                        <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" />\r\n                            <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                                Cari\r\n                                </MDBBtn>\r\n                        </MDBFormInline>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n                {state.loading && (\r\n                    <MDBBox display=\"flex\" justifyContent=\"center\" >\r\n                        <CircularProgress />\r\n                    </MDBBox>\r\n                )}\r\n                {!state.loading && (\r\n                    ListTransaksi()\r\n                )}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(ListComponent);\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../../components/Transaksi/Pengeluaran/ListComponent';\r\n\r\n\r\nexport default function ListTransaksiKeluar(props) {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Daftar Transaksi Keluar</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, useContext, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Select, MenuItem, InputLabel, FormControl, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport {Context as ProductContext} from '../../services/Context/ProductContext'\r\n\r\nconst FormComponent = () => {\r\n    const classes = useStyles();\r\n    const {state, AddProduct} = useContext(ProductContext)\r\n    const [file, setFile] = useState('')\r\n    const [value, setValue] = useState({\r\n        product_category_id: '',\r\n        name: '',\r\n        code: '',\r\n        unit_product: '',\r\n        stok: '',\r\n        image: '',\r\n        information: ''\r\n    })\r\n    const form = useRef(null)\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setValue({\r\n            ...value,\r\n            [name]: event.target.value\r\n        })\r\n    }\r\n    const handleReset = () => {\r\n        setValue({\r\n            product_category_id: '',\r\n            name: '',\r\n            code: '',\r\n            unit_product: '',\r\n            stok: '',\r\n            image: '',\r\n            information: ''\r\n        })\r\n    }\r\n\r\n    // const handleSave = () => {\r\n    //     let formData = new FormData();\r\n    //     formData.append('product_category_id', value.product_category_id)\r\n    //     formData.append('name', value.name)\r\n    //     formData.append('code', value.code)\r\n    //     formData.append('unit_product', value.unit_product)\r\n    //     formData.append('stok', value.stok)\r\n    //     formData.append('image', file)\r\n    //     formData.append('information', value.information)\r\n    //     // alert(JSON.stringify(formData))\r\n    //     AddProduct(formData, () => handleReset())\r\n    // }\r\n\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        let formData = new FormData();\r\n        formData.append('product_category_id', value.product_category_id)\r\n        formData.append('name', value.name)\r\n        formData.append('code', value.code)\r\n        formData.append('unit_product', value.unit_product)\r\n        formData.append('stok', value.stok)\r\n        formData.append('image', file)\r\n        formData.append('information', value.information)\r\n        AddProduct(formData, () => handleReset())\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h4>Tambah Data Produk</h4>\r\n            <hr className=\"\" />\r\n            {/* {JSON.stringify(file)} */}\r\n            <MDBCard className='mb-2'>\r\n                {state.loading && ( <LinearProgress /> )}\r\n                <MDBCardBody className='p-1'>\r\n                    <form ref={form} onSubmit={submit}>\r\n                        <MDBRow className='m-3'>\r\n                            <MDBCol lg=\"7\">\r\n                                <TextField fullWidth type='text' label=\"Nama Produk\" variant=\"outlined\" margin=\"normal\" onChange={handleChange('name')} value={value.name} name=\"value[name]\"  />\r\n                                <TextField fullWidth type='text' label=\"Kode Produk\" variant=\"outlined\" margin=\"normal\" onChange={handleChange('code')} value={value.code} name=\"value[code]\" />\r\n                                <FormControl fullWidth className={classes.formControl}>\r\n                                    <InputLabel>Kategori Produk</InputLabel>\r\n                                    <Select onChange={handleChange('product_category_id')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>Roti Sobek</MenuItem>\r\n                                    <MenuItem value={2}>Roti Tawar</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={classes.formControl} >\r\n                                    <InputLabel>Satuan Produk</InputLabel>\r\n                                    <Select onChange={handleChange('unit_product')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Unit'>Unit</MenuItem>\r\n                                    <MenuItem value='Lusin'>Lusin</MenuItem>\r\n                                    <MenuItem value='Item'>Item</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField fullWidth label=\"Stok Produk\" variant=\"outlined\" margin=\"normal\" type='number' onChange={handleChange('stok')} value={value.stok} />\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"5\">\r\n                                <DropzoneArea acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']} filesLimit={1} onChange={(file) => setFile(file[0])} maxFileSize={5000000}/>\r\n                                <TextField fullWidth label=\"Keterangan\" variant=\"outlined\" margin=\"normal\" multiline rows={3} rowsMax={5} onChange={handleChange('information')} />\r\n                                <MDBRow className='mt-3 mb-2'>\r\n                                    <MDBCol lg=\"6\">\r\n                                        <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                                            <MDBBtn color=\"danger\" onClick={handleReset}>\r\n                                                Reset\r\n                                            </MDBBtn>\r\n                                        </MDBBox>\r\n                                    </MDBCol>\r\n                                    <MDBCol lg=\"6\" >\r\n                                        <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                                            <MDBBtn color=\"dark-green\" type='submit' disabled={state.loading}>\r\n                                                Simpan Produk\r\n                                            </MDBBtn>\r\n                                        </MDBBox>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </form>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormComponent;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 220,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport FormComponent from '../../components/product/FormComponent';\r\n\r\n\r\nexport default function AddProduct() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Tambah Produk</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <FormComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline, MDBIcon } from \"mdbreact\";\r\nimport {LinearProgress} from '@material-ui/core';\r\nimport {Context as ProductContext} from '../../services/Context/ProductContext'\r\n\r\nconst ListComponent = () => {\r\n    const {state, ListProduct, DeleteProduct} = useContext(ProductContext)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        ListProduct()\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        if(search === ''){\r\n            alert('Ketikan yg ingin dicari!')\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n    const handleResetSearch = () => {\r\n        setSearch('')\r\n    }\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        DeleteProduct(id, () => ListProduct())\r\n        // alert(id)\r\n    }\r\n\r\n    const ItemProduct = ({id, name, category}) => (\r\n        <Fragment>\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"8\">\r\n                            <MDBTypography tag='h5' className=\"pt-2 mx-2\"> {name} <small>{category}</small></MDBTypography>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"4\">\r\n                            <MDBRow>\r\n                                <MDBBtn color=\"info\" size=\"sm\"><MDBIcon icon=\"edit\" className=\"ml-1\" /> Edit</MDBBtn>\r\n                                <MDBBtn gradient=\"peach\" size=\"sm\"><MDBIcon icon=\"cogs\" className=\"ml-1\" /> Mode Produksi</MDBBtn>\r\n                                <MDBBtn color=\"danger\" size=\"sm\" onClick={() => handleDelete(id)}><MDBIcon icon=\"minus-circle\" className=\"ml-1\"/> Hapus</MDBBtn>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n           <MDBContainer fluid>\r\n                <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                    <MDBCol md=\"4\">\r\n                        <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                            <MDBBtn gradient=\"aqua\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleSearch}>\r\n                                Cari\r\n                            </MDBBtn>\r\n                            {search !== '' && (\r\n                                <MDBBtn color=\"red\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleResetSearch}>\r\n                                    Reset\r\n                                </MDBBtn>\r\n                            )}\r\n                        </MDBFormInline>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n                {state.loading && (\r\n                    <LinearProgress /> \r\n                )}\r\n                {state.listProduct.map(item => (\r\n                    <ItemProduct name={item.name} category={item.kategori} id={item.id} />\r\n                ))}\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ListComponent;\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../components/product//ListComponent';\r\n\r\nexport default function ListProduct() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Daftar Produk</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst StockOpnameReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-STOCK-OPNAME':\r\n            return {\r\n                ...state,\r\n                listStockOpname:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListStockOpname = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Stock Opname'})\r\n    axios.get(`${API}/stock-opname`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-STOCK-OPNAME', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst AddStockOpname = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Stcok Opname...'})\r\n    axios.post(`${API}/stock-opname`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Kategori Bahan Baku...'})\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Kategori Bahan Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    StockOpnameReducer,\r\n    {ListStockOpname, AddStockOpname, DeleteMaterialCategory},\r\n    {loading: false, message:'', listStockOpname:[]}\r\n)","import React, { useState, useContext, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl, Grid, InputLabel, LinearProgress, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {Context as ProductContext} from '../../services/Context/ProductContext'\r\nimport {Context as StockOpnameContext} from '../../services/Context/StockOpnameContext'\r\n\r\nconst AddFormComponent = () => {\r\n    const classes = useStyles();\r\n    const {state:{listProduct}, ListProduct} = useContext(ProductContext)\r\n    const {state, AddStockOpname, ListStockOpname} = useContext(StockOpnameContext)\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [date, setDate] = useState('') \r\n    const [value, setValue] = useState({\r\n        product_id:'',\r\n        date:'',\r\n        status:'',\r\n        stock:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        ListProduct()\r\n    }, []);\r\n\r\n    const handleDateChange = (date) => {\r\n        let formattedDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n        setSelectedDate(date);\r\n        setDate(formattedDate)\r\n        setValue({\r\n            ...value,\r\n            date:formattedDate\r\n        })\r\n        // alert(formattedDate)\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setValue({\r\n            ...value,\r\n            [name]: event.target.value\r\n        })\r\n    }\r\n    const handleReset = () => {\r\n        setValue({\r\n            product_id:'',\r\n            date:'',\r\n            status:'',\r\n            stock:''\r\n        })\r\n        ListStockOpname()\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let data = {\r\n            product_id  : value.product_id,\r\n            date        : value.date,\r\n            status      : value.status,\r\n            stock       : value.stock \r\n        }\r\n        AddStockOpname(data, () => handleReset())\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* {JSON.stringify(value)} */}\r\n            {state.loading && ( <LinearProgress /> )}\r\n            <MDBCard className='mb-2'> \r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"2\">\r\n                            <FormControl fullWidth className={classes.formControl} >\r\n                                <InputLabel>Produk</InputLabel>\r\n                                <Select onChange={handleChange('product_id')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {listProduct.map(item => (\r\n                                        <MenuItem value={item.id}> {item.name} </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <FormControl fullWidth className={classes.formControl} >\r\n                                <InputLabel>Status</InputLabel>\r\n                                <Select onChange={handleChange('status')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Stok Awal'>Stok Awal</MenuItem>\r\n                                    <MenuItem value='Penjulan'>Penjualan</MenuItem>\r\n                                    <MenuItem value='Sisa Dibuang'>Sisa Dibuang</MenuItem>\r\n                                    <MenuItem value='Produksi'>Produksi</MenuItem>\r\n                                    <MenuItem value='Hasil Produksi'>Hasil Produksi</MenuItem>\r\n                                    <MenuItem value='Stock Akhir'>Stock Akhir</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Tanggal\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"2\">\r\n                            <TextField fullWidth type='number' label=\"Stok\" variant=\"outlined\" margin=\"normal\" onChange={handleChange('stock')} />\r\n                        </MDBCol>\r\n\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"12\">\r\n                                    <MDBBox justifyContent='between'>\r\n                                        <MDBBtn color=\"dark-green\" disabled={state.loading} onClick={handleSave}>  \r\n                                            Tambah Stok\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddFormComponent;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 220,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport { MDBRow, MDBCol, MDBBtn, MDBIcon, MDBBox, MDBFormInline } from 'mdbreact';\r\nimport AddFormComponent from './AddFormComponent';\r\nimport {Context as StockOpnameContext} from '../../services/Context/StockOpnameContext'\r\n\r\n\r\nconst ListComponent = () => {\r\n    const classes = useStyles();\r\n    const {state, ListStockOpname} = useContext(StockOpnameContext)\r\n    const [search, setSearch] = useState('')\r\n   \r\n    const handleSearch = () => {\r\n        if (search === '') {\r\n            alert('Ketikan yg ingin dicari!')\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n    const handleResetSearch = () => {\r\n        setSearch('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        ListStockOpname()\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <MDBRow>\r\n                <MDBCol lg='8'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                        <MDBBtn color=\"unique\" size=\"sm\"><MDBIcon icon=\"plus-circle\" className=\"ml-1\" /> Tambah Stok</MDBBtn>\r\n                    </MDBBox>\r\n                </MDBCol>\r\n                <MDBCol lg='4'>\r\n                    <MDBFormInline className=\"md-form mr-auto mb-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                        <MDBBtn gradient=\"aqua\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleSearch}>\r\n                            Cari\r\n                            </MDBBtn>\r\n                        {search !== '' && (\r\n                            <MDBBtn color=\"red\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleResetSearch}>\r\n                                Reset\r\n                            </MDBBtn>\r\n                        )}\r\n                    </MDBFormInline>\r\n                </MDBCol>\r\n            </MDBRow> */}\r\n            <AddFormComponent />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Produk</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Tanggal</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Stock</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {state.listStockOpname.map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.product_name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.date}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.status}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.stock}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ListComponent\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../components/StockOpname/ListComponent';\r\n\r\n\r\nexport default function StockOpname() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Stock Opname Produk</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport { MDBRow, MDBCol, MDBBtn, MDBIcon, MDBBox, MDBFormInline } from 'mdbreact';\r\n\r\n\r\nconst ListComponent = () => {\r\n    const classes = useStyles();\r\n    const [search, setSearch] = useState('')\r\n\r\n    const handleSearch = () => {\r\n        if(search === ''){\r\n            alert('Ketikan yg ingin dicari!')\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n    const handleResetSearch = () => {\r\n        setSearch('')\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MDBRow>\r\n                <MDBCol lg='8'>\r\n                    <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                        <MDBBtn color=\"unique\" size=\"sm\"><MDBIcon icon=\"plus-circle\" className=\"ml-1\" /> Tambah Proses</MDBBtn>\r\n                    </MDBBox>\r\n                </MDBCol>\r\n                <MDBCol lg='4'>\r\n                    <MDBFormInline className=\"md-form mr-auto mb-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                        <MDBBtn gradient=\"aqua\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleSearch}>\r\n                            Cari\r\n                            </MDBBtn>\r\n                        {search !== '' && (\r\n                            <MDBBtn color=\"red\" rounded size=\"sm\" className=\"mr-auto\" onClick={handleResetSearch}>\r\n                                Reset\r\n                            </MDBBtn>\r\n                        )}\r\n                    </MDBFormInline>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Tanggal Produksi</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Estimasi Selesai</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Kode Produksi</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Nama Produk</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.calories}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.fat}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.carbs}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ListComponent\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs) {\r\n    return { name, calories, fat, carbs };\r\n}\r\n\r\nconst rows = [\r\n    createData('11/10/2020', '13/10/2020', 'PRODUKSI/010/11/10', 'Roti Strawbery'),\r\n    createData('11/10/2020', '13/10/2020', 'PRODUKSI/010/11/10', 'Lemper'),\r\n    createData('11/10/2020', '13/10/2020', 'PRODUKSI/010/11/10', 'Lemper'),\r\n    createData('11/10/2020', '13/10/2020', 'PRODUKSI/010/11/10', 'Lemper'),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../components/ProductProccess/ListComponent';\r\n\r\n\r\nexport default function ProccessProduct() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Produk Dalam Proses</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst MaterialCategoryReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-MATERIAL-CATEGORY':\r\n            return {\r\n                ...state,\r\n                listMaterialCategory:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ListMaterialCategory = dispatch => () => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Kategori Material'})\r\n    axios.get(`${API}/raw-category`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-MATERIAL-CATEGORY', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst AddMaterialCategory = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Kategori Bahan Baku...'})\r\n    axios.post(`${API}/raw-category`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Kategori Bahan Baku...'})\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Kategori Bahan Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    MaterialCategoryReducer,\r\n    {ListMaterialCategory, AddMaterialCategory, DeleteMaterialCategory},\r\n    {loading: false, message:'', listMaterialCategory:[]}\r\n)","import CreateDataContext from './CreateDataContext'\r\nimport axios from 'axios'\r\nimport {API} from '../Api/AccountingApi'\r\n\r\nconst RawMaterialReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                message: action.payload,\r\n            }\r\n        case 'NO-LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: '',\r\n            }\r\n        case 'LIST-MATERIAL-RAW':\r\n            return {\r\n                ...state,\r\n                listMaterialRaw:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AddRawMaterial = dispatch => (data, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menyimpan Data Bahan Baku...'})\r\n    axios.post(`${API}/raw-material`, data)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Bahan Baku Berhasil Ditambahkan!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\nconst ListRawMaterial = dispatch => (filter) => {\r\n    dispatch ({type: 'LOADING', payload: 'Menampilkan List Bahan Baku'})\r\n    if(filter != ''){\r\n        var url = `${API}/raw-material?filter=${filter}`;\r\n    }else{\r\n        var url = `${API}/raw-material`;\r\n    }\r\n    axios.get(url)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res.data.data.data))\r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            dispatch({type: 'LIST-MATERIAL-RAW', payload:res.data.data})\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\n\r\nconst DeleteMaterialCategory = dispatch => (id, callback) => {\r\n    dispatch ({type: 'LOADING', payload: 'Mengahapus Data Kategori Bahan Baku...'})\r\n    axios.delete(`${API}/raw-category/${id}`)\r\n      .then(res => {\r\n        //   alert(JSON.stringify(res)) \r\n        if(res.data.success){\r\n            dispatch({type: 'NO-LOADING'})\r\n            if(callback){\r\n                callback()\r\n                alert('Transaksi Berhasil Dihapus!')\r\n            }\r\n        }else{\r\n            alert(res.data.message)\r\n            dispatch({type: 'NO-LOADING'})\r\n        }\r\n    }).catch(error => {\r\n        dispatch({type: 'NO-LOADING'})\r\n        alert(error)\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const {Provider, Context} = CreateDataContext(\r\n    RawMaterialReducer,\r\n    {AddRawMaterial, ListRawMaterial,  DeleteMaterialCategory},\r\n    {loading: false, message:'', listMaterialRaw:[]}\r\n)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Select, MenuItem, InputLabel, FormControl, LinearProgress } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport {Context as MaterialCategoryContext} from '../../services/Context/MaterialCategoryContext'\r\nimport {Context as RawMaterialContext} from '../../services/Context/RawMaterialContext'\r\n\r\nconst FormComponent = () => {\r\n    const classes = useStyles();\r\n    const {state:{listMaterialCategory}, ListMaterialCategory} = useContext(MaterialCategoryContext)\r\n    const {state, AddRawMaterial} = useContext(RawMaterialContext)\r\n    const [value, setValue] = useState({\r\n        raw_material_category_id: '',\r\n        name : '',\r\n        code : '',\r\n        type : '', \r\n        unit_buy : '',\r\n        unit_use : '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        ListMaterialCategory()\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        setValue({\r\n            ...value,\r\n            [name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setValue({\r\n            raw_material_category_id: '',\r\n            name : '',\r\n            code : '',\r\n            type : '', \r\n            unit_buy : '',\r\n            unit_use : '',\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let data = {\r\n            raw_material_category_id: value.raw_material_category_id,\r\n            name : value.name,\r\n            code : value.code,\r\n            type : value.type, \r\n            unit_buy : value.unit_buy,\r\n            unit_use : value.unit_buy,\r\n        }\r\n        AddRawMaterial(data, () => handleReset())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Tambah Data Bahan Baku</h4>\r\n            <hr className=\"\" />\r\n            {/* {JSON.stringify(value)} */}\r\n            {state.loading && (\r\n                <LinearProgress />\r\n            )}\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"7\">\r\n                            <TextField fullWidth label=\"Nama Bahan Baku\" variant=\"outlined\" margin=\"normal\" value={value.name} onChange={handleChange('name')} />\r\n                            <TextField fullWidth label=\"Kode Bahan Baku\" variant=\"outlined\" margin=\"normal\" value={value.code} onChange={handleChange('code')}/>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel>Kategori Bahan Baku</InputLabel>\r\n                                <Select onChange={handleChange('raw_material_category_id')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {listMaterialCategory.map(item => (\r\n                                        <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            {/* <TextField fullWidth label=\"Unit Konversi(x)\" variant=\"outlined\" margin=\"normal\" type='number' /> */}\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"5\">\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel>Jenis</InputLabel>\r\n                                <Select onChange={handleChange('type')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>Bahan Baku Langsung</MenuItem>\r\n                                    <MenuItem value={2}>Bahan Baku Tidak Langsung</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel>Satuan Beli</InputLabel>\r\n                                <Select onChange={handleChange('unit_buy')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Kilogram'>Kilogram</MenuItem>\r\n                                    <MenuItem value='Pcs'>Pcs</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel>Satuan Guna</InputLabel>\r\n                                <Select onChange={handleChange('unit_use')}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value='Gram'>Gram</MenuItem>\r\n                                    <MenuItem value='Butir'>Butir</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"6\">\r\n                                    <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                                        <MDBBtn color=\"danger\" onClick={handleReset}>\r\n                                            Reset\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                                <MDBCol lg=\"6\" >\r\n                                    <MDBBox display=\"flex\" justifyContent=\"end\">\r\n                                        <MDBBtn color=\"dark-green\" onClick={handleSave}>\r\n                                            Simpan Bahan Baku\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormComponent;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 220,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import React, { Fragment, useState, useContext } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport FormComponent from '../../components/BahanBaku/FormComponent';\r\n\r\nexport default function AddBahanBaku() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Tambah Bahan Baku</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <FormComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from '@material-ui/core';\r\nimport { MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn, MDBBox } from 'mdbreact';\r\nimport {Context as MaterialCategoryContext} from '../../../services/Context/MaterialCategoryContext'\r\n\r\nconst FormComponent = () => {\r\n    const {state, AddMaterialCategory, ListMaterialCategory} = useContext(MaterialCategoryContext)\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleSave = () => {\r\n        let data = {\r\n            name: value\r\n        }\r\n        AddMaterialCategory(data, () => ListMaterialCategory())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Informasi Kategori Bahan Baku</h4>\r\n            <hr/>\r\n            {/* {JSON.stringify(value)} */}\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow className='m-3'>\r\n                        <MDBCol lg=\"7\">\r\n                            <TextField fullWidth label=\"Nama Bahan Baku\" variant=\"outlined\" margin=\"normal\" onChange={(e) => setValue(e.target.value)} />\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"5\">\r\n                            <MDBRow className='mt-3 mb-2'>\r\n                                <MDBCol lg=\"12\">\r\n                                    <MDBBox  justifyContent='between'>\r\n                                        <MDBBtn color=\"dark-green\" disabled={state.loading} onClick={handleSave}>\r\n                                            Simpan Bahan Baku\r\n                                        </MDBBtn>\r\n                                    </MDBBox>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormComponent;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 220,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import React, { Fragment, useContext, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBTypography, MDBCard, MDBCardBody, MDBBox, MDBBtn, MDBFormInline } from \"mdbreact\";\r\nimport {Context as MaterialCategoryContext} from '../../../services/Context/MaterialCategoryContext'\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst ListComponent = () => {\r\n    const {state, ListMaterialCategory, DeleteMaterialCategory} = useContext(MaterialCategoryContext)\r\n\r\n    useEffect(() => {\r\n        ListMaterialCategory()\r\n        return () => {\r\n            \r\n        };\r\n    }, []);\r\n\r\n    const handleDelete = (id) => {\r\n        DeleteMaterialCategory(id, () => ListMaterialCategory())\r\n    }\r\n\r\n    const ListCategory = ({id, name}) => {\r\n        return(\r\n            <MDBCard className='mb-2'>\r\n                <MDBCardBody className='p-1'>\r\n                    <MDBRow>\r\n                        <MDBCol lg=\"9\">\r\n                            <MDBTypography tag='h5' className=\"pt-2 mx-2\"><b>{name}</b></MDBTypography>\r\n                        </MDBCol>\r\n                        <MDBCol lg=\"3\">\r\n                            <MDBRow>\r\n                                <MDBBtn color=\"danger\" size=\"sm\" onClick={() => handleDelete(id)}>Hapus</MDBBtn>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        )   \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {JSON.stringify(state.listMaterialCategory)} */}\r\n            {state.loading && (\r\n                <LinearProgress />\r\n            )}\r\n            {!state.loading && (\r\n                <Fragment>\r\n                    {state.listMaterialCategory.map(item => (\r\n                        <ListCategory name={item.name} id={item.id} />\r\n                    ))}\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListComponent\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport FormComponent from '../../components/BahanBaku/kategori/FormComponent';\r\nimport ListComponent from '../../components/BahanBaku/kategori/ListComponent';\r\n\r\n\r\n\r\n\r\nexport default function KategoriBahanBaku() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>Kategori Bahan Baku</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <FormComponent />\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, LinearProgress, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { MDBRow, MDBCol, MDBBtn, MDBFormInline, MDBBox, MDBContainer } from 'mdbreact';\r\nimport { Context as RawMaterialContext } from '../../services/Context/RawMaterialContext'\r\n\r\n\r\nconst ListComponent = () => {\r\n    const classes = useStyles();\r\n    const { state, ListRawMaterial } = useContext(RawMaterialContext)\r\n    const [search, setSearch] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n\r\n    // useEffect(() => {\r\n    //     ListRawMaterial(filter)\r\n    // }, [filter]);\r\n\r\n    useEffect(() => {\r\n        ListRawMaterial(filter)\r\n    }, []);\r\n\r\n    const handleFilter = (value) => {\r\n        setFilter(value)\r\n        ListRawMaterial(value)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        if (search === '') {\r\n            alert('Ketikan yg ingin dicari!')\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n    const handleResetSearch = () => {\r\n        setSearch('')\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MDBContainer fluid>\r\n                <MDBBox display='flex' alignContent='between'>\r\n                    <MDBCol size=\"9\">\r\n                        <MDBBox display=\"flex\" justifyContent=\"start\">\r\n                            <MDBCol md=\"6\">\r\n                                <InputLabel>Filter Bahan Baku</InputLabel>\r\n                                <Select fullWidth value={filter} onChange={(event) => handleFilter(event.target.value)}>\r\n                                    <MenuItem value=\"\">\r\n                                        <em>Pilih Jenis </em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>Bahan Baku Langsung</MenuItem>\r\n                                    <MenuItem value={2}>Bahan Baku Tidak Langsung</MenuItem>\r\n                                </Select>\r\n                            </MDBCol>\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n                    <MDBCol size=\"9\">\r\n                        <MDBBox display=\"flex\" justifyContent='end'>\r\n                            <MDBCol md=\"12\">\r\n                                <MDBFormInline className=\"md-form mr-auto mb-2\">\r\n                                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Cari Transaksi\" aria-label=\"Search\" />\r\n                                    <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                                        Cari\r\n                                </MDBBtn>\r\n                                </MDBFormInline>\r\n                            </MDBCol>\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n                </MDBBox>\r\n\r\n\r\n            </MDBContainer>\r\n            {state.loading && (\r\n                <LinearProgress />\r\n            )}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Nama Bahan</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Kode Bahan</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Jenis Bahan Baku</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Satuan Beli</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Satuan Guna</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {state.listMaterialRaw.map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.code}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.type == 1 ? 'Bahan Baku Langsung' : 'Bahan Baku Tidak Langsung'}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.unit_buy}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{row.unit_use}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ListComponent\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n","import React, { Fragment } from 'react'\r\nimport { MDBContainer, MDBBreadcrumb, MDBBreadcrumbItem, } from \"mdbreact\";\r\nimport ListComponent from '../../components/BahanBaku/ListComponent';\r\n\r\n\r\n\r\nexport default function ListBahanBaku() {\r\n    return (\r\n        <Fragment>\r\n            <MDBBreadcrumb >\r\n                <MDBBreadcrumbItem><b>List Bahan Baku</b></MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBContainer className=\"mt-0\" fluid>\r\n                <ListComponent />\r\n            </MDBContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport AccountantRoute from './services/Route/AccountantRoute';\r\nimport AdminRoute from './services/Route/AdminRoute';\r\nimport PrivateRoute from './services/Route/PrivateRoute';\r\nimport Layout from './components/layouts/Layout';\r\nimport Signin from './pages/Authentication/Signin';\r\nimport Home from './pages/Home/Home';\r\nimport Test from './pages/Test';\r\nimport TransaksiCabang from './pages/Transaksi/Cabang/TransaksiCabang';\r\nimport TransaksiPusat from './pages/Transaksi/Pusat/TransaksiPusat';\r\nimport ReviewTransaksi from './pages/Transaksi/ReviewTransaksi';\r\nimport JurnalPerHari from './pages/Jurnal/JurnalPerhari';\r\nimport BukuBesar from './pages/BukuBesar/BukuBesar';\r\nimport MarketingRoute from './services/Route/MarketingRoute';\r\nimport TransaksiMasuk from './pages/Transaksi/Pusat/TransaksiMasuk';\r\nimport JurnalPerBulan from './pages/Jurnal/JurnalPerBulan';\r\nimport TransaksiKeluar from './pages/Transaksi/Pengeluaran/TransaksiKeluar';\r\nimport ListTransaksiKeluar from './pages/Transaksi/Pengeluaran/ListTransaksiKeluar';\r\nimport AddProduct from './pages/Product/AddProduct';\r\nimport ListProduct from './pages/Product/ListProduct';\r\nimport StockOpname from './pages/Product/StokOpname';\r\nimport ProccessProduct from './pages/Product/ProccessProduct';\r\nimport AddBahanBaku from './pages/BahanBaku/AddBahanBaku';\r\nimport KategoriBahanBaku from './pages/BahanBaku/KategoriBahanBaku';\r\nimport ListBahanBaku from './pages/BahanBaku/ListBahanBaku';\r\n\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/test' exact component={Test} />\r\n                    <Route path='/signin' exact component={Signin} />\r\n                    <Layout>\r\n                        <PrivateRoute path='/' exact component={Home} />\r\n                        <MarketingRoute path='/transaksi-masuk' exact component={TransaksiMasuk}/>\r\n                        <PrivateRoute path='/list-transaksi-pusat' exact component={TransaksiPusat} />\r\n                        <PrivateRoute path='/list-transaksi-cabang' exact component={TransaksiCabang} />\r\n                        <PrivateRoute path='/review-transaksi/:id' exact component={ReviewTransaksi} />\r\n                        <AdminRoute path='/transaksi-keluar' exact component={TransaksiKeluar} />\r\n                        <AdminRoute path='/list-pengeluaran' exact component={ListTransaksiKeluar} />\r\n                        <AccountantRoute path='/jurnal-perhari/:tanggal' exact component={JurnalPerHari} />\r\n                        <AccountantRoute path='/jurnal-perbulan/' exact component={JurnalPerBulan} /> \r\n                        <AccountantRoute path='/buku-besar' exact component={BukuBesar} />\r\n                        <AdminRoute path='/AddProduct' exact component={AddProduct} />\r\n                        <AdminRoute path='/ProductList' exact component={ListProduct} />\r\n                        <AdminRoute path='/StockOpname' exact component={StockOpname} />\r\n                        <AdminRoute path='/ProductInProccess' exact component={ProccessProduct} />\r\n                        <AdminRoute path='/AddRawMaterial' exact component={AddBahanBaku} />\r\n                        <AdminRoute path='/RawMaterialCategories' exact component={KategoriBahanBaku} />\r\n                        <AdminRoute path='/RawMaterialList' exact component={ListBahanBaku} />\r\n                    </Layout>\r\n                </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\nimport Router from './Router';\nimport {Provider as AuthProvider} from './services/Context/AuthContext'\nimport {Provider as CustomerProvider} from './services/Context/CustomerContext'\nimport {Provider as AccountProvider} from './services/Context/AccountContext'\nimport {Provider as IncomeProvider} from './services/Context/IncomeContext'\nimport {Provider as LedgerProvider} from './services/Context/LedgerContext'\nimport {Provider as OutcomeProvider} from './services/Context/OutcomeContext'\nimport {Provider as JournalProvider} from './services/Context/JournalContext'\nimport {Provider as MaterialCategoryProvider} from './services/Context/MaterialCategoryContext'\nimport {Provider as RawMaterialProvider} from './services/Context/RawMaterialContext'\nimport {Provider as ProductProvider} from './services/Context/ProductContext'\nimport {Provider as StockOpnameProvider} from './services/Context/StockOpnameContext'\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <CustomerProvider>\n        <IncomeProvider>\n          <AccountProvider>\n            <LedgerProvider>\n              <OutcomeProvider>\n                <JournalProvider>\n                  <MaterialCategoryProvider>\n                    <RawMaterialProvider>\n                      <ProductProvider>\n                        <StockOpnameProvider>\n                          <Router/>\n                        </StockOpnameProvider>\n                      </ProductProvider>\n                    </RawMaterialProvider>\n                  </MaterialCategoryProvider>\n                </JournalProvider>\n              </OutcomeProvider>\n            </LedgerProvider>\n          </AccountProvider>\n        </IncomeProvider>\n      </CustomerProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}